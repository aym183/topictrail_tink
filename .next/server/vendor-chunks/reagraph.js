"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/reagraph";
exports.ids = ["vendor-chunks/reagraph"];
exports.modules = {

/***/ "(ssr)/./node_modules/reagraph/dist/index.js":
/*!*********************************************!*\
  !*** ./node_modules/reagraph/dist/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Arrow: () => (/* binding */ Arrow),\n/* harmony export */   CameraControls: () => (/* binding */ CameraControls),\n/* harmony export */   CameraControlsContext: () => (/* binding */ CameraControlsContext),\n/* harmony export */   Cluster: () => (/* binding */ Cluster),\n/* harmony export */   Edge: () => (/* binding */ Edge$1),\n/* harmony export */   Edges: () => (/* binding */ Edges),\n/* harmony export */   FORCE_LAYOUTS: () => (/* binding */ FORCE_LAYOUTS),\n/* harmony export */   GraphCanvas: () => (/* binding */ GraphCanvas),\n/* harmony export */   GraphScene: () => (/* binding */ GraphScene),\n/* harmony export */   Icon: () => (/* binding */ Icon),\n/* harmony export */   Label: () => (/* binding */ Label),\n/* harmony export */   Lasso: () => (/* binding */ Lasso),\n/* harmony export */   Line: () => (/* binding */ Line),\n/* harmony export */   Node: () => (/* binding */ Node),\n/* harmony export */   RadialMenu: () => (/* binding */ RadialMenu),\n/* harmony export */   RadialSlice: () => (/* binding */ RadialSlice),\n/* harmony export */   Ring: () => (/* binding */ Ring$1),\n/* harmony export */   Sphere: () => (/* binding */ Sphere),\n/* harmony export */   SphereWithIcon: () => (/* binding */ SphereWithIcon),\n/* harmony export */   SphereWithSvg: () => (/* binding */ SphereWithSvg),\n/* harmony export */   Svg: () => (/* binding */ Svg),\n/* harmony export */   animationConfig: () => (/* binding */ animationConfig),\n/* harmony export */   attributeSizing: () => (/* binding */ attributeSizing),\n/* harmony export */   buildClusterGroups: () => (/* binding */ buildClusterGroups),\n/* harmony export */   buildGraph: () => (/* binding */ buildGraph),\n/* harmony export */   buildNodeEdges: () => (/* binding */ buildNodeEdges),\n/* harmony export */   calcLabelVisibility: () => (/* binding */ calcLabelVisibility),\n/* harmony export */   calculateClusters: () => (/* binding */ calculateClusters),\n/* harmony export */   calculateEdgeCurveOffset: () => (/* binding */ calculateEdgeCurveOffset),\n/* harmony export */   centralitySizing: () => (/* binding */ centralitySizing),\n/* harmony export */   circular2d: () => (/* binding */ circular2d),\n/* harmony export */   createElement: () => (/* binding */ createElement),\n/* harmony export */   custom: () => (/* binding */ custom),\n/* harmony export */   darkTheme: () => (/* binding */ darkTheme),\n/* harmony export */   findPath: () => (/* binding */ findPath),\n/* harmony export */   forceAtlas2: () => (/* binding */ forceAtlas2),\n/* harmony export */   forceDirected: () => (/* binding */ forceDirected),\n/* harmony export */   forceRadial: () => (/* binding */ forceRadial),\n/* harmony export */   getAdjacents: () => (/* binding */ getAdjacents),\n/* harmony export */   getArrowSize: () => (/* binding */ getArrowSize),\n/* harmony export */   getArrowVectors: () => (/* binding */ getArrowVectors),\n/* harmony export */   getClosestAxis: () => (/* binding */ getClosestAxis),\n/* harmony export */   getCurve: () => (/* binding */ getCurve),\n/* harmony export */   getCurvePoints: () => (/* binding */ getCurvePoints),\n/* harmony export */   getDegreesToClosest2dAxis: () => (/* binding */ getDegreesToClosest2dAxis),\n/* harmony export */   getExpandPath: () => (/* binding */ getExpandPath),\n/* harmony export */   getLabelOffsetByType: () => (/* binding */ getLabelOffsetByType),\n/* harmony export */   getLayoutCenter: () => (/* binding */ getLayoutCenter),\n/* harmony export */   getMidPoint: () => (/* binding */ getMidPoint),\n/* harmony export */   getNodeDepth: () => (/* binding */ getNodeDepth),\n/* harmony export */   getVector: () => (/* binding */ getVector),\n/* harmony export */   getVisibleEntities: () => (/* binding */ getVisibleEntities),\n/* harmony export */   isNodeInView: () => (/* binding */ isNodeInView),\n/* harmony export */   layoutProvider: () => (/* binding */ layoutProvider),\n/* harmony export */   lightTheme: () => (/* binding */ lightTheme),\n/* harmony export */   nodeSizeProvider: () => (/* binding */ nodeSizeProvider),\n/* harmony export */   nooverlap: () => (/* binding */ nooverlap),\n/* harmony export */   pageRankSizing: () => (/* binding */ pageRankSizing),\n/* harmony export */   prepareRay: () => (/* binding */ prepareRay),\n/* harmony export */   recommendLayout: () => (/* binding */ recommendLayout),\n/* harmony export */   tick: () => (/* binding */ tick),\n/* harmony export */   transformGraph: () => (/* binding */ transformGraph),\n/* harmony export */   updateNodePosition: () => (/* binding */ updateNodePosition),\n/* harmony export */   useCameraControls: () => (/* binding */ useCameraControls),\n/* harmony export */   useCenterGraph: () => (/* binding */ useCenterGraph),\n/* harmony export */   useCollapse: () => (/* binding */ useCollapse),\n/* harmony export */   useDrag: () => (/* binding */ useDrag),\n/* harmony export */   useGraph: () => (/* binding */ useGraph),\n/* harmony export */   useHoverIntent: () => (/* binding */ useHoverIntent),\n/* harmony export */   useSelection: () => (/* binding */ useSelection)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @react-three/fiber */ \"(ssr)/./node_modules/@react-three/fiber/dist/index-27578f8f.esm.js\");\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @react-three/fiber */ \"(ssr)/./node_modules/@react-three/fiber/dist/react-three-fiber.esm.js\");\n/* harmony import */ var d3_force_3d__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! d3-force-3d */ \"(ssr)/./node_modules/d3-force-3d/src/radial.js\");\n/* harmony import */ var d3_force_3d__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! d3-force-3d */ \"(ssr)/./node_modules/d3-force-3d/src/simulation.js\");\n/* harmony import */ var d3_force_3d__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! d3-force-3d */ \"(ssr)/./node_modules/d3-force-3d/src/x.js\");\n/* harmony import */ var d3_force_3d__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! d3-force-3d */ \"(ssr)/./node_modules/d3-force-3d/src/y.js\");\n/* harmony import */ var d3_force_3d__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! d3-force-3d */ \"(ssr)/./node_modules/d3-force-3d/src/collide.js\");\n/* harmony import */ var d3_force_3d__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! d3-force-3d */ \"(ssr)/./node_modules/d3-force-3d/src/manyBody.js\");\n/* harmony import */ var d3_force_3d__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! d3-force-3d */ \"(ssr)/./node_modules/d3-force-3d/src/link.js\");\n/* harmony import */ var d3_force_3d__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! d3-force-3d */ \"(ssr)/./node_modules/d3-force-3d/src/center.js\");\n/* harmony import */ var d3_force_3d__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! d3-force-3d */ \"(ssr)/./node_modules/d3-force-3d/src/z.js\");\n/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! d3-hierarchy */ \"(ssr)/./node_modules/d3-hierarchy/src/treemap/index.js\");\n/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! d3-hierarchy */ \"(ssr)/./node_modules/d3-hierarchy/src/hierarchy/index.js\");\n/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! d3-hierarchy */ \"(ssr)/./node_modules/d3-hierarchy/src/stratify.js\");\n/* harmony import */ var d3_hierarchy__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! d3-hierarchy */ \"(ssr)/./node_modules/d3-hierarchy/src/tree.js\");\n/* harmony import */ var graphology_layout_circular_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphology-layout/circular.js */ \"(ssr)/./node_modules/graphology-layout/circular.js\");\n/* harmony import */ var graphology_layout_noverlap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphology-layout-noverlap */ \"(ssr)/./node_modules/graphology-layout-noverlap/index.js\");\n/* harmony import */ var graphology_layout_forceatlas2__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphology-layout-forceatlas2 */ \"(ssr)/./node_modules/graphology-layout-forceatlas2/index.js\");\n/* harmony import */ var graphology_layout_random_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphology-layout/random.js */ \"(ssr)/./node_modules/graphology-layout/random.js\");\n/* harmony import */ var graphology_metrics_centrality_pagerank_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphology-metrics/centrality/pagerank.js */ \"(ssr)/./node_modules/graphology-metrics/centrality/pagerank.js\");\n/* harmony import */ var graphology_metrics_centrality_degree_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphology-metrics/centrality/degree.js */ \"(ssr)/./node_modules/graphology-metrics/centrality/degree.js\");\n/* harmony import */ var d3_scale__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! d3-scale */ \"(ssr)/./node_modules/d3-scale/src/linear.js\");\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! zustand */ \"(ssr)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var zustand_context__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! zustand/context */ \"(ssr)/./node_modules/zustand/esm/context.mjs\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var _use_gesture_react__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @use-gesture/react */ \"(ssr)/./node_modules/@use-gesture/react/dist/use-gesture-react.esm.js\");\n/* harmony import */ var graphology_shortest_path__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphology-shortest-path */ \"(ssr)/./node_modules/graphology-shortest-path/index.js\");\n/* harmony import */ var graphology__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! graphology */ \"(ssr)/./node_modules/graphology/dist/graphology.esm.js\");\n/* harmony import */ var glodrei__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! glodrei */ \"(ssr)/./node_modules/glodrei/core/Billboard.js\");\n/* harmony import */ var glodrei__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! glodrei */ \"(ssr)/./node_modules/glodrei/core/Text.js\");\n/* harmony import */ var glodrei__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! glodrei */ \"(ssr)/./node_modules/glodrei/core/Svg.js\");\n/* harmony import */ var glodrei__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! glodrei */ \"(ssr)/./node_modules/glodrei/web/useCursor.js\");\n/* harmony import */ var glodrei__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! glodrei */ \"(ssr)/./node_modules/glodrei/web/Html.js\");\n/* harmony import */ var ellipsize__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ellipsize */ \"(ssr)/./node_modules/ellipsize/src/index.js\");\n/* harmony import */ var _react_spring_three__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @react-spring/three */ \"(ssr)/./node_modules/@react-spring/three/dist/react-spring-three.esm.js\");\n/* harmony import */ var camera_controls__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! camera-controls */ \"(ssr)/./node_modules/camera-controls/dist/camera-controls.module.js\");\n/* harmony import */ var reakeys__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! reakeys */ \"(ssr)/./node_modules/reakeys/dist/index.js\");\n/* harmony import */ var hold_event__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! hold-event */ \"(ssr)/./node_modules/hold-event/dist/hold-event.module.js\");\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! three-stdlib */ \"(ssr)/./node_modules/three-stdlib/utils/BufferGeometryUtils.js\");\n/* harmony import */ var three_stdlib__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! three-stdlib */ \"(ssr)/./node_modules/three-stdlib/interactive/SelectionBox.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! classnames */ \"(ssr)/./node_modules/classnames/index.js\");\n(function() {\n  \"use strict\";\n  try {\n    if (typeof document != \"undefined\") {\n      var elementStyle = document.createElement(\"style\");\n      elementStyle.appendChild(document.createTextNode(\"._canvas_670zp_1 {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n._container_155l7_1 {\\n  transform-origin: bottom right;\\n  overflow: hidden;\\n  position: absolute;\\n  border: solid 1px var(--radial-menu-border);\\n}\\n\\n  ._container_155l7_1._disabled_155l7_7 {\\n    opacity: 0.6;\\n  }\\n\\n  ._container_155l7_1._disabled_155l7_7 ._contentContainer_155l7_10 {\\n      cursor: not-allowed;\\n    }\\n\\n  ._container_155l7_1:not(._disabled_155l7_7) ._contentContainer_155l7_10 {\\n      cursor: pointer;\\n    }\\n\\n  ._container_155l7_1:not(._disabled_155l7_7) ._contentContainer_155l7_10:hover {\\n        color: var(--radial-menu-active-color);\\n        background: var(--radial-menu-active-background);\\n      }\\n\\n  ._container_155l7_1 ._contentContainer_155l7_10 {\\n    width: 200%;\\n    height: 200%;\\n    transform-origin: 50% 50%;\\n    border-radius: 50%;\\n    outline: none;\\n    transition: background 150ms ease-in-out;\\n    color: var(--radial-menu-color);\\n  }\\n\\n  ._container_155l7_1 ._contentContainer_155l7_10 ._contentInner_155l7_35 {\\n      position: absolute;\\n      width: 100%;\\n      text-align: center;\\n    }\\n\\n  ._container_155l7_1 ._contentContainer_155l7_10 ._contentInner_155l7_35 ._content_155l7_10 {\\n        display: inline-block;\\n      }\\n\\n  ._container_155l7_1 svg {\\n    margin: 0 auto;\\n    fill: var(--radial-menu-active-color);\\n    height: 25px;\\n    width: 25px;\\n    display: block;\\n  }\\n._container_x9hyx_1 {\\n  border-radius: 50%;\\n  z-index: 9;\\n  position: relative;\\n  height: 175px;\\n  width: 175px;\\n  border: solid 5px var(--radial-menu-border);\\n  overflow: hidden;\\n  background: var(--radial-menu-background);\\n}\\n\\n  ._container_x9hyx_1:before {\\n    content: ' ';\\n    background: var(--radial-menu-border);\\n    border-radius: 50%;\\n    height: 25px;\\n    width: 25px;\\n    position: absolute;\\n    z-index: 9;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n  }\"));\n      document.head.appendChild(elementStyle);\n    }\n  } catch (e) {\n    console.error(\"vite-plugin-css-injected-by-js\", e);\n  }\n})();\nvar _a, _b;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction traverseGraph(nodes, nodeStack = []) {\n  const currentDepth = nodeStack.length;\n  for (const node of nodes) {\n    const idx = nodeStack.indexOf(node);\n    if (idx > -1) {\n      const loop = [...nodeStack.slice(idx), node].map((d) => d.data.id);\n      throw new Error(\n        `Invalid Graph: Circular node path detected: ${loop.join(\" -> \")}.`\n      );\n    }\n    if (currentDepth > node.depth) {\n      node.depth = currentDepth;\n      traverseGraph(node.out, [...nodeStack, node]);\n    }\n  }\n}\nfunction getNodeDepth(nodes, links) {\n  let invalid = false;\n  const graph = nodes.reduce(\n    (acc, cur) => ({\n      ...acc,\n      [cur.id]: {\n        data: cur,\n        out: [],\n        depth: -1,\n        ins: []\n      }\n    }),\n    {}\n  );\n  try {\n    for (const link of links) {\n      const from = link.source;\n      const to = link.target;\n      if (!graph.hasOwnProperty(from)) {\n        throw new Error(`Missing source Node ${from}`);\n      }\n      if (!graph.hasOwnProperty(to)) {\n        throw new Error(`Missing target Node ${to}`);\n      }\n      const sourceNode = graph[from];\n      const targetNode = graph[to];\n      targetNode.ins.push(sourceNode);\n      sourceNode.out.push(targetNode);\n    }\n    traverseGraph(Object.values(graph));\n  } catch (e) {\n    invalid = true;\n  }\n  const allDepths = Object.keys(graph).map((id) => graph[id].depth);\n  const maxDepth = Math.max(...allDepths);\n  return {\n    invalid,\n    depths: graph,\n    maxDepth: maxDepth || 1\n  };\n}\nconst RADIALS = [\"radialin\", \"radialout\"];\nfunction forceRadial({\n  nodes,\n  edges,\n  mode = \"lr\",\n  nodeLevelRatio = 2\n}) {\n  const { depths, maxDepth, invalid } = getNodeDepth(nodes, edges);\n  if (invalid) {\n    return null;\n  }\n  const modeDistance = RADIALS.includes(mode) ? 1 : 5;\n  const dagLevelDistance = nodes.length / maxDepth * nodeLevelRatio * modeDistance;\n  if (mode) {\n    const getFFn = (fix, invert) => (node) => !fix ? void 0 : (depths[node.id].depth - maxDepth / 2) * dagLevelDistance * (invert ? -1 : 1);\n    const fxFn = getFFn([\"lr\", \"rl\"].includes(mode), mode === \"rl\");\n    const fyFn = getFFn([\"td\", \"bu\"].includes(mode), mode === \"td\");\n    const fzFn = getFFn([\"zin\", \"zout\"].includes(mode), mode === \"zout\");\n    nodes.forEach((node) => {\n      node.fx = fxFn(node);\n      node.fy = fyFn(node);\n      node.fz = fzFn(node);\n    });\n  }\n  return RADIALS.includes(mode) ? (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_16__[\"default\"])((node) => {\n    const nodeDepth = depths[node.id];\n    const depth = mode === \"radialin\" ? maxDepth - nodeDepth.depth : nodeDepth.depth;\n    return depth * dagLevelDistance;\n  }).strength(1) : null;\n}\nfunction tick(layout) {\n  return new Promise((resolve, _reject) => {\n    let stable;\n    function run() {\n      if (!stable) {\n        stable = layout.step();\n        run();\n      } else {\n        resolve(stable);\n      }\n    }\n    run();\n  });\n}\nfunction buildNodeEdges(graph) {\n  const nodes = [];\n  const edges = [];\n  graph.forEachNode((id, n) => {\n    nodes.push({\n      ...n,\n      id,\n      // This is for the clustering\n      radius: n.size || 1\n    });\n  });\n  graph.forEachEdge((id, l) => {\n    edges.push({ ...l, id });\n  });\n  return { nodes, edges };\n}\nfunction forceInABox() {\n  const constant = (_) => () => _;\n  const index = (d) => d.index;\n  let id = index;\n  let nodes = [];\n  let links = [];\n  let clusters;\n  let tree2;\n  let size = [100, 100];\n  let forceNodeSize = constant(1);\n  let forceCharge = constant(-1);\n  let forceLinkDistance = constant(100);\n  let forceLinkStrength = constant(0.1);\n  let foci = {};\n  let linkStrengthIntraCluster = 0.1;\n  let linkStrengthInterCluster = 1e-3;\n  let templateNodes = [];\n  let offset = [0, 0];\n  let templateForce;\n  let groupBy = (d) => d.cluster;\n  let template = \"treemap\";\n  let enableGrouping = true;\n  let strength = 0.1;\n  function force(alpha) {\n    if (!enableGrouping) {\n      return force;\n    }\n    if (template === \"force\") {\n      templateForce.tick();\n      getFocisFromTemplate();\n    }\n    for (let i = 0, n = nodes.length, node, k = alpha * strength; i < n; ++i) {\n      node = nodes[i];\n      node.vx += (foci[groupBy(node)].x - node.x) * k;\n      node.vy += (foci[groupBy(node)].y - node.y) * k;\n    }\n  }\n  function initialize() {\n    if (!nodes) {\n      return;\n    }\n    if (template === \"treemap\") {\n      initializeWithTreemap();\n    } else {\n      initializeWithForce();\n    }\n  }\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n  function getLinkKey(l) {\n    let sourceID = groupBy(l.source), targetID = groupBy(l.target);\n    return sourceID <= targetID ? sourceID + \"~\" + targetID : targetID + \"~\" + sourceID;\n  }\n  function computeClustersNodeCounts(nodes2) {\n    let clustersCounts = /* @__PURE__ */ new Map(), tmpCount = {};\n    nodes2.forEach(function(d) {\n      if (!clustersCounts.has(groupBy(d))) {\n        clustersCounts.set(groupBy(d), { count: 0, sumforceNodeSize: 0 });\n      }\n    });\n    nodes2.forEach(function(d) {\n      tmpCount = clustersCounts.get(groupBy(d));\n      tmpCount.count = tmpCount.count + 1;\n      tmpCount.sumforceNodeSize = tmpCount.sumforceNodeSize + // @ts-ignore\n      Math.PI * (forceNodeSize(d) * forceNodeSize(d)) * 1.3;\n      clustersCounts.set(groupBy(d), tmpCount);\n    });\n    return clustersCounts;\n  }\n  function computeClustersLinkCounts(links2) {\n    let dClusterLinks = /* @__PURE__ */ new Map(), clusterLinks = [];\n    links2.forEach(function(l) {\n      let key = getLinkKey(l), count;\n      if (dClusterLinks.has(key)) {\n        count = dClusterLinks.get(key);\n      } else {\n        count = 0;\n      }\n      count += 1;\n      dClusterLinks.set(key, count);\n    });\n    dClusterLinks.forEach(function(value, key) {\n      let source, target;\n      source = key.split(\"~\")[0];\n      target = key.split(\"~\")[1];\n      if (source !== void 0 && target !== void 0) {\n        clusterLinks.push({\n          source,\n          target,\n          count: value\n        });\n      }\n    });\n    return clusterLinks;\n  }\n  function getGroupsGraph() {\n    let gnodes = [];\n    let glinks = [];\n    let dNodes = /* @__PURE__ */ new Map();\n    let c;\n    let i;\n    let cc;\n    let clustersCounts;\n    let clustersLinks;\n    clustersCounts = computeClustersNodeCounts(nodes);\n    clustersLinks = computeClustersLinkCounts(links);\n    for (c of clustersCounts.keys()) {\n      cc = clustersCounts.get(c);\n      gnodes.push({\n        id: c,\n        size: cc.count,\n        r: Math.sqrt(cc.sumforceNodeSize / Math.PI)\n      });\n      dNodes.set(c, i);\n    }\n    clustersLinks.forEach(function(l) {\n      let source = dNodes.get(l.source), target = dNodes.get(l.target);\n      if (source !== void 0 && target !== void 0) {\n        glinks.push({\n          source,\n          target,\n          count: l.count\n        });\n      }\n    });\n    return { nodes: gnodes, links: glinks };\n  }\n  function getGroupsTree() {\n    let children = [];\n    let c;\n    let cc;\n    let clustersCounts;\n    clustersCounts = computeClustersNodeCounts(force.nodes());\n    for (c of clustersCounts.keys()) {\n      cc = clustersCounts.get(c);\n      children.push({ id: c, size: cc.count });\n    }\n    return { id: \"clustersTree\", children };\n  }\n  function getFocisFromTemplate() {\n    foci.none = { x: 0, y: 0 };\n    templateNodes.forEach(function(d) {\n      if (template === \"treemap\") {\n        foci[d.data.id] = {\n          x: d.x0 + (d.x1 - d.x0) / 2 - offset[0],\n          y: d.y0 + (d.y1 - d.y0) / 2 - offset[1]\n        };\n      } else {\n        foci[d.id] = {\n          x: d.x - offset[0],\n          y: d.y - offset[1]\n        };\n      }\n    });\n    return foci;\n  }\n  function initializeWithTreemap() {\n    let sim = (0,d3_hierarchy__WEBPACK_IMPORTED_MODULE_17__[\"default\"])().size(force.size());\n    tree2 = (0,d3_hierarchy__WEBPACK_IMPORTED_MODULE_18__[\"default\"])(getGroupsTree()).sum((d) => d.radius).sort(function(a2, b) {\n      return b.height - a2.height || b.value - a2.value;\n    });\n    templateNodes = sim(tree2).leaves();\n    getFocisFromTemplate();\n  }\n  function checkLinksAsObjects() {\n    let linkCount = 0;\n    if (nodes.length === 0)\n      return;\n    links.forEach(function(link) {\n      let source, target;\n      if (!nodes) {\n        return;\n      }\n      source = link.source;\n      target = link.target;\n      if (typeof link.source !== \"object\") {\n        source = nodes.find((n) => n.id === link.source);\n      }\n      if (typeof link.target !== \"object\") {\n        target = nodes.find((n) => n.id === link.target);\n      }\n      if (source === void 0 || target === void 0) {\n        throw Error(\n          \"Error setting links, couldnt find nodes for a link (see it on the console)\"\n        );\n      }\n      link.source = source;\n      link.target = target;\n      link.index = linkCount++;\n    });\n  }\n  function initializeWithForce() {\n    let net;\n    if (!nodes || !nodes.length) {\n      return;\n    }\n    checkLinksAsObjects();\n    net = getGroupsGraph();\n    if (clusters.size > 0) {\n      net.nodes.forEach((n) => {\n        var _a2, _b2, _c, _d;\n        n.fx = (_b2 = (_a2 = clusters.get(n.id)) == null ? void 0 : _a2.position) == null ? void 0 : _b2.x;\n        n.fy = (_d = (_c = clusters.get(n.id)) == null ? void 0 : _c.position) == null ? void 0 : _d.y;\n      });\n    }\n    templateForce = (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_19__[\"default\"])(net.nodes).force(\"x\", (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(size[0] / 2).strength(0.1)).force(\"y\", (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_21__[\"default\"])(size[1] / 2).strength(0.1)).force(\"collide\", (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_22__[\"default\"])((d) => d.r).iterations(4)).force(\"charge\", (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_23__[\"default\"])().strength(forceCharge)).force(\n      \"links\",\n      (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_24__[\"default\"])(net.nodes.length ? net.links : []).distance(forceLinkDistance).strength(forceLinkStrength)\n    );\n    templateNodes = templateForce.nodes();\n    getFocisFromTemplate();\n  }\n  force.template = function(x) {\n    if (!arguments.length) {\n      return template;\n    }\n    template = x;\n    initialize();\n    return force;\n  };\n  force.groupBy = function(x) {\n    if (!arguments.length) {\n      return groupBy;\n    }\n    if (typeof x === \"string\") {\n      groupBy = function(d) {\n        return d[x];\n      };\n      return force;\n    }\n    groupBy = x;\n    return force;\n  };\n  force.enableGrouping = function(x) {\n    if (!arguments.length) {\n      return enableGrouping;\n    }\n    enableGrouping = x;\n    return force;\n  };\n  force.strength = function(x) {\n    if (!arguments.length) {\n      return strength;\n    }\n    strength = x;\n    return force;\n  };\n  force.getLinkStrength = function(e) {\n    if (enableGrouping) {\n      if (groupBy(e.source) === groupBy(e.target)) {\n        if (typeof linkStrengthIntraCluster === \"function\") {\n          return linkStrengthIntraCluster(e);\n        } else {\n          return linkStrengthIntraCluster;\n        }\n      } else {\n        if (typeof linkStrengthInterCluster === \"function\") {\n          return linkStrengthInterCluster(e);\n        } else {\n          return linkStrengthInterCluster;\n        }\n      }\n    } else {\n      if (typeof linkStrengthIntraCluster === \"function\") {\n        return linkStrengthIntraCluster(e);\n      } else {\n        return linkStrengthIntraCluster;\n      }\n    }\n  };\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n  force.size = function(_) {\n    return arguments.length ? (size = _, force) : size;\n  };\n  force.linkStrengthInterCluster = function(_) {\n    return arguments.length ? (linkStrengthInterCluster = _, force) : linkStrengthInterCluster;\n  };\n  force.linkStrengthIntraCluster = function(_) {\n    return arguments.length ? (linkStrengthIntraCluster = _, force) : linkStrengthIntraCluster;\n  };\n  force.nodes = function(_) {\n    return arguments.length ? (nodes = _, force) : nodes;\n  };\n  force.links = function(_) {\n    if (!arguments.length) {\n      return links;\n    }\n    if (_ === null) {\n      links = [];\n    } else {\n      links = _;\n    }\n    initialize();\n    return force;\n  };\n  force.template = function(x) {\n    if (!arguments.length) {\n      return template;\n    }\n    template = x;\n    initialize();\n    return force;\n  };\n  force.forceNodeSize = function(_) {\n    return arguments.length ? (forceNodeSize = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : forceNodeSize;\n  };\n  force.nodeSize = force.forceNodeSize;\n  force.forceCharge = function(_) {\n    return arguments.length ? (forceCharge = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : forceCharge;\n  };\n  force.forceLinkDistance = function(_) {\n    return arguments.length ? (forceLinkDistance = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : forceLinkDistance;\n  };\n  force.forceLinkStrength = function(_) {\n    return arguments.length ? (forceLinkStrength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : forceLinkStrength;\n  };\n  force.offset = function(_) {\n    return arguments.length ? (offset = typeof _ === \"function\" ? _ : constant(+_), force) : offset;\n  };\n  force.getFocis = getFocisFromTemplate;\n  force.setClusters = function(value) {\n    clusters = value;\n    return force;\n  };\n  return force;\n}\nfunction forceDirected({\n  graph,\n  nodeLevelRatio = 2,\n  mode = null,\n  dimensions = 2,\n  nodeStrength = -250,\n  linkDistance = 50,\n  clusterStrength = 0.5,\n  linkStrengthInterCluster = 0.01,\n  linkStrengthIntraCluster = 0.5,\n  forceLinkDistance = 100,\n  forceLinkStrength = 0.1,\n  clusterType = \"force\",\n  forceCharge = -700,\n  getNodePosition,\n  drags,\n  clusters,\n  clusterAttribute,\n  forceLayout\n}) {\n  const { nodes, edges } = buildNodeEdges(graph);\n  const is2d = dimensions === 2;\n  const nodeStrengthAdjustment = is2d && edges.length > 25 ? nodeStrength * 2 : nodeStrength;\n  let forceX$1;\n  let forceY$1;\n  if (forceLayout === \"forceDirected2d\") {\n    forceX$1 = (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_20__[\"default\"])();\n    forceY$1 = (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_21__[\"default\"])();\n  } else {\n    forceX$1 = (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(600).strength(0.05);\n    forceY$1 = (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_21__[\"default\"])(600).strength(0.05);\n  }\n  const sim = (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_19__[\"default\"])().force(\"center\", (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_25__[\"default\"])(0, 0)).force(\"link\", (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_24__[\"default\"])()).force(\"charge\", (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_23__[\"default\"])().strength(nodeStrengthAdjustment)).force(\"x\", forceX$1).force(\"y\", forceY$1).force(\"z\", (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_26__[\"default\"])()).force(\n    \"collide\",\n    (0,d3_force_3d__WEBPACK_IMPORTED_MODULE_22__[\"default\"])((d) => d.radius + 10)\n  ).force(\n    \"dagRadial\",\n    forceRadial({\n      nodes,\n      edges,\n      mode,\n      nodeLevelRatio\n    })\n  ).stop();\n  let groupingForce;\n  if (clusterAttribute) {\n    let forceChargeAdjustment = forceCharge;\n    if (nodes == null ? void 0 : nodes.length) {\n      const adjustmentFactor = Math.ceil(nodes.length / 200);\n      forceChargeAdjustment = forceCharge * adjustmentFactor;\n    }\n    groupingForce = forceInABox().setClusters(clusters).strength(clusterStrength).template(clusterType).groupBy((d) => d.data[clusterAttribute]).links(edges).size([100, 100]).linkStrengthInterCluster(linkStrengthInterCluster).linkStrengthIntraCluster(linkStrengthIntraCluster).forceLinkDistance(forceLinkDistance).forceLinkStrength(forceLinkStrength).forceCharge(forceChargeAdjustment).forceNodeSize((d) => d.radius);\n  }\n  let layout = sim.numDimensions(dimensions).nodes(nodes);\n  if (groupingForce) {\n    layout = layout.force(\"group\", groupingForce);\n  }\n  if (linkDistance) {\n    let linkForce = layout.force(\"link\");\n    if (linkForce) {\n      linkForce.id((d) => d.id).links(edges).distance(linkDistance);\n      if (groupingForce) {\n        linkForce = linkForce.strength((groupingForce == null ? void 0 : groupingForce.getLinkStrength) ?? 0.1);\n      }\n    }\n  }\n  const nodeMap = new Map(nodes.map((n) => [n.id, n]));\n  return {\n    step() {\n      while (sim.alpha() > 0.01) {\n        sim.tick();\n      }\n      return true;\n    },\n    getNodePosition(id) {\n      var _a2, _b2;\n      if (getNodePosition) {\n        const pos = getNodePosition(id, { graph, drags, nodes, edges });\n        if (pos) {\n          return pos;\n        }\n      }\n      if ((_a2 = drags == null ? void 0 : drags[id]) == null ? void 0 : _a2.position) {\n        return (_b2 = drags == null ? void 0 : drags[id]) == null ? void 0 : _b2.position;\n      }\n      return nodeMap.get(id);\n    }\n  };\n}\nfunction circular2d({\n  graph,\n  radius,\n  drags,\n  getNodePosition\n}) {\n  const layout = graphology_layout_circular_js__WEBPACK_IMPORTED_MODULE_2__(graph, {\n    scale: radius\n  });\n  const { nodes, edges } = buildNodeEdges(graph);\n  return {\n    step() {\n      return true;\n    },\n    getNodePosition(id) {\n      var _a2, _b2;\n      if (getNodePosition) {\n        const pos = getNodePosition(id, { graph, drags, nodes, edges });\n        if (pos) {\n          return pos;\n        }\n      }\n      if ((_a2 = drags == null ? void 0 : drags[id]) == null ? void 0 : _a2.position) {\n        return (_b2 = drags == null ? void 0 : drags[id]) == null ? void 0 : _b2.position;\n      }\n      return layout == null ? void 0 : layout[id];\n    }\n  };\n}\nconst DIRECTION_MAP = {\n  td: {\n    x: \"x\",\n    y: \"y\",\n    factor: -1\n  },\n  lr: {\n    x: \"y\",\n    y: \"x\",\n    factor: 1\n  }\n};\nfunction hierarchical({\n  graph,\n  drags,\n  mode = \"td\",\n  nodeSeparation = 1,\n  nodeSize = [50, 50],\n  getNodePosition\n}) {\n  const { nodes, edges } = buildNodeEdges(graph);\n  const { depths } = getNodeDepth(nodes, edges);\n  const rootNodes = Object.keys(depths).map((d) => depths[d]);\n  const root = (0,d3_hierarchy__WEBPACK_IMPORTED_MODULE_27__[\"default\"])().id((d) => d.data.id).parentId((d) => {\n    var _a2, _b2, _c;\n    return (_c = (_b2 = (_a2 = d.ins) == null ? void 0 : _a2[0]) == null ? void 0 : _b2.data) == null ? void 0 : _c.id;\n  })(rootNodes);\n  const treeRoot = (0,d3_hierarchy__WEBPACK_IMPORTED_MODULE_28__[\"default\"])().separation(() => nodeSeparation).nodeSize(nodeSize)((0,d3_hierarchy__WEBPACK_IMPORTED_MODULE_18__[\"default\"])(root));\n  const treeNodes = treeRoot.descendants();\n  const path = DIRECTION_MAP[mode];\n  const mappedNodes = new Map(\n    nodes.map((n) => {\n      const { x, y } = treeNodes.find((t) => t.data.id === n.id);\n      return [\n        n.id,\n        {\n          ...n,\n          [path.x]: x * path.factor,\n          [path.y]: y * path.factor,\n          z: 0\n        }\n      ];\n    })\n  );\n  return {\n    step() {\n      return true;\n    },\n    getNodePosition(id) {\n      var _a2, _b2;\n      if (getNodePosition) {\n        const pos = getNodePosition(id, { graph, drags, nodes, edges });\n        if (pos) {\n          return pos;\n        }\n      }\n      if ((_a2 = drags == null ? void 0 : drags[id]) == null ? void 0 : _a2.position) {\n        return (_b2 = drags == null ? void 0 : drags[id]) == null ? void 0 : _b2.position;\n      }\n      return mappedNodes.get(id);\n    }\n  };\n}\nfunction nooverlap({\n  graph,\n  margin,\n  drags,\n  getNodePosition,\n  ratio,\n  gridSize,\n  maxIterations\n}) {\n  const { nodes, edges } = buildNodeEdges(graph);\n  const layout = graphology_layout_noverlap__WEBPACK_IMPORTED_MODULE_3__(graph, {\n    maxIterations,\n    inputReducer: (_key, attr) => ({\n      ...attr,\n      // Have to specify defaults for the engine\n      x: attr.x || 0,\n      y: attr.y || 0\n    }),\n    settings: {\n      ratio,\n      margin,\n      gridSize\n    }\n  });\n  return {\n    step() {\n      return true;\n    },\n    getNodePosition(id) {\n      var _a2, _b2;\n      if (getNodePosition) {\n        const pos = getNodePosition(id, { graph, drags, nodes, edges });\n        if (pos) {\n          return pos;\n        }\n      }\n      if ((_a2 = drags == null ? void 0 : drags[id]) == null ? void 0 : _a2.position) {\n        return (_b2 = drags == null ? void 0 : drags[id]) == null ? void 0 : _b2.position;\n      }\n      return layout == null ? void 0 : layout[id];\n    }\n  };\n}\nfunction forceAtlas2({\n  graph,\n  drags,\n  iterations,\n  ...rest\n}) {\n  graphology_layout_random_js__WEBPACK_IMPORTED_MODULE_5__.assign(graph);\n  const layout = graphology_layout_forceatlas2__WEBPACK_IMPORTED_MODULE_4__(graph, {\n    iterations,\n    settings: rest\n  });\n  return {\n    step() {\n      return true;\n    },\n    getNodePosition(id) {\n      var _a2;\n      return ((_a2 = drags == null ? void 0 : drags[id]) == null ? void 0 : _a2.position) || (layout == null ? void 0 : layout[id]);\n    }\n  };\n}\nfunction custom({ graph, drags, getNodePosition }) {\n  const { nodes, edges } = buildNodeEdges(graph);\n  return {\n    step() {\n      return true;\n    },\n    getNodePosition(id) {\n      return getNodePosition(id, { graph, drags, nodes, edges });\n    }\n  };\n}\nconst FORCE_LAYOUTS = [\n  \"forceDirected2d\",\n  \"treeTd2d\",\n  \"treeLr2d\",\n  \"radialOut2d\",\n  \"treeTd3d\",\n  \"treeLr3d\",\n  \"radialOut3d\",\n  \"forceDirected3d\"\n];\nfunction layoutProvider({\n  type,\n  ...rest\n}) {\n  if (FORCE_LAYOUTS.includes(type)) {\n    const { nodeStrength, linkDistance, nodeLevelRatio } = rest;\n    if (type === \"forceDirected2d\") {\n      return forceDirected({\n        ...rest,\n        dimensions: 2,\n        nodeLevelRatio: nodeLevelRatio || 2,\n        nodeStrength: nodeStrength || -250,\n        linkDistance,\n        forceLayout: type\n      });\n    } else if (type === \"treeTd2d\") {\n      return forceDirected({\n        ...rest,\n        mode: \"td\",\n        dimensions: 2,\n        nodeLevelRatio: nodeLevelRatio || 5,\n        nodeStrength: nodeStrength || -250,\n        linkDistance: linkDistance || 50,\n        forceLayout: type\n      });\n    } else if (type === \"treeLr2d\") {\n      return forceDirected({\n        ...rest,\n        mode: \"lr\",\n        dimensions: 2,\n        nodeLevelRatio: nodeLevelRatio || 5,\n        nodeStrength: nodeStrength || -250,\n        linkDistance: linkDistance || 50,\n        forceLayout: type\n      });\n    } else if (type === \"radialOut2d\") {\n      return forceDirected({\n        ...rest,\n        mode: \"radialout\",\n        dimensions: 2,\n        nodeLevelRatio: nodeLevelRatio || 5,\n        nodeStrength: nodeStrength || -500,\n        linkDistance: linkDistance || 100,\n        forceLayout: type\n      });\n    } else if (type === \"treeTd3d\") {\n      return forceDirected({\n        ...rest,\n        mode: \"td\",\n        dimensions: 3,\n        nodeLevelRatio: nodeLevelRatio || 2,\n        nodeStrength: nodeStrength || -500,\n        linkDistance: linkDistance || 50\n      });\n    } else if (type === \"treeLr3d\") {\n      return forceDirected({\n        ...rest,\n        mode: \"lr\",\n        dimensions: 3,\n        nodeLevelRatio: nodeLevelRatio || 2,\n        nodeStrength: nodeStrength || -500,\n        linkDistance: linkDistance || 50,\n        forceLayout: type\n      });\n    } else if (type === \"radialOut3d\") {\n      return forceDirected({\n        ...rest,\n        mode: \"radialout\",\n        dimensions: 3,\n        nodeLevelRatio: nodeLevelRatio || 2,\n        nodeStrength: nodeStrength || -500,\n        linkDistance: linkDistance || 100,\n        forceLayout: type\n      });\n    } else if (type === \"forceDirected3d\") {\n      return forceDirected({\n        ...rest,\n        dimensions: 3,\n        nodeLevelRatio: nodeLevelRatio || 2,\n        nodeStrength: nodeStrength || -250,\n        linkDistance,\n        forceLayout: type\n      });\n    }\n  } else if (type === \"circular2d\") {\n    const { radius } = rest;\n    return circular2d({\n      ...rest,\n      radius: radius || 300\n    });\n  } else if (type === \"hierarchicalTd\") {\n    return hierarchical({ ...rest, mode: \"td\" });\n  } else if (type === \"hierarchicalLr\") {\n    return hierarchical({ ...rest, mode: \"lr\" });\n  } else if (type === \"nooverlap\") {\n    const { graph, maxIterations, ratio, margin, gridSize, ...settings } = rest;\n    return nooverlap({\n      type: \"nooverlap\",\n      graph,\n      margin: margin || 10,\n      maxIterations: maxIterations || 50,\n      ratio: ratio || 10,\n      gridSize: gridSize || 20,\n      ...settings\n    });\n  } else if (type === \"forceatlas2\") {\n    const { graph, iterations, gravity, scalingRatio, ...settings } = rest;\n    return forceAtlas2({\n      type: \"forceatlas2\",\n      graph,\n      ...settings,\n      scalingRatio: scalingRatio || 100,\n      gravity: gravity || 10,\n      iterations: iterations || 50\n    });\n  } else if (type === \"custom\") {\n    return custom({\n      type: \"custom\",\n      ...rest\n    });\n  }\n  throw new Error(`Layout ${type} not found.`);\n}\nfunction recommendLayout(nodes, edges) {\n  const { invalid } = getNodeDepth(nodes, edges);\n  const nodeCount = nodes.length;\n  if (!invalid) {\n    if (nodeCount > 100) {\n      return \"radialOut2d\";\n    } else {\n      return \"treeTd2d\";\n    }\n  }\n  return \"forceDirected2d\";\n}\nfunction calcLabelVisibility({\n  nodeCount,\n  nodePosition,\n  labelType,\n  camera\n}) {\n  return (shape, size) => {\n    var _a2;\n    if (camera && nodePosition && ((_a2 = camera == null ? void 0 : camera.position) == null ? void 0 : _a2.z) / (camera == null ? void 0 : camera.zoom) - (nodePosition == null ? void 0 : nodePosition.z) > 6e3) {\n      return false;\n    }\n    if (labelType === \"all\") {\n      return true;\n    } else if (labelType === \"nodes\" && shape === \"node\") {\n      return true;\n    } else if (labelType === \"edges\" && shape === \"edge\") {\n      return true;\n    } else if (labelType === \"auto\" && shape === \"node\") {\n      if (size > 7) {\n        return true;\n      } else if (camera && nodePosition && camera.position.z / camera.zoom - nodePosition.z < 3e3) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\nfunction getLabelOffsetByType(offset, position) {\n  switch (position) {\n    case \"above\":\n      return offset;\n    case \"below\":\n      return -offset;\n    case \"inline\":\n    case \"natural\":\n    default:\n      return 0;\n  }\n}\nfunction pageRankSizing({\n  graph\n}) {\n  const ranks = graphology_metrics_centrality_pagerank_js__WEBPACK_IMPORTED_MODULE_6__(graph);\n  return {\n    ranks,\n    getSizeForNode: (nodeID) => ranks[nodeID] * 80\n  };\n}\nfunction centralitySizing({\n  graph\n}) {\n  const ranks = (0,graphology_metrics_centrality_degree_js__WEBPACK_IMPORTED_MODULE_7__.degreeCentrality)(graph);\n  return {\n    ranks,\n    getSizeForNode: (nodeID) => ranks[nodeID] * 20\n  };\n}\nfunction attributeSizing({\n  graph,\n  attribute,\n  defaultSize\n}) {\n  const map = /* @__PURE__ */ new Map();\n  if (attribute) {\n    graph.forEachNode((id, node) => {\n      var _a2;\n      const size = (_a2 = node.data) == null ? void 0 : _a2[attribute];\n      if (isNaN(size)) {\n        console.warn(`Attribute ${size} is not a number for node ${node.id}`);\n      }\n      map.set(id, size || 0);\n    });\n  } else {\n    console.warn(\"Attribute sizing configured but no attribute provided\");\n  }\n  return {\n    getSizeForNode: (nodeId) => {\n      if (!attribute || !map) {\n        return defaultSize;\n      }\n      return map.get(nodeId);\n    }\n  };\n}\nconst providers = {\n  pagerank: pageRankSizing,\n  centrality: centralitySizing,\n  attribute: attributeSizing,\n  none: ({ defaultSize }) => ({\n    getSizeForNode: (_id) => defaultSize\n  })\n};\nfunction nodeSizeProvider({ type, ...rest }) {\n  var _a2;\n  const provider = (_a2 = providers[type]) == null ? void 0 : _a2.call(providers, rest);\n  if (!provider && type !== \"default\") {\n    throw new Error(`Unknown sizing strategy: ${type}`);\n  }\n  const { graph, minSize, maxSize } = rest;\n  const sizes = /* @__PURE__ */ new Map();\n  let min;\n  let max;\n  graph.forEachNode((id, node) => {\n    let size;\n    if (type === \"default\") {\n      size = node.size || rest.defaultSize;\n    } else {\n      size = provider.getSizeForNode(id);\n    }\n    if (min === void 0 || size < min) {\n      min = size;\n    }\n    if (max === void 0 || size > max) {\n      max = size;\n    }\n    sizes.set(id, size);\n  });\n  if (type !== \"none\") {\n    const scale = (0,d3_scale__WEBPACK_IMPORTED_MODULE_29__[\"default\"])().domain([min, max]).rangeRound([minSize, maxSize]);\n    for (const [nodeId, size] of sizes) {\n      sizes.set(nodeId, scale(size));\n    }\n  }\n  return sizes;\n}\nfunction buildGraph(graph, nodes, edges) {\n  graph.clear();\n  for (const node of nodes) {\n    try {\n      graph.addNode(node.id, node);\n    } catch ({ message }) {\n      console.error(`[Graph] ${message}`);\n    }\n  }\n  for (const edge of edges) {\n    try {\n      graph.addEdge(edge.source, edge.target, edge);\n    } catch ({ message }) {\n      console.error(`[Graph] ${message}`);\n    }\n  }\n  return graph;\n}\nfunction transformGraph({\n  graph,\n  layout,\n  sizingType,\n  labelType,\n  sizingAttribute,\n  defaultNodeSize,\n  minNodeSize,\n  maxNodeSize,\n  clusterAttribute\n}) {\n  const nodes = [];\n  const edges = [];\n  const map = /* @__PURE__ */ new Map();\n  const sizes = nodeSizeProvider({\n    graph,\n    type: sizingType,\n    attribute: sizingAttribute,\n    minSize: minNodeSize,\n    maxSize: maxNodeSize,\n    defaultSize: defaultNodeSize\n  });\n  const nodeCount = graph.nodes().length;\n  const checkVisibility = calcLabelVisibility({ nodeCount, labelType });\n  graph.forEachNode((id, node) => {\n    const position = layout.getNodePosition(id);\n    const { data, fill, icon, label, size, ...rest } = node;\n    const nodeSize = sizes.get(node.id);\n    const labelVisible = checkVisibility(\"node\", nodeSize);\n    const nodeLinks = graph.inboundNeighbors(node.id) || [];\n    const parents = nodeLinks.map((n2) => graph.getNodeAttributes(n2));\n    const n = {\n      ...node,\n      size: nodeSize,\n      labelVisible,\n      label,\n      icon,\n      fill,\n      cluster: clusterAttribute ? data[clusterAttribute] : void 0,\n      parents,\n      data: {\n        ...rest,\n        ...data ?? {}\n      },\n      position: {\n        ...position,\n        x: position.x || 0,\n        y: position.y || 0,\n        z: position.z || 1\n      }\n    };\n    map.set(node.id, n);\n    nodes.push(n);\n  });\n  graph.forEachEdge((_id, link) => {\n    const from = map.get(link.source);\n    const to = map.get(link.target);\n    if (from && to) {\n      const { data, id, label, size, ...rest } = link;\n      const labelVisible = checkVisibility(\"edge\", size);\n      edges.push({\n        ...link,\n        id,\n        label,\n        labelVisible,\n        size,\n        data: {\n          ...rest,\n          id,\n          ...data || {}\n        }\n      });\n    }\n  });\n  return {\n    nodes,\n    edges\n  };\n}\nconst animationConfig = {\n  mass: 10,\n  tension: 1e3,\n  friction: 300,\n  // Decreasing precision to improve performance from 0.00001\n  precision: 0.1\n};\nfunction getArrowVectors(placement, curve, arrowLength) {\n  const curveLength = curve.getLength();\n  const absSize = placement === \"end\" ? curveLength : curveLength / 2;\n  const offset = placement === \"end\" ? arrowLength / 2 : 0;\n  const u = (absSize - offset) / curveLength;\n  const position = curve.getPointAt(u);\n  const rotation = curve.getTangentAt(u);\n  return [position, rotation];\n}\nfunction getArrowSize(size) {\n  return [size + 6, 2 + size / 1.5];\n}\nconst MULTI_EDGE_OFFSET_FACTOR = 0.7;\nfunction getMidPoint(from, to, offset = 0) {\n  const fromVector = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(from.x, from.y || 0, from.z || 0);\n  const toVector = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(to.x, to.y || 0, to.z || 0);\n  const midVector = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3().addVectors(fromVector, toVector).divideScalar(2);\n  return midVector.setLength(midVector.length() + offset);\n}\nfunction getCurvePoints(from, to, offset = -1) {\n  const fromVector = from.clone();\n  const toVector = to.clone();\n  const v = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3().subVectors(toVector, fromVector);\n  const vlen = v.length();\n  const vn = v.clone().normalize();\n  const vv = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3().subVectors(toVector, fromVector).divideScalar(2);\n  const k = Math.abs(vn.x) % 1;\n  const b = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(-vn.y, vn.x - k * vn.z, k * vn.y).normalize();\n  const vm = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3().add(fromVector).add(vv).add(b.multiplyScalar(vlen / 4).multiplyScalar(offset));\n  return [from, vm, to];\n}\nfunction getCurve(from, fromOffset, to, toOffset, curved, curveOffset) {\n  const offsetFrom = getPointBetween(from, to, fromOffset);\n  const offsetTo = getPointBetween(to, from, toOffset);\n  return curved ? new three__WEBPACK_IMPORTED_MODULE_30__.QuadraticBezierCurve3(\n    ...getCurvePoints(offsetFrom, offsetTo, curveOffset)\n  ) : new three__WEBPACK_IMPORTED_MODULE_30__.LineCurve3(offsetFrom, offsetTo);\n}\nfunction getVector(node) {\n  return new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(node.position.x, node.position.y, node.position.z || 0);\n}\nfunction getPointBetween(from, to, offset) {\n  const distance = from.distanceTo(to);\n  return from.clone().add(\n    to.clone().sub(from).multiplyScalar(offset / distance)\n  );\n}\nfunction updateNodePosition(node, offset) {\n  return {\n    ...node,\n    position: {\n      ...node.position,\n      x: node.position.x + offset.x,\n      y: node.position.y + offset.y,\n      z: node.position.z + offset.z\n    }\n  };\n}\nfunction calculateEdgeCurveOffset({ edge, edges, curved }) {\n  let updatedCurved = curved;\n  let curveOffset;\n  const parallelEdges = edges.filter((e) => e.target === edge.target && e.source === edge.source).map((e) => e.id);\n  if (parallelEdges.length > 1) {\n    updatedCurved = true;\n    const edgeIndex = parallelEdges.indexOf(edge.id);\n    if (parallelEdges.length === 2) {\n      curveOffset = edgeIndex === 0 ? MULTI_EDGE_OFFSET_FACTOR : -MULTI_EDGE_OFFSET_FACTOR;\n    } else {\n      curveOffset = (edgeIndex - Math.floor(parallelEdges.length / 2)) * MULTI_EDGE_OFFSET_FACTOR;\n    }\n  }\n  return { curved: updatedCurved, curveOffset };\n}\nfunction getLayoutCenter(nodes) {\n  let minX = Number.POSITIVE_INFINITY;\n  let maxX = Number.NEGATIVE_INFINITY;\n  let minY = Number.POSITIVE_INFINITY;\n  let maxY = Number.NEGATIVE_INFINITY;\n  let minZ = Number.POSITIVE_INFINITY;\n  let maxZ = Number.NEGATIVE_INFINITY;\n  for (let node of nodes) {\n    minX = Math.min(minX, node.position.x);\n    maxX = Math.max(maxX, node.position.x);\n    minY = Math.min(minY, node.position.y);\n    maxY = Math.max(maxY, node.position.y);\n    minZ = Math.min(minZ, node.position.z);\n    maxZ = Math.max(maxZ, node.position.z);\n  }\n  return {\n    height: maxY - minY,\n    width: maxX - minX,\n    minX,\n    maxX,\n    minY,\n    maxY,\n    minZ,\n    maxZ,\n    x: (maxX + minX) / 2,\n    y: (maxY + minY) / 2,\n    z: (maxZ + minZ) / 2\n  };\n}\nfunction buildClusterGroups(nodes, clusterAttribute) {\n  if (!clusterAttribute) {\n    return /* @__PURE__ */ new Map();\n  }\n  return nodes.reduce((entryMap, e) => {\n    const val = e.data[clusterAttribute];\n    if (val) {\n      entryMap.set(val, [...entryMap.get(val) || [], e]);\n    }\n    return entryMap;\n  }, /* @__PURE__ */ new Map());\n}\nfunction calculateClusters({\n  nodes,\n  clusterAttribute\n}) {\n  const result = /* @__PURE__ */ new Map();\n  if (clusterAttribute) {\n    const groups = buildClusterGroups(nodes, clusterAttribute);\n    for (const [key, nodes2] of groups) {\n      const position = getLayoutCenter(nodes2);\n      result.set(key, {\n        label: key,\n        nodes: nodes2,\n        position\n      });\n    }\n  }\n  return result;\n}\nconst useHoverIntent = ({\n  sensitivity = 7,\n  interval = 50,\n  timeout = 0,\n  disabled: disabled2,\n  onPointerOver,\n  onPointerOut\n}) => {\n  const mouseOver = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n  const timer = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  const state = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n  const coords = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n    x: null,\n    y: null,\n    px: null,\n    py: null\n  });\n  const onMouseMove = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((event) => {\n    coords.current.x = event.clientX;\n    coords.current.y = event.clientY;\n  }, []);\n  const comparePosition = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      timer.current = clearTimeout(timer.current);\n      const { px, x, py, y } = coords.current;\n      if (Math.abs(px - x) + Math.abs(py - y) < sensitivity) {\n        state.current = 1;\n        onPointerOver(event);\n      } else {\n        coords.current.px = x;\n        coords.current.py = y;\n        timer.current = setTimeout(() => comparePosition(event), interval);\n      }\n    },\n    [interval, onPointerOver, sensitivity]\n  );\n  const cleanup = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    clearTimeout(timer.current);\n    if (typeof window !== \"undefined\") {\n      document.removeEventListener(\"mousemove\", onMouseMove, false);\n    }\n  }, [onMouseMove]);\n  const pointerOver = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      if (!disabled2) {\n        mouseOver.current = true;\n        cleanup();\n        if (state.current !== 1) {\n          coords.current.px = event.pointer.x;\n          coords.current.py = event.pointer.y;\n          if (typeof window !== \"undefined\") {\n            document.addEventListener(\"mousemove\", onMouseMove, false);\n          }\n          timer.current = setTimeout(() => comparePosition(event), timeout);\n        }\n      }\n    },\n    [cleanup, comparePosition, disabled2, onMouseMove, timeout]\n  );\n  const delay = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      timer.current = clearTimeout(timer.current);\n      state.current = 0;\n      onPointerOut(event);\n    },\n    [onPointerOut]\n  );\n  const pointerOut = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      mouseOver.current = false;\n      cleanup();\n      if (state.current === 1) {\n        timer.current = setTimeout(() => delay(event), timeout);\n      }\n    },\n    [cleanup, delay, timeout]\n  );\n  return {\n    pointerOver,\n    pointerOut\n  };\n};\nconst useDrag = ({\n  draggable,\n  set,\n  position,\n  bounds,\n  onDragStart,\n  onDragEnd\n}) => {\n  const camera = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.camera);\n  const raycaster = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.raycaster);\n  const size = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.size);\n  const gl = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.gl);\n  const { mouse2D, mouse3D, offset, normal, plane } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({\n      // Normalized 2D screen space mouse coords\n      mouse2D: new three__WEBPACK_IMPORTED_MODULE_30__.Vector2(),\n      // 3D world space mouse coords\n      mouse3D: new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(),\n      // Drag point offset from object origin\n      offset: new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(),\n      // Normal of the drag plane\n      normal: new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(),\n      // Drag plane\n      plane: new three__WEBPACK_IMPORTED_MODULE_30__.Plane()\n    }),\n    []\n  );\n  const clientRect = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => gl.domElement.getBoundingClientRect(),\n    [gl.domElement]\n  );\n  return (0,_use_gesture_react__WEBPACK_IMPORTED_MODULE_32__.useGesture)(\n    {\n      onDragStart: ({ event }) => {\n        const { eventObject, point } = event;\n        eventObject.getWorldPosition(offset).sub(point);\n        mouse3D.copy(point);\n        onDragStart();\n      },\n      onDrag: ({ xy, buttons, cancel }) => {\n        if (buttons !== 1) {\n          cancel();\n          return;\n        }\n        const nx = (xy[0] - ((clientRect == null ? void 0 : clientRect.left) ?? 0)) / size.width * 2 - 1;\n        const ny = -((xy[1] - ((clientRect == null ? void 0 : clientRect.top) ?? 0)) / size.height) * 2 + 1;\n        mouse2D.set(nx, ny);\n        raycaster.setFromCamera(mouse2D, camera);\n        camera.getWorldDirection(normal).negate();\n        plane.setFromNormalAndCoplanarPoint(normal, mouse3D);\n        raycaster.ray.intersectPlane(plane, mouse3D);\n        const updated = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(position.x, position.y, position.z).copy(mouse3D).add(offset);\n        if (bounds) {\n          const center = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(\n            (bounds.minX + bounds.maxX) / 2,\n            (bounds.minY + bounds.maxY) / 2,\n            (bounds.minZ + bounds.maxZ) / 2\n          );\n          const radius = (bounds.maxX - bounds.minX) / 2;\n          const direction = updated.clone().sub(center);\n          const distance = direction.length();\n          if (distance > radius) {\n            direction.normalize().multiplyScalar(radius);\n            updated.copy(center).add(direction);\n          }\n        }\n        return set(updated);\n      },\n      onDragEnd\n    },\n    { drag: { enabled: draggable, threshold: 10 } }\n  );\n};\nfunction findPath(graph, source, target) {\n  return (0,graphology_shortest_path__WEBPACK_IMPORTED_MODULE_8__.bidirectional)(graph, source, target);\n}\nconst { Provider, useStore } = (0,zustand_context__WEBPACK_IMPORTED_MODULE_33__[\"default\"])();\nconst createStore = ({\n  actives = [],\n  selections = [],\n  collapsedNodeIds = [],\n  theme\n}) => (0,zustand__WEBPACK_IMPORTED_MODULE_34__.create)((set) => ({\n  theme: {\n    ...theme,\n    edge: {\n      ...theme.edge,\n      label: {\n        ...theme.edge.label,\n        fontSize: theme.edge.label.fontSize ?? 6\n      }\n    }\n  },\n  edges: [],\n  nodes: [],\n  collapsedNodeIds,\n  clusters: /* @__PURE__ */ new Map(),\n  panning: false,\n  draggingIds: [],\n  actives,\n  edgeContextMenus: /* @__PURE__ */ new Set(),\n  edgeMeshes: [],\n  selections,\n  hoveredNodeId: null,\n  drags: {},\n  graph: new graphology__WEBPACK_IMPORTED_MODULE_9__[\"default\"]({ multi: true }),\n  setTheme: (theme2) => set((state) => ({ ...state, theme: theme2 })),\n  setClusters: (clusters) => set((state) => ({ ...state, clusters })),\n  setEdgeContextMenus: (edgeContextMenus) => set((state) => ({\n    ...state,\n    edgeContextMenus\n  })),\n  setEdgeMeshes: (edgeMeshes) => set((state) => ({ ...state, edgeMeshes })),\n  setPanning: (panning) => set((state) => ({ ...state, panning })),\n  setDrags: (drags) => set((state) => ({ ...state, drags })),\n  addDraggingId: (id) => set((state) => ({ ...state, draggingIds: [...state.draggingIds, id] })),\n  removeDraggingId: (id) => set((state) => ({\n    ...state,\n    draggingIds: state.draggingIds.filter((drag) => drag !== id)\n  })),\n  setActives: (actives2) => set((state) => ({ ...state, actives: actives2 })),\n  setSelections: (selections2) => set((state) => ({ ...state, selections: selections2 })),\n  setHoveredNodeId: (hoveredNodeId) => set((state) => ({ ...state, hoveredNodeId })),\n  setNodes: (nodes) => set((state) => ({\n    ...state,\n    nodes,\n    centerPosition: getLayoutCenter(nodes)\n  })),\n  setEdges: (edges) => set((state) => ({ ...state, edges })),\n  setNodePosition: (id, position) => set((state) => {\n    var _a2, _b2;\n    const node = state.nodes.find((n) => n.id === id);\n    const originalVector = getVector(node);\n    const newVector = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(position.x, position.y, position.z);\n    const offset = newVector.sub(originalVector);\n    const nodes = [...state.nodes];\n    if ((_a2 = state.selections) == null ? void 0 : _a2.includes(id)) {\n      (_b2 = state.selections) == null ? void 0 : _b2.forEach((id2) => {\n        const node2 = state.nodes.find((n) => n.id === id2);\n        if (node2) {\n          const nodeIndex = state.nodes.indexOf(node2);\n          nodes[nodeIndex] = updateNodePosition(node2, offset);\n        }\n      });\n    } else {\n      const nodeIndex = state.nodes.indexOf(node);\n      nodes[nodeIndex] = updateNodePosition(node, offset);\n    }\n    return {\n      ...state,\n      drags: {\n        ...state.drags,\n        [id]: node\n      },\n      nodes\n    };\n  }),\n  setCollapsedNodeIds: (nodeIds = []) => set((state) => ({ ...state, collapsedNodeIds: nodeIds })),\n  // Update the position of a cluster with nodes inside it\n  setClusterPosition: (id, position) => set((state) => {\n    const clusters = new Map(state.clusters);\n    const cluster = clusters.get(id);\n    if (cluster) {\n      const oldPos = cluster.position;\n      const offset = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(\n        position.x - oldPos.x,\n        position.y - oldPos.y,\n        position.z - (oldPos.z ?? 0)\n      );\n      const nodes = [...state.nodes];\n      const drags = { ...state.drags };\n      nodes.forEach((node, index) => {\n        if (node.cluster === id) {\n          nodes[index] = {\n            ...node,\n            position: {\n              ...node.position,\n              x: node.position.x + offset.x,\n              y: node.position.y + offset.y,\n              z: node.position.z + (offset.z ?? 0)\n            }\n          };\n          drags[node.id] = node;\n        }\n      });\n      const clusterNodes = nodes.filter(\n        (node) => node.cluster === id\n      );\n      const newClusterPosition = getLayoutCenter(clusterNodes);\n      clusters.set(id, {\n        ...cluster,\n        position: newClusterPosition\n      });\n      return {\n        ...state,\n        drags: {\n          ...drags,\n          [id]: cluster\n        },\n        clusters,\n        nodes\n      };\n    }\n    return state;\n  })\n}));\nfunction getHiddenChildren({\n  nodeId,\n  nodes,\n  edges,\n  currentHiddenNodes,\n  currentHiddenEdges\n}) {\n  const hiddenNodes = [];\n  const hiddenEdges = [];\n  const curHiddenNodeIds = currentHiddenNodes.map((n) => n.id);\n  const curHiddenEdgeIds = currentHiddenEdges.map((e) => e.id);\n  const outboundEdges = edges.filter((l) => l.source === nodeId);\n  const outboundEdgeNodeIds = outboundEdges.map((l) => l.target);\n  hiddenEdges.push(...outboundEdges);\n  for (const outboundEdgeNodeId of outboundEdgeNodeIds) {\n    const incomingEdges = edges.filter(\n      (l) => l.target === outboundEdgeNodeId && l.source !== nodeId\n    );\n    let hideNode = false;\n    if (incomingEdges.length === 0) {\n      hideNode = true;\n    } else if (incomingEdges.length > 0 && !curHiddenNodeIds.includes(outboundEdgeNodeId)) {\n      const inboundNodeLinkIds = incomingEdges.map((l) => l.id);\n      if (inboundNodeLinkIds.every((i) => curHiddenEdgeIds.includes(i))) {\n        hideNode = true;\n      }\n    }\n    if (hideNode) {\n      const node = nodes.find((n) => n.id === outboundEdgeNodeId);\n      if (node) {\n        hiddenNodes.push(node);\n      }\n      const nested = getHiddenChildren({\n        nodeId: outboundEdgeNodeId,\n        nodes,\n        edges,\n        currentHiddenEdges: hiddenEdges,\n        currentHiddenNodes: hiddenNodes\n      });\n      hiddenEdges.push(...nested.hiddenEdges);\n      hiddenNodes.push(...nested.hiddenNodes);\n    }\n  }\n  const uniqueEdges = Object.values(\n    hiddenEdges.reduce(\n      (acc, next) => ({\n        ...acc,\n        [next.id]: next\n      }),\n      {}\n    )\n  );\n  const uniqueNodes = Object.values(\n    hiddenNodes.reduce(\n      (acc, next) => ({\n        ...acc,\n        [next.id]: next\n      }),\n      {}\n    )\n  );\n  return {\n    hiddenEdges: uniqueEdges,\n    hiddenNodes: uniqueNodes\n  };\n}\nconst getVisibleEntities = ({\n  collapsedIds,\n  nodes,\n  edges\n}) => {\n  const curHiddenNodes = [];\n  const curHiddenEdges = [];\n  for (const collapsedId of collapsedIds) {\n    const { hiddenEdges, hiddenNodes } = getHiddenChildren({\n      nodeId: collapsedId,\n      nodes,\n      edges,\n      currentHiddenEdges: curHiddenEdges,\n      currentHiddenNodes: curHiddenNodes\n    });\n    curHiddenNodes.push(...hiddenNodes);\n    curHiddenEdges.push(...hiddenEdges);\n  }\n  const hiddenNodeIds = curHiddenNodes.map((n) => n.id);\n  const hiddenEdgeIds = curHiddenEdges.map((e) => e.id);\n  const visibleNodes = nodes.filter((n) => !hiddenNodeIds.includes(n.id));\n  const visibleEdges = edges.filter((e) => !hiddenEdgeIds.includes(e.id));\n  return {\n    visibleNodes,\n    visibleEdges\n  };\n};\nconst getExpandPath = ({\n  nodeId,\n  edges,\n  visibleEdgeIds\n}) => {\n  const parentIds = [];\n  const inboundEdges = edges.filter((l) => l.target === nodeId);\n  const inboundEdgeIds = inboundEdges.map((e) => e.id);\n  const hasVisibleInboundEdge = inboundEdgeIds.some(\n    (id) => visibleEdgeIds.includes(id)\n  );\n  if (hasVisibleInboundEdge) {\n    return parentIds;\n  }\n  const inboundEdgeNodeIds = inboundEdges.map((l) => l.source);\n  let addedParent = false;\n  for (const inboundNodeId of inboundEdgeNodeIds) {\n    if (!addedParent) {\n      parentIds.push(\n        ...[\n          inboundNodeId,\n          ...getExpandPath({ nodeId: inboundNodeId, edges, visibleEdgeIds })\n        ]\n      );\n      addedParent = true;\n    }\n  }\n  return parentIds;\n};\nconst useCollapse = ({\n  collapsedNodeIds = [],\n  nodes = [],\n  edges = []\n}) => {\n  const getIsCollapsed = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (nodeId) => {\n      const { visibleNodes } = getVisibleEntities({\n        nodes,\n        edges,\n        collapsedIds: collapsedNodeIds\n      });\n      const visibleNodeIds = visibleNodes.map((n) => n.id);\n      return !visibleNodeIds.includes(nodeId);\n    },\n    [collapsedNodeIds, edges, nodes]\n  );\n  const getExpandPathIds = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (nodeId) => {\n      const { visibleEdges } = getVisibleEntities({\n        nodes,\n        edges,\n        collapsedIds: collapsedNodeIds\n      });\n      const visibleEdgeIds = visibleEdges.map((e) => e.id);\n      return getExpandPath({ nodeId, edges, visibleEdgeIds });\n    },\n    [collapsedNodeIds, edges, nodes]\n  );\n  return {\n    getIsCollapsed,\n    getExpandPathIds\n  };\n};\nconst useGraph = ({\n  layoutType,\n  sizingType,\n  labelType,\n  sizingAttribute,\n  clusterAttribute,\n  selections,\n  nodes,\n  edges,\n  actives,\n  collapsedNodeIds,\n  defaultNodeSize,\n  maxNodeSize,\n  minNodeSize,\n  layoutOverrides,\n  constrainDragging\n}) => {\n  const graph = useStore((state) => state.graph);\n  const clusters = useStore((state) => state.clusters);\n  const storedNodes = useStore((state) => state.nodes);\n  const setClusters = useStore((state) => state.setClusters);\n  const stateCollapsedNodeIds = useStore((state) => state.collapsedNodeIds);\n  const setEdges = useStore((state) => state.setEdges);\n  const stateNodes = useStore((state) => state.nodes);\n  const setNodes = useStore((state) => state.setNodes);\n  const setSelections = useStore((state) => state.setSelections);\n  const setActives = useStore((state) => state.setActives);\n  const drags = useStore((state) => state.drags);\n  const setDrags = useStore((state) => state.setDrags);\n  const setCollapsedNodeIds = useStore((state) => state.setCollapsedNodeIds);\n  const layoutMounted = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n  const layout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  const camera = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.camera);\n  const dragRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(drags);\n  const clustersRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    var _a2;\n    if (!clusterAttribute) {\n      return;\n    }\n    const existedNodesIds = storedNodes.map((n) => n.id);\n    const newNode = nodes.find((n) => !existedNodesIds.includes(n.id));\n    if (newNode) {\n      const clusterName = newNode.data[clusterAttribute];\n      const cluster = clusters.get(clusterName);\n      const drags2 = { ...dragRef.current };\n      (_a2 = cluster == null ? void 0 : cluster.nodes) == null ? void 0 : _a2.forEach((node) => drags2[node.id] = void 0);\n      dragRef.current = drags2;\n      setDrags(drags2);\n    }\n  }, [storedNodes, nodes, clusterAttribute, clusters, setDrags]);\n  const { visibleEdges, visibleNodes } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => getVisibleEntities({\n      collapsedIds: stateCollapsedNodeIds,\n      nodes,\n      edges\n    }),\n    [stateCollapsedNodeIds, nodes, edges]\n  );\n  const updateDrags = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (nodes2) => {\n      const drags2 = { ...dragRef.current };\n      nodes2.forEach((node) => drags2[node.id] = node);\n      dragRef.current = drags2;\n      setDrags(drags2);\n    },\n    [setDrags]\n  );\n  const updateLayout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    async (curLayout) => {\n      layout.current = curLayout || layoutProvider({\n        ...layoutOverrides,\n        type: layoutType,\n        graph,\n        drags: dragRef.current,\n        clusters: clustersRef == null ? void 0 : clustersRef.current,\n        clusterAttribute\n      });\n      await tick(layout.current);\n      const result = transformGraph({\n        graph,\n        layout: layout.current,\n        sizingType,\n        labelType,\n        sizingAttribute,\n        maxNodeSize,\n        minNodeSize,\n        defaultNodeSize,\n        clusterAttribute\n      });\n      const newClusters = calculateClusters({\n        nodes: result.nodes,\n        clusterAttribute\n      });\n      if (constrainDragging) {\n        newClusters.forEach((cluster) => {\n          var _a2, _b2;\n          const prevCluster = clustersRef.current.get(cluster.label);\n          if ((prevCluster == null ? void 0 : prevCluster.nodes.length) === cluster.nodes.length) {\n            cluster.position = ((_b2 = (_a2 = clustersRef.current) == null ? void 0 : _a2.get(cluster.label)) == null ? void 0 : _b2.position) ?? cluster.position;\n          }\n        });\n      }\n      setEdges(result.edges);\n      setNodes(result.nodes);\n      setClusters(newClusters);\n      if (clusterAttribute) {\n        updateDrags(result.nodes);\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      layoutOverrides,\n      layoutType,\n      clusterAttribute,\n      sizingType,\n      labelType,\n      sizingAttribute,\n      maxNodeSize,\n      minNodeSize,\n      defaultNodeSize,\n      setEdges,\n      setNodes,\n      setClusters\n    ]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    dragRef.current = drags;\n  }, [drags, clusterAttribute, updateLayout]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    clustersRef.current = clusters;\n  }, [clusters]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    const nodes2 = stateNodes.map((node) => ({\n      ...node,\n      labelVisible: calcLabelVisibility({\n        nodeCount: stateNodes == null ? void 0 : stateNodes.length,\n        labelType,\n        camera,\n        nodePosition: node == null ? void 0 : node.position\n      })(\"node\", node == null ? void 0 : node.size)\n    }));\n    const isVisibilityUpdated = nodes2.some(\n      (node, i) => node.labelVisible !== stateNodes[i].labelVisible\n    );\n    if (isVisibilityUpdated) {\n      setNodes(nodes2);\n    }\n  }, [camera, camera.zoom, camera.position.z, setNodes, stateNodes, labelType]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (layoutMounted.current) {\n      setSelections(selections);\n    }\n  }, [selections, setSelections]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (layoutMounted.current) {\n      setActives(actives);\n    }\n  }, [actives, setActives]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    async function update() {\n      layoutMounted.current = false;\n      buildGraph(graph, visibleNodes, visibleEdges);\n      await updateLayout();\n      requestAnimationFrame(() => layoutMounted.current = true);\n    }\n    update();\n  }, [visibleNodes, visibleEdges]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (layoutMounted.current) {\n      setCollapsedNodeIds(collapsedNodeIds);\n    }\n  }, [collapsedNodeIds, setCollapsedNodeIds]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (layoutMounted.current) {\n      dragRef.current = {};\n      setDrags({});\n      updateLayout();\n    }\n  }, [layoutType, updateLayout, setDrags]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (layoutMounted.current) {\n      updateLayout(layout.current);\n    }\n  }, [sizingType, sizingAttribute, labelType, updateLayout]);\n  return {\n    updateLayout\n  };\n};\nconst Label = ({\n  text,\n  fontSize = 7,\n  fontUrl,\n  color = \"#2A6475\",\n  opacity = 1,\n  stroke,\n  active,\n  ellipsis = 75,\n  rotation\n}) => {\n  const shortText = ellipsis && !active ? ellipsize__WEBPACK_IMPORTED_MODULE_10__(text, ellipsis) : text;\n  const normalizedColor = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new three__WEBPACK_IMPORTED_MODULE_30__.Color(color), [color]);\n  const normalizedStroke = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => stroke ? new three__WEBPACK_IMPORTED_MODULE_30__.Color(stroke) : void 0,\n    [stroke]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(glodrei__WEBPACK_IMPORTED_MODULE_35__.Billboard, { position: [0, 0, 1], children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    glodrei__WEBPACK_IMPORTED_MODULE_36__.Text,\n    {\n      font: fontUrl,\n      fontSize,\n      color: normalizedColor,\n      fillOpacity: opacity,\n      textAlign: \"center\",\n      outlineWidth: stroke ? 1 : 0,\n      outlineColor: normalizedStroke,\n      depthOffset: 0,\n      maxWidth: 100,\n      overflowWrap: \"break-word\",\n      rotation,\n      children: shortText\n    }\n  ) });\n};\nconst Ring$1 = ({\n  color = \"#D8E6EA\",\n  size = 1,\n  opacity = 0.5,\n  animated,\n  strokeWidth = 5,\n  innerRadius = 4,\n  segments = 25\n}) => {\n  const normalizedColor = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new three__WEBPACK_IMPORTED_MODULE_30__.Color(color), [color]);\n  const { ringSize, ringOpacity } = (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)({\n    from: {\n      ringOpacity: 0,\n      ringSize: [1e-5, 1e-5, 1e-5]\n    },\n    to: {\n      ringOpacity: opacity,\n      ringSize: [size / 2, size / 2, 1]\n    },\n    config: {\n      ...animationConfig,\n      duration: animated ? void 0 : 0\n    }\n  });\n  const strokeWidthFraction = strokeWidth / 10;\n  const outerRadius = innerRadius + strokeWidthFraction;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(glodrei__WEBPACK_IMPORTED_MODULE_35__.Billboard, { position: [0, 0, 1], children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.mesh, { scale: ringSize, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      \"ringGeometry\",\n      {\n        attach: \"geometry\",\n        args: [innerRadius, outerRadius, segments]\n      }\n    ),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.meshBasicMaterial,\n      {\n        attach: \"material\",\n        color: normalizedColor,\n        transparent: true,\n        depthTest: false,\n        opacity: ringOpacity,\n        side: three__WEBPACK_IMPORTED_MODULE_30__.DoubleSide,\n        fog: true\n      }\n    )\n  ] }) });\n};\nconst Sphere = ({\n  color,\n  id,\n  size,\n  selected,\n  opacity = 1,\n  animated\n}) => {\n  const { scale, nodeOpacity } = (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)({\n    from: {\n      // Note: This prevents incorrect scaling w/ 0\n      scale: [1e-5, 1e-5, 1e-5],\n      nodeOpacity: 0\n    },\n    to: {\n      scale: [size, size, size],\n      nodeOpacity: opacity\n    },\n    config: {\n      ...animationConfig,\n      duration: animated ? void 0 : 0\n    }\n  });\n  const normalizedColor = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new three__WEBPACK_IMPORTED_MODULE_30__.Color(color), [color]);\n  const theme = useStore((state) => state.theme);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.mesh, { userData: { id, type: \"node\" }, scale, children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"sphereGeometry\", { attach: \"geometry\", args: [1, 25, 25] }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.meshPhongMaterial,\n        {\n          attach: \"material\",\n          side: three__WEBPACK_IMPORTED_MODULE_30__.DoubleSide,\n          transparent: true,\n          fog: true,\n          opacity: nodeOpacity,\n          color: normalizedColor\n        }\n      )\n    ] }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Ring$1,\n      {\n        opacity: selected ? 0.5 : 0,\n        size,\n        animated,\n        color: selected ? theme.ring.activeFill : theme.ring.fill\n      }\n    )\n  ] });\n};\nconst CameraControlsContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n  controls: null,\n  resetControls: () => void 0,\n  zoomIn: () => void 0,\n  zoomOut: () => void 0,\n  dollyIn: () => void 0,\n  dollyOut: () => void 0,\n  panLeft: () => void 0,\n  panRight: () => void 0,\n  panUp: () => void 0,\n  panDown: () => void 0,\n  freeze: () => void 0,\n  unFreeze: () => void 0\n});\nconst useCameraControls = () => {\n  const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(CameraControlsContext);\n  if (context === void 0) {\n    throw new Error(\n      \"`useCameraControls` hook must be used within a `ControlsProvider` component\"\n    );\n  }\n  return context;\n};\ncamera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].install({\n  THREE: {\n    MOUSE: three__WEBPACK_IMPORTED_MODULE_30__.MOUSE,\n    Vector2: three__WEBPACK_IMPORTED_MODULE_30__.Vector2,\n    Vector3: three__WEBPACK_IMPORTED_MODULE_30__.Vector3,\n    Vector4: three__WEBPACK_IMPORTED_MODULE_30__.Vector4,\n    Quaternion: three__WEBPACK_IMPORTED_MODULE_30__.Quaternion,\n    Matrix4: three__WEBPACK_IMPORTED_MODULE_30__.Matrix4,\n    Spherical: three__WEBPACK_IMPORTED_MODULE_30__.Spherical,\n    Box3: three__WEBPACK_IMPORTED_MODULE_30__.Box3,\n    Sphere: three__WEBPACK_IMPORTED_MODULE_30__.Sphere,\n    Raycaster: three__WEBPACK_IMPORTED_MODULE_30__.Raycaster,\n    MathUtils: {\n      DEG2RAD: (_a = three__WEBPACK_IMPORTED_MODULE_30__.MathUtils) == null ? void 0 : _a.DEG2RAD,\n      clamp: (_b = three__WEBPACK_IMPORTED_MODULE_30__.MathUtils) == null ? void 0 : _b.clamp\n    }\n  }\n});\n(0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.e)({ ThreeCameraControls: camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"] });\nconst KEY_CODES = {\n  ARROW_LEFT: 37,\n  ARROW_UP: 38,\n  ARROW_RIGHT: 39,\n  ARROW_DOWN: 40\n};\nconst leftKey = new hold_event__WEBPACK_IMPORTED_MODULE_14__.KeyboardKeyHold(KEY_CODES.ARROW_LEFT, 100);\nconst rightKey = new hold_event__WEBPACK_IMPORTED_MODULE_14__.KeyboardKeyHold(KEY_CODES.ARROW_RIGHT, 100);\nconst upKey = new hold_event__WEBPACK_IMPORTED_MODULE_14__.KeyboardKeyHold(KEY_CODES.ARROW_UP, 100);\nconst downKey = new hold_event__WEBPACK_IMPORTED_MODULE_14__.KeyboardKeyHold(KEY_CODES.ARROW_DOWN, 100);\nconst CameraControls = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(\n  ({\n    mode = \"rotate\",\n    children,\n    animated,\n    disabled: disabled2,\n    minDistance = 1e3,\n    maxDistance = 5e4\n  }, ref) => {\n    const cameraRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const camera = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.camera);\n    const gl = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.gl);\n    const isOrbiting = mode === \"orbit\";\n    const setPanning = useStore((state) => state.setPanning);\n    const isDragging = useStore((state) => state.draggingIds.length > 0);\n    const cameraSpeedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.A)((_state, delta) => {\n      var _a2, _b2;\n      if ((_a2 = cameraRef.current) == null ? void 0 : _a2.enabled) {\n        (_b2 = cameraRef.current) == null ? void 0 : _b2.update(delta);\n      }\n      if (isOrbiting) {\n        cameraRef.current.azimuthAngle += 20 * delta * three__WEBPACK_IMPORTED_MODULE_30__.MathUtils.DEG2RAD;\n      }\n    }, -1);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => () => {\n      var _a2;\n      return (_a2 = cameraRef.current) == null ? void 0 : _a2.dispose();\n    }, []);\n    const zoomIn = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n      var _a2;\n      (_a2 = cameraRef.current) == null ? void 0 : _a2.zoom(camera.zoom / 2, animated);\n    }, [animated, camera.zoom]);\n    const zoomOut = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n      var _a2;\n      (_a2 = cameraRef.current) == null ? void 0 : _a2.zoom(-camera.zoom / 2, animated);\n    }, [animated, camera.zoom]);\n    const dollyIn = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (distance) => {\n        var _a2;\n        (_a2 = cameraRef.current) == null ? void 0 : _a2.dolly(distance, animated);\n      },\n      [animated]\n    );\n    const dollyOut = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (distance) => {\n        var _a2;\n        (_a2 = cameraRef.current) == null ? void 0 : _a2.dolly(distance, animated);\n      },\n      [animated]\n    );\n    const panRight = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (event) => {\n        var _a2;\n        if (!isOrbiting) {\n          (_a2 = cameraRef.current) == null ? void 0 : _a2.truck(-0.03 * event.deltaTime, 0, animated);\n        }\n      },\n      [animated, isOrbiting]\n    );\n    const panLeft = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (event) => {\n        var _a2;\n        if (!isOrbiting) {\n          (_a2 = cameraRef.current) == null ? void 0 : _a2.truck(0.03 * event.deltaTime, 0, animated);\n        }\n      },\n      [animated, isOrbiting]\n    );\n    const panUp = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (event) => {\n        var _a2;\n        if (!isOrbiting) {\n          (_a2 = cameraRef.current) == null ? void 0 : _a2.truck(0, 0.03 * event.deltaTime, animated);\n        }\n      },\n      [animated, isOrbiting]\n    );\n    const panDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (event) => {\n        var _a2;\n        if (!isOrbiting) {\n          (_a2 = cameraRef.current) == null ? void 0 : _a2.truck(0, -0.03 * event.deltaTime, animated);\n        }\n      },\n      [animated, isOrbiting]\n    );\n    const onKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (event) => {\n        if (event.code === \"Space\") {\n          if (mode === \"rotate\") {\n            cameraRef.current.mouseButtons.left = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.TRUCK;\n          } else {\n            cameraRef.current.mouseButtons.left = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.ROTATE;\n          }\n        }\n      },\n      [mode]\n    );\n    const onKeyUp = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (event) => {\n        if (event.code === \"Space\") {\n          if (mode === \"rotate\") {\n            cameraRef.current.mouseButtons.left = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.ROTATE;\n          } else {\n            cameraRef.current.mouseButtons.left = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.TRUCK;\n          }\n        }\n      },\n      [mode]\n    );\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      if (!disabled2) {\n        leftKey.addEventListener(\"holding\", panLeft);\n        rightKey.addEventListener(\"holding\", panRight);\n        upKey.addEventListener(\"holding\", panUp);\n        downKey.addEventListener(\"holding\", panDown);\n        if (typeof window !== \"undefined\") {\n          window.addEventListener(\"keydown\", onKeyDown);\n          window.addEventListener(\"keyup\", onKeyUp);\n        }\n      }\n      return () => {\n        leftKey.removeEventListener(\"holding\", panLeft);\n        rightKey.removeEventListener(\"holding\", panRight);\n        upKey.removeEventListener(\"holding\", panUp);\n        downKey.removeEventListener(\"holding\", panDown);\n        if (typeof window !== \"undefined\") {\n          window.removeEventListener(\"keydown\", onKeyDown);\n          window.removeEventListener(\"keyup\", onKeyUp);\n        }\n      };\n    }, [disabled2, onKeyDown, onKeyUp, panDown, panLeft, panRight, panUp]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      if (disabled2) {\n        cameraRef.current.mouseButtons.left = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.NONE;\n        cameraRef.current.mouseButtons.middle = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.NONE;\n        cameraRef.current.mouseButtons.wheel = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.NONE;\n      } else {\n        cameraRef.current.mouseButtons.left = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.TRUCK;\n        cameraRef.current.mouseButtons.middle = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.TRUCK;\n        cameraRef.current.mouseButtons.wheel = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.DOLLY;\n      }\n    }, [disabled2]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      const onControl = () => setPanning(true);\n      const onControlEnd = () => setPanning(false);\n      const ref2 = cameraRef.current;\n      if (ref2) {\n        ref2.addEventListener(\"control\", onControl);\n        ref2.addEventListener(\"controlend\", onControlEnd);\n      }\n      return () => {\n        if (ref2) {\n          ref2.removeEventListener(\"control\", onControl);\n          ref2.removeEventListener(\"controlend\", onControlEnd);\n        }\n      };\n    }, [cameraRef, setPanning]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n      if (isDragging) {\n        cameraRef.current.mouseButtons.left = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.NONE;\n        cameraRef.current.touches.one = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.NONE;\n      } else {\n        if (mode === \"rotate\") {\n          cameraRef.current.mouseButtons.left = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.ROTATE;\n          cameraRef.current.touches.one = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.TOUCH_ROTATE;\n        } else {\n          cameraRef.current.touches.one = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.TOUCH_TRUCK;\n          cameraRef.current.mouseButtons.left = camera_controls__WEBPACK_IMPORTED_MODULE_12__[\"default\"].ACTION.TRUCK;\n        }\n      }\n    }, [isDragging, mode]);\n    (0,reakeys__WEBPACK_IMPORTED_MODULE_13__.useHotkeys)([\n      {\n        name: \"Zoom In\",\n        disabled: disabled2,\n        category: \"Graph\",\n        keys: \"command+shift+i\",\n        callback: (event) => {\n          event.preventDefault();\n          zoomIn();\n        }\n      },\n      {\n        name: \"Zoom Out\",\n        category: \"Graph\",\n        disabled: disabled2,\n        keys: \"command+shift+o\",\n        callback: (event) => {\n          event.preventDefault();\n          zoomOut();\n        }\n      }\n    ]);\n    const values = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n      () => ({\n        controls: cameraRef.current,\n        zoomIn: () => zoomIn(),\n        zoomOut: () => zoomOut(),\n        dollyIn: (distance = 1e3) => dollyIn(distance),\n        dollyOut: (distance = -1e3) => dollyOut(distance),\n        panLeft: (deltaTime = 100) => panLeft({ deltaTime }),\n        panRight: (deltaTime = 100) => panRight({ deltaTime }),\n        panDown: (deltaTime = 100) => panDown({ deltaTime }),\n        panUp: (deltaTime = 100) => panUp({ deltaTime }),\n        resetControls: (animated2) => {\n          var _a2;\n          return (_a2 = cameraRef.current) == null ? void 0 : _a2.reset(animated2);\n        },\n        freeze: () => {\n          if (cameraRef.current.truckSpeed) {\n            cameraSpeedRef.current = cameraRef.current.truckSpeed;\n          }\n          cameraRef.current.truckSpeed = 0;\n        },\n        unFreeze: () => cameraRef.current.truckSpeed = cameraSpeedRef.current\n      }),\n      // eslint-disable-next-line\n      [zoomIn, zoomOut, panLeft, panRight, panDown, panUp, cameraRef.current]\n    );\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, () => values);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(CameraControlsContext.Provider, { value: values, children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"threeCameraControls\",\n        {\n          ref: cameraRef,\n          args: [camera, gl.domElement],\n          smoothTime: 0.1,\n          minDistance,\n          dollyToCursor: true,\n          maxDistance\n        }\n      ),\n      children\n    ] });\n  }\n);\nfunction visibleHeightAtZDepth(depth, camera) {\n  const cameraOffset = camera.position.z;\n  if (depth < cameraOffset)\n    depth -= cameraOffset;\n  else\n    depth += cameraOffset;\n  const vFOV = camera.fov / camera.zoom * Math.PI / 180;\n  return 2 * Math.tan(vFOV / 2) * Math.abs(depth);\n}\nfunction visibleWidthAtZDepth(depth, camera) {\n  const height = visibleHeightAtZDepth(depth, camera);\n  return height * camera.aspect;\n}\nfunction isNodeInView(camera, nodePosition) {\n  var _a2, _b2, _c, _d;\n  const visibleWidth = visibleWidthAtZDepth(1, camera);\n  const visibleHeight = visibleHeightAtZDepth(1, camera);\n  const visibleArea = {\n    x0: ((_a2 = camera == null ? void 0 : camera.position) == null ? void 0 : _a2.x) - visibleWidth / 2,\n    x1: ((_b2 = camera == null ? void 0 : camera.position) == null ? void 0 : _b2.x) + visibleWidth / 2,\n    y0: ((_c = camera == null ? void 0 : camera.position) == null ? void 0 : _c.y) - visibleHeight / 2,\n    y1: ((_d = camera == null ? void 0 : camera.position) == null ? void 0 : _d.y) + visibleHeight / 2\n  };\n  return (nodePosition == null ? void 0 : nodePosition.x) > visibleArea.x0 && (nodePosition == null ? void 0 : nodePosition.x) < visibleArea.x1 && (nodePosition == null ? void 0 : nodePosition.y) > visibleArea.y0 && (nodePosition == null ? void 0 : nodePosition.y) < visibleArea.y1;\n}\nfunction getClosestAxis(angle, axes) {\n  return axes.reduce(\n    (prev, curr) => Math.abs(curr - angle % Math.PI) < Math.abs(prev - angle % Math.PI) ? curr : prev\n  );\n}\nfunction getDegreesToClosest2dAxis(horizontalAngle, verticalAngle) {\n  const closestHorizontalAxis = getClosestAxis(horizontalAngle, [0, Math.PI]);\n  const closestVerticalAxis = getClosestAxis(verticalAngle, [\n    Math.PI / 2,\n    3 * Math.PI / 2\n  ]);\n  return {\n    horizontalRotation: closestHorizontalAxis - horizontalAngle % Math.PI,\n    verticalRotation: closestVerticalAxis - verticalAngle % Math.PI\n  };\n}\nconst PADDING = 50;\nconst useCenterGraph = ({\n  animated,\n  disabled: disabled2,\n  layoutType\n}) => {\n  const nodes = useStore((state) => state.nodes);\n  const [isCentered, setIsCentered] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const invalidate = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.invalidate);\n  const { controls } = useCameraControls();\n  const camera = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.camera);\n  const mounted = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n  const centerNodes = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    async (nodes2, opts) => {\n      const animated2 = (opts == null ? void 0 : opts.animated) !== void 0 ? opts == null ? void 0 : opts.animated : true;\n      const centerOnlyIfNodesNotInView = (opts == null ? void 0 : opts.centerOnlyIfNodesNotInView) !== void 0 ? opts == null ? void 0 : opts.centerOnlyIfNodesNotInView : false;\n      if (!mounted.current || !centerOnlyIfNodesNotInView || centerOnlyIfNodesNotInView && (nodes2 == null ? void 0 : nodes2.some((node) => !isNodeInView(camera, node.position)))) {\n        const { x, y, z } = getLayoutCenter(nodes2);\n        await controls.setTarget(x, y, z, animated2);\n        if (!isCentered) {\n          setIsCentered(true);\n        }\n        invalidate();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [invalidate, controls, nodes]\n  );\n  const fitNodesInView = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    async (nodes2, opts = { animated: true, fitOnlyIfNodesNotInView: false }) => {\n      const { fitOnlyIfNodesNotInView } = opts;\n      if (!fitOnlyIfNodesNotInView || fitOnlyIfNodesNotInView && (nodes2 == null ? void 0 : nodes2.some((node) => !isNodeInView(camera, node.position)))) {\n        const { minX, maxX, minY, maxY, minZ, maxZ } = getLayoutCenter(nodes2);\n        if (!layoutType.includes(\"3d\")) {\n          const { horizontalRotation, verticalRotation } = getDegreesToClosest2dAxis(\n            controls == null ? void 0 : controls.azimuthAngle,\n            controls == null ? void 0 : controls.polarAngle\n          );\n          void (controls == null ? void 0 : controls.rotate(horizontalRotation, verticalRotation, true));\n        }\n        await (controls == null ? void 0 : controls.zoomTo(1, opts == null ? void 0 : opts.animated));\n        await (controls == null ? void 0 : controls.fitToBox(\n          new three__WEBPACK_IMPORTED_MODULE_30__.Box3(\n            new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(minX, minY, minZ),\n            new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(maxX, maxY, maxZ)\n          ),\n          opts == null ? void 0 : opts.animated,\n          {\n            cover: false,\n            paddingLeft: PADDING,\n            paddingRight: PADDING,\n            paddingBottom: PADDING,\n            paddingTop: PADDING\n          }\n        ));\n      }\n    },\n    [camera, controls, layoutType]\n  );\n  const getNodesById = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (nodeIds) => {\n      let mappedNodes = null;\n      if (nodeIds == null ? void 0 : nodeIds.length) {\n        mappedNodes = nodeIds.reduce((acc, id) => {\n          const node = nodes.find((n) => n.id === id);\n          if (node) {\n            acc.push(node);\n          } else {\n            throw new Error(\n              `Attempted to center ${id} but it was not found in the nodes`\n            );\n          }\n          return acc;\n        }, []);\n      }\n      return mappedNodes;\n    },\n    [nodes]\n  );\n  const centerNodesById = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (nodeIds, opts) => {\n      const mappedNodes = getNodesById(nodeIds);\n      centerNodes(mappedNodes || nodes, {\n        animated,\n        centerOnlyIfNodesNotInView: opts == null ? void 0 : opts.centerOnlyIfNodesNotInView\n      });\n    },\n    [animated, centerNodes, getNodesById, nodes]\n  );\n  const fitNodesInViewById = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    async (nodeIds, opts) => {\n      const mappedNodes = getNodesById(nodeIds);\n      await fitNodesInView(mappedNodes || nodes, { animated, ...opts });\n    },\n    [animated, fitNodesInView, getNodesById, nodes]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {\n    async function load() {\n      if (controls && (nodes == null ? void 0 : nodes.length)) {\n        if (!mounted.current) {\n          await centerNodes(nodes, { animated: false });\n          await fitNodesInView(nodes, { animated: false });\n          mounted.current = true;\n        }\n      }\n    }\n    load();\n  }, [controls, centerNodes, nodes, animated, camera, fitNodesInView]);\n  (0,reakeys__WEBPACK_IMPORTED_MODULE_13__.useHotkeys)([\n    {\n      name: \"Center\",\n      disabled: disabled2,\n      category: \"Graph\",\n      keys: [\"command+shift+c\"],\n      callback: () => centerNodes(nodes)\n    }\n  ]);\n  return { centerNodes, centerNodesById, fitNodesInViewById, isCentered };\n};\nconst Icon = ({\n  image,\n  id,\n  size,\n  opacity = 1,\n  animated\n}) => {\n  const texture = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new three__WEBPACK_IMPORTED_MODULE_30__.TextureLoader().load(image), [image]);\n  const { scale, spriteOpacity } = (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)({\n    from: {\n      scale: [1e-5, 1e-5, 1e-5],\n      spriteOpacity: 0\n    },\n    to: {\n      scale: [size, size, size],\n      spriteOpacity: opacity\n    },\n    config: {\n      ...animationConfig,\n      duration: animated ? void 0 : 0\n    }\n  });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.sprite, { userData: { id, type: \"node\" }, scale, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.spriteMaterial,\n    {\n      attach: \"material\",\n      opacity: spriteOpacity,\n      fog: true,\n      depthTest: false,\n      transparent: true,\n      side: three__WEBPACK_IMPORTED_MODULE_30__.DoubleSide,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"primitive\", { attach: \"map\", object: texture, minFilter: three__WEBPACK_IMPORTED_MODULE_30__.LinearFilter })\n    }\n  ) });\n};\nconst SphereWithIcon = ({\n  color,\n  id,\n  size,\n  opacity = 1,\n  node,\n  active = false,\n  animated,\n  image,\n  selected\n}) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Sphere,\n    {\n      id,\n      selected,\n      size,\n      opacity,\n      animated,\n      color,\n      node,\n      active\n    }\n  ),\n  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Icon,\n    {\n      id,\n      image,\n      selected,\n      size: size + 8,\n      opacity,\n      animated,\n      color,\n      node,\n      active\n    }\n  )\n] });\nconst Svg = ({\n  id,\n  image,\n  color,\n  size,\n  opacity = 1,\n  animated,\n  ...rest\n}) => {\n  const normalizedSize = size / 25;\n  const { scale } = (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)({\n    from: {\n      scale: [1e-5, 1e-5, 1e-5]\n    },\n    to: {\n      scale: [normalizedSize, normalizedSize, normalizedSize]\n    },\n    config: {\n      ...animationConfig,\n      duration: animated ? void 0 : 0\n    }\n  });\n  const normalizedColor = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new three__WEBPACK_IMPORTED_MODULE_30__.Color(color), [color]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.group, { userData: { id, type: \"node\" }, scale, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(glodrei__WEBPACK_IMPORTED_MODULE_35__.Billboard, { position: [0, 0, 1], children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    glodrei__WEBPACK_IMPORTED_MODULE_37__.Svg,\n    {\n      ...rest,\n      src: image,\n      fillMaterial: {\n        fog: true,\n        depthTest: false,\n        transparent: true,\n        color: normalizedColor,\n        opacity,\n        side: three__WEBPACK_IMPORTED_MODULE_30__.DoubleSide,\n        ...rest.fillMaterial || {}\n      },\n      fillMeshProps: {\n        // Note: This is a hack to get the svg to\n        // render in the correct position.\n        position: [-25, -25, 1],\n        ...rest.fillMeshProps || {}\n      }\n    }\n  ) }) });\n};\nconst SphereWithSvg = ({\n  color,\n  id,\n  size,\n  opacity = 1,\n  node,\n  svgFill,\n  active = false,\n  animated,\n  image,\n  selected,\n  ...rest\n}) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Sphere,\n    {\n      id,\n      selected,\n      size,\n      opacity,\n      animated,\n      color,\n      node,\n      active\n    }\n  ),\n  /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    Svg,\n    {\n      ...rest,\n      id,\n      selected,\n      image,\n      size,\n      opacity,\n      animated,\n      color: svgFill,\n      node,\n      active\n    }\n  )\n] });\nconst Node = ({\n  animated,\n  disabled: disabled2,\n  id,\n  draggable = false,\n  labelFontUrl,\n  contextMenu,\n  onClick,\n  onDoubleClick,\n  onPointerOver,\n  onDragged,\n  onPointerOut,\n  onContextMenu,\n  renderNode,\n  constrainDragging\n}) => {\n  var _a2, _b2, _c;\n  const cameraControls = useCameraControls();\n  const theme = useStore((state) => state.theme);\n  const node = useStore((state) => state.nodes.find((n) => n.id === id));\n  const edges = useStore((state) => state.edges);\n  const draggingIds = useStore((state) => state.draggingIds);\n  const collapsedNodeIds = useStore((state) => state.collapsedNodeIds);\n  const addDraggingId = useStore((state) => state.addDraggingId);\n  const removeDraggingId = useStore((state) => state.removeDraggingId);\n  const setHoveredNodeId = useStore((state) => state.setHoveredNodeId);\n  const setNodePosition = useStore((state) => state.setNodePosition);\n  const setCollapsedNodeIds = useStore((state) => state.setCollapsedNodeIds);\n  const isCollapsed = useStore((state) => state.collapsedNodeIds.includes(id));\n  const isActive = useStore((state) => {\n    var _a3;\n    return (_a3 = state.actives) == null ? void 0 : _a3.includes(id);\n  });\n  const isSelected = useStore((state) => {\n    var _a3;\n    return (_a3 = state.selections) == null ? void 0 : _a3.includes(id);\n  });\n  const hasSelections = useStore((state) => {\n    var _a3;\n    return ((_a3 = state.selections) == null ? void 0 : _a3.length) > 0;\n  });\n  const center = useStore((state) => state.centerPosition);\n  const cluster = useStore((state) => state.clusters.get(node.cluster));\n  const isDraggingCurrent = draggingIds.includes(id);\n  const isDragging = draggingIds.length > 0;\n  const {\n    position,\n    label,\n    subLabel,\n    size: nodeSize = 7,\n    labelVisible = true\n  } = node;\n  const group = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  const [active, setActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [menuVisible, setMenuVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const shouldHighlight = active || isSelected || isActive;\n  const selectionOpacity = hasSelections ? shouldHighlight ? theme.node.selectedOpacity : theme.node.inactiveOpacity : theme.node.opacity;\n  const canCollapse = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    const outboundLinks = edges.filter((l) => l.source === id);\n    return outboundLinks.length > 0 || isCollapsed;\n  }, [edges, id, isCollapsed]);\n  const onCollapse = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    if (canCollapse) {\n      if (isCollapsed) {\n        setCollapsedNodeIds(collapsedNodeIds.filter((p) => p !== id));\n      } else {\n        setCollapsedNodeIds([...collapsedNodeIds, id]);\n      }\n    }\n  }, [canCollapse, collapsedNodeIds, id, isCollapsed, setCollapsedNodeIds]);\n  const [{ nodePosition, labelPosition, subLabelPosition }] = (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)(\n    () => ({\n      from: {\n        nodePosition: center ? [center.x, center.y, 0] : [0, 0, 0],\n        labelPosition: [0, -(nodeSize + 7), 2],\n        subLabelPosition: [0, -(nodeSize + 14), 2]\n      },\n      to: {\n        nodePosition: position ? [\n          position.x,\n          position.y,\n          shouldHighlight ? position.z + 1 : position.z\n        ] : [0, 0, 0],\n        labelPosition: [0, -(nodeSize + 7), 2],\n        subLabelPosition: [0, -(nodeSize + 14), 2]\n      },\n      config: {\n        ...animationConfig,\n        duration: animated && !isDragging ? void 0 : 0\n      }\n    }),\n    [isDraggingCurrent, position, animated, nodeSize, shouldHighlight]\n  );\n  const bind = useDrag({\n    draggable,\n    position,\n    // If dragging is constrained to the cluster, use the cluster's position as the bounds\n    bounds: constrainDragging ? cluster == null ? void 0 : cluster.position : void 0,\n    // @ts-ignore\n    set: (pos) => setNodePosition(id, pos),\n    onDragStart: () => {\n      addDraggingId(id);\n      setActive(true);\n    },\n    onDragEnd: () => {\n      removeDraggingId(id);\n      onDragged == null ? void 0 : onDragged(node);\n    }\n  });\n  (0,glodrei__WEBPACK_IMPORTED_MODULE_38__.useCursor)(active && !isDragging && onClick !== void 0, \"pointer\");\n  (0,glodrei__WEBPACK_IMPORTED_MODULE_38__.useCursor)(\n    active && draggable && !isDraggingCurrent && onClick === void 0,\n    \"grab\"\n  );\n  (0,glodrei__WEBPACK_IMPORTED_MODULE_38__.useCursor)(isDraggingCurrent, \"grabbing\");\n  const combinedActiveState = shouldHighlight || isDraggingCurrent;\n  const color = combinedActiveState ? theme.node.activeFill : node.fill || theme.node.fill;\n  const { pointerOver, pointerOut } = useHoverIntent({\n    disabled: disabled2 || isDraggingCurrent,\n    onPointerOver: (event) => {\n      cameraControls.freeze();\n      setActive(true);\n      onPointerOver == null ? void 0 : onPointerOver(node, event);\n      setHoveredNodeId(id);\n    },\n    onPointerOut: (event) => {\n      cameraControls.unFreeze();\n      setActive(false);\n      onPointerOut == null ? void 0 : onPointerOut(node, event);\n      setHoveredNodeId(null);\n    }\n  });\n  const nodeComponent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => renderNode ? renderNode({\n      id,\n      color,\n      size: nodeSize,\n      active: combinedActiveState,\n      opacity: selectionOpacity,\n      animated,\n      selected: isSelected,\n      node\n    }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: node.icon ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Icon,\n      {\n        id,\n        image: node.icon || \"\",\n        size: nodeSize + 8,\n        opacity: selectionOpacity,\n        animated,\n        color,\n        node,\n        active: combinedActiveState,\n        selected: isSelected\n      }\n    ) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Sphere,\n      {\n        id,\n        size: nodeSize,\n        opacity: selectionOpacity,\n        animated,\n        color,\n        node,\n        active: combinedActiveState,\n        selected: isSelected\n      }\n    ) }),\n    [\n      renderNode,\n      id,\n      color,\n      nodeSize,\n      combinedActiveState,\n      selectionOpacity,\n      animated,\n      isSelected,\n      node\n    ]\n  );\n  const labelComponent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => {\n      var _a3, _b3, _c2;\n      return labelVisible && (labelVisible || isSelected || active) && label && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.group, { position: labelPosition, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          Label,\n          {\n            text: label,\n            fontUrl: labelFontUrl,\n            opacity: selectionOpacity,\n            stroke: theme.node.label.stroke,\n            active: isSelected || active || isDraggingCurrent || isActive,\n            color: isSelected || active || isDraggingCurrent || isActive ? theme.node.label.activeColor : theme.node.label.color\n          }\n        ) }),\n        subLabel && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.group, { position: subLabelPosition, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          Label,\n          {\n            text: subLabel,\n            fontUrl: labelFontUrl,\n            fontSize: 5,\n            opacity: selectionOpacity,\n            stroke: (_a3 = theme.node.subLabel) == null ? void 0 : _a3.stroke,\n            active: isSelected || active || isDraggingCurrent || isActive,\n            color: isSelected || active || isDraggingCurrent || isActive ? (_b3 = theme.node.subLabel) == null ? void 0 : _b3.activeColor : (_c2 = theme.node.subLabel) == null ? void 0 : _c2.color\n          }\n        ) })\n      ] });\n    },\n    [\n      active,\n      isActive,\n      isDraggingCurrent,\n      isSelected,\n      label,\n      labelFontUrl,\n      labelPosition,\n      labelVisible,\n      selectionOpacity,\n      subLabel,\n      subLabelPosition,\n      theme.node.label.activeColor,\n      theme.node.label.color,\n      theme.node.label.stroke,\n      (_a2 = theme.node.subLabel) == null ? void 0 : _a2.activeColor,\n      (_b2 = theme.node.subLabel) == null ? void 0 : _b2.color,\n      (_c = theme.node.subLabel) == null ? void 0 : _c.stroke\n    ]\n  );\n  const menuComponent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => menuVisible && contextMenu && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(glodrei__WEBPACK_IMPORTED_MODULE_39__.Html, { prepend: true, center: true, children: contextMenu({\n      data: node,\n      canCollapse,\n      isCollapsed,\n      onCollapse,\n      onClose: () => setMenuVisible(false)\n    }) }),\n    [menuVisible, contextMenu, node, canCollapse, isCollapsed, onCollapse]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.group,\n    {\n      renderOrder: 1,\n      userData: { id, type: \"node\" },\n      ref: group,\n      position: nodePosition,\n      onPointerOver: pointerOver,\n      onPointerOut: pointerOut,\n      onClick: (event) => {\n        if (!disabled2 && !isDraggingCurrent) {\n          onClick == null ? void 0 : onClick(\n            node,\n            {\n              canCollapse,\n              isCollapsed\n            },\n            event\n          );\n        }\n      },\n      onDoubleClick: (event) => {\n        if (!disabled2 && !isDraggingCurrent) {\n          onDoubleClick == null ? void 0 : onDoubleClick(node, event);\n        }\n      },\n      onContextMenu: () => {\n        if (!disabled2) {\n          setMenuVisible(true);\n          onContextMenu == null ? void 0 : onContextMenu(node, {\n            canCollapse,\n            isCollapsed,\n            onCollapse\n          });\n        }\n      },\n      ...bind(),\n      children: [\n        nodeComponent,\n        menuComponent,\n        labelComponent\n      ]\n    }\n  );\n};\nconst Arrow = ({\n  animated,\n  color = \"#D8E6EA\",\n  length,\n  opacity = 0.5,\n  position,\n  rotation,\n  size = 1,\n  onActive,\n  onContextMenu\n}) => {\n  const normalizedColor = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new three__WEBPACK_IMPORTED_MODULE_30__.Color(color), [color]);\n  const meshRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  const isDragging = useStore((state) => state.draggingIds.length > 0);\n  const center = useStore((state) => state.centerPosition);\n  const [{ pos, arrowOpacity }] = (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)(\n    () => ({\n      from: {\n        pos: center ? [center.x, center.y, center.z] : [0, 0, 0],\n        arrowOpacity: 0\n      },\n      to: {\n        pos: [position.x, position.y, position.z],\n        arrowOpacity: opacity\n      },\n      config: {\n        ...animationConfig,\n        duration: animated && !isDragging ? void 0 : 0\n      }\n    }),\n    [animated, isDragging, opacity, position]\n  );\n  const setQuaternion = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    var _a2;\n    const axis = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(0, 1, 0);\n    (_a2 = meshRef.current) == null ? void 0 : _a2.quaternion.setFromUnitVectors(axis, rotation);\n  }, [rotation, meshRef]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => setQuaternion(), [setQuaternion]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.mesh,\n    {\n      position: pos,\n      ref: meshRef,\n      scale: [1, 1, 1],\n      onPointerOver: () => onActive(true),\n      onPointerOut: () => onActive(false),\n      onPointerDown: (event) => {\n        if (event.nativeEvent.buttons === 2) {\n          event.stopPropagation();\n          onContextMenu();\n        }\n      },\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"cylinderGeometry\",\n          {\n            args: [0, size, length, 20, 1, true],\n            attach: \"geometry\"\n          }\n        ),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.meshBasicMaterial,\n          {\n            attach: \"material\",\n            color: normalizedColor,\n            depthTest: false,\n            opacity: arrowOpacity,\n            transparent: true,\n            side: three__WEBPACK_IMPORTED_MODULE_30__.DoubleSide,\n            fog: true\n          }\n        )\n      ]\n    }\n  );\n};\nconst Line = ({\n  curveOffset,\n  animated,\n  color = \"#000\",\n  curve,\n  curved = false,\n  id,\n  opacity = 1,\n  size = 1,\n  onContextMenu,\n  onClick,\n  onPointerOver,\n  onPointerOut\n}) => {\n  const tubeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  const isDragging = useStore((state) => state.draggingIds.length > 0);\n  const normalizedColor = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => new three__WEBPACK_IMPORTED_MODULE_30__.Color(color), [color]);\n  const center = useStore((state) => state.centerPosition);\n  const mounted = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n  const { lineOpacity } = (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)({\n    from: {\n      lineOpacity: 0\n    },\n    to: {\n      lineOpacity: opacity\n    },\n    config: {\n      ...animationConfig,\n      duration: animated ? void 0 : 0\n    }\n  });\n  (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)(() => {\n    const from = curve.getPoint(0);\n    const to = curve.getPoint(1);\n    return {\n      from: {\n        // Animate from center first time, then from the actual from point\n        fromVertices: !mounted.current ? [center == null ? void 0 : center.x, center == null ? void 0 : center.y, (center == null ? void 0 : center.z) || 0] : [to == null ? void 0 : to.x, to == null ? void 0 : to.y, (to == null ? void 0 : to.z) || 0],\n        toVertices: [from == null ? void 0 : from.x, from == null ? void 0 : from.y, (from == null ? void 0 : from.z) || 0]\n      },\n      to: {\n        fromVertices: [from == null ? void 0 : from.x, from == null ? void 0 : from.y, (from == null ? void 0 : from.z) || 0],\n        toVertices: [to == null ? void 0 : to.x, to == null ? void 0 : to.y, (to == null ? void 0 : to.z) || 0]\n      },\n      onChange: (event) => {\n        const { fromVertices, toVertices } = event.value;\n        const fromVector = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(...fromVertices);\n        const toVector = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(...toVertices);\n        const curve2 = getCurve(fromVector, 0, toVector, 0, curved, curveOffset);\n        tubeRef.current.copy(new three__WEBPACK_IMPORTED_MODULE_30__.TubeGeometry(curve2, 20, size / 2, 5, false));\n      },\n      config: {\n        ...animationConfig,\n        duration: animated && !isDragging ? void 0 : 0\n      }\n    };\n  }, [animated, isDragging, curve, size]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    mounted.current = true;\n  }, []);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n    \"mesh\",\n    {\n      userData: { id, type: \"edge\" },\n      onPointerOver,\n      onPointerOut,\n      onClick,\n      onPointerDown: (event) => {\n        if (event.nativeEvent.buttons === 2) {\n          event.stopPropagation();\n          onContextMenu();\n        }\n      },\n      children: [\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"tubeGeometry\", { attach: \"geometry\", ref: tubeRef }),\n        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.meshBasicMaterial,\n          {\n            attach: \"material\",\n            opacity: lineOpacity,\n            fog: true,\n            transparent: true,\n            depthTest: false,\n            color: normalizedColor\n          }\n        )\n      ]\n    }\n  );\n};\nconst LABEL_PLACEMENT_OFFSET = 3;\nconst Edge$1 = ({\n  animated,\n  arrowPlacement = \"end\",\n  contextMenu,\n  disabled: disabled2,\n  labelPlacement = \"inline\",\n  id,\n  interpolation,\n  labelFontUrl,\n  onContextMenu,\n  onClick,\n  onPointerOver,\n  onPointerOut\n}) => {\n  const theme = useStore((state) => state.theme);\n  const isDragging = useStore((state) => state.draggingIds.length > 0);\n  const [active, setActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const [menuVisible, setMenuVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const edges = useStore((state) => state.edges);\n  const edge = edges.find((e) => e.id === id);\n  const { target, source, label, labelVisible = false, size = 1, fill } = edge;\n  const from = useStore((store) => store.nodes.find((node) => node.id === source));\n  const to = useStore((store) => store.nodes.find((node) => node.id === target));\n  const labelOffset = (size + theme.edge.label.fontSize) / 2;\n  const [arrowLength, arrowSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => getArrowSize(size), [size]);\n  const { curveOffset, curved } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => calculateEdgeCurveOffset({\n      edge,\n      edges,\n      curved: interpolation === \"curved\"\n    }),\n    [edge, edges, interpolation]\n  );\n  const [curve, arrowPosition, arrowRotation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    const fromVector = getVector(from);\n    const fromOffset = from.size;\n    const toVector = getVector(to);\n    const toOffset = to.size;\n    let curve2 = getCurve(\n      fromVector,\n      fromOffset,\n      toVector,\n      toOffset,\n      curved,\n      curveOffset\n    );\n    const [arrowPosition2, arrowRotation2] = getArrowVectors(\n      arrowPlacement,\n      curve2,\n      arrowLength\n    );\n    if (arrowPlacement === \"end\") {\n      curve2 = getCurve(\n        fromVector,\n        fromOffset,\n        arrowPosition2,\n        0,\n        curved,\n        curveOffset\n      );\n    }\n    return [curve2, arrowPosition2, arrowRotation2];\n  }, [from, to, curved, curveOffset, arrowPlacement, arrowLength]);\n  const midPoint = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    let newMidPoint = getMidPoint(\n      from.position,\n      to.position,\n      getLabelOffsetByType(labelOffset, labelPlacement)\n    );\n    if (curved) {\n      const offset = new three__WEBPACK_IMPORTED_MODULE_30__.Vector3().subVectors(newMidPoint, curve.getPoint(0.5));\n      switch (labelPlacement) {\n        case \"above\":\n          offset.y = offset.y - LABEL_PLACEMENT_OFFSET;\n          break;\n        case \"below\":\n          offset.y = offset.y + LABEL_PLACEMENT_OFFSET;\n          break;\n      }\n      newMidPoint = newMidPoint.sub(offset);\n    }\n    return newMidPoint;\n  }, [from.position, to.position, labelOffset, labelPlacement, curved, curve]);\n  const isSelected = useStore((state) => {\n    var _a2;\n    return (_a2 = state.selections) == null ? void 0 : _a2.includes(id);\n  });\n  const hasSelections = useStore((state) => {\n    var _a2;\n    return (_a2 = state.selections) == null ? void 0 : _a2.length;\n  });\n  const isActive = useStore((state) => {\n    var _a2;\n    return (_a2 = state.actives) == null ? void 0 : _a2.includes(id);\n  });\n  const center = useStore((state) => state.centerPosition);\n  const selectionOpacity = hasSelections ? isSelected || isActive ? theme.edge.selectedOpacity : theme.edge.inactiveOpacity : theme.edge.opacity;\n  const [{ labelPosition }] = (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)(\n    () => ({\n      from: {\n        labelPosition: center ? [center.x, center.y, center.z] : [0, 0, 0]\n      },\n      to: {\n        labelPosition: [midPoint.x, midPoint.y, midPoint.z]\n      },\n      config: {\n        ...animationConfig,\n        duration: animated && !isDragging ? void 0 : 0\n      }\n    }),\n    [midPoint, animated, isDragging]\n  );\n  const labelRotation = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => new three__WEBPACK_IMPORTED_MODULE_30__.Euler(\n      0,\n      0,\n      labelPlacement === \"natural\" ? 0 : Math.atan(\n        (to.position.y - from.position.y) / (to.position.x - from.position.x)\n      )\n    ),\n    [\n      to.position.x,\n      to.position.y,\n      from.position.x,\n      from.position.y,\n      labelPlacement\n    ]\n  );\n  (0,glodrei__WEBPACK_IMPORTED_MODULE_38__.useCursor)(active && !isDragging && onClick !== void 0, \"pointer\");\n  const { pointerOver, pointerOut } = useHoverIntent({\n    disabled: disabled2,\n    onPointerOver: (event) => {\n      setActive(true);\n      onPointerOver == null ? void 0 : onPointerOver(edge, event);\n    },\n    onPointerOut: (event) => {\n      setActive(false);\n      onPointerOut == null ? void 0 : onPointerOut(edge, event);\n    }\n  });\n  const arrowComponent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => arrowPlacement !== \"none\" && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Arrow,\n      {\n        animated,\n        color: isSelected || active || isActive ? theme.arrow.activeFill : fill || theme.arrow.fill,\n        length: arrowLength,\n        opacity: selectionOpacity,\n        position: arrowPosition,\n        rotation: arrowRotation,\n        size: arrowSize,\n        onActive: setActive,\n        onContextMenu: () => {\n          if (!disabled2) {\n            setMenuVisible(true);\n            onContextMenu == null ? void 0 : onContextMenu(edge);\n          }\n        }\n      }\n    ),\n    [\n      fill,\n      active,\n      animated,\n      arrowLength,\n      arrowPlacement,\n      arrowPosition,\n      arrowRotation,\n      arrowSize,\n      disabled2,\n      edge,\n      isActive,\n      isSelected,\n      onContextMenu,\n      selectionOpacity,\n      theme.arrow.activeFill,\n      theme.arrow.fill\n    ]\n  );\n  const labelComponent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => labelVisible && label && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.group,\n      {\n        position: labelPosition,\n        onContextMenu: () => {\n          if (!disabled2) {\n            setMenuVisible(true);\n            onContextMenu == null ? void 0 : onContextMenu(edge);\n          }\n        },\n        onPointerOver: pointerOver,\n        onPointerOut: pointerOut,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          Label,\n          {\n            text: label,\n            ellipsis: 15,\n            fontUrl: labelFontUrl,\n            stroke: theme.edge.label.stroke,\n            color: isSelected || active || isActive ? theme.edge.label.activeColor : theme.edge.label.color,\n            opacity: selectionOpacity,\n            fontSize: theme.edge.label.fontSize,\n            rotation: labelRotation\n          }\n        )\n      }\n    ),\n    [\n      active,\n      disabled2,\n      edge,\n      isActive,\n      isSelected,\n      label,\n      labelFontUrl,\n      labelPosition,\n      labelRotation,\n      labelVisible,\n      onContextMenu,\n      pointerOut,\n      pointerOver,\n      selectionOpacity,\n      theme.edge.label.activeColor,\n      theme.edge.label.color,\n      theme.edge.label.fontSize,\n      theme.edge.label.stroke\n    ]\n  );\n  const menuComponent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => menuVisible && contextMenu && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(glodrei__WEBPACK_IMPORTED_MODULE_39__.Html, { prepend: true, center: true, position: midPoint, children: contextMenu({ data: edge, onClose: () => setMenuVisible(false) }) }),\n    [menuVisible, contextMenu, midPoint, edge]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"group\", { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Line,\n      {\n        curveOffset,\n        animated,\n        color: isSelected || active || isActive ? theme.edge.activeFill : fill || theme.edge.fill,\n        curve,\n        curved,\n        id,\n        opacity: selectionOpacity,\n        size,\n        onClick: (event) => {\n          if (!disabled2) {\n            onClick == null ? void 0 : onClick(edge, event);\n          }\n        },\n        onPointerOver: pointerOver,\n        onPointerOut: pointerOut,\n        onContextMenu: () => {\n          if (!disabled2) {\n            setMenuVisible(true);\n            onContextMenu == null ? void 0 : onContextMenu(edge);\n          }\n        }\n      }\n    ),\n    arrowComponent,\n    labelComponent,\n    menuComponent\n  ] });\n};\nconst NULL_GEOMETRY = new three__WEBPACK_IMPORTED_MODULE_30__.BoxGeometry(0, 0, 0);\nfunction useEdgeGeometry(arrowPlacement, interpolation) {\n  const stateRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n  const theme = useStore((state) => state.theme);\n  useStore((state) => {\n    stateRef.current = state;\n  });\n  const geometryCacheRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(/* @__PURE__ */ new Map());\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new three__WEBPACK_IMPORTED_MODULE_30__.BoxGeometry(0, 0, 0));\n  const baseArrowGeometryRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n  const curved = interpolation === \"curved\";\n  const getGeometries = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (edges) => {\n      const geometries = [];\n      const cache = geometryCacheRef.current;\n      const { nodes } = stateRef.current;\n      const nodesMap = new Map(nodes.map((node) => [node.id, node]));\n      const labelFontSize = theme.edge.label.fontSize;\n      if (arrowPlacement !== \"none\" && !baseArrowGeometryRef.current) {\n        baseArrowGeometryRef.current = new three__WEBPACK_IMPORTED_MODULE_30__.CylinderGeometry(\n          0,\n          1,\n          1,\n          20,\n          1,\n          true\n        );\n      }\n      edges.forEach((edge) => {\n        const { target, source, size = 1 } = edge;\n        const from = nodesMap.get(source);\n        const to = nodesMap.get(target);\n        if (!from || !to) {\n          return;\n        }\n        const hash = `${from.position.x},${from.position.y},${to.position.x},${to.position.y},${size}`;\n        if (cache.has(hash)) {\n          geometries.push(cache.get(hash));\n          return;\n        }\n        const fromVector = getVector(from);\n        const fromOffset = from.size + labelFontSize;\n        const toVector = getVector(to);\n        const toOffset = to.size + labelFontSize;\n        let curve = getCurve(\n          fromVector,\n          fromOffset,\n          toVector,\n          toOffset,\n          curved\n        );\n        let edgeGeometry = new three__WEBPACK_IMPORTED_MODULE_30__.TubeGeometry(curve, 20, size / 2, 5, false);\n        if (arrowPlacement === \"none\") {\n          geometries.push(edgeGeometry);\n          cache.set(hash, edgeGeometry);\n          return;\n        }\n        const [arrowLength, arrowSize] = getArrowSize(size);\n        const arrowGeometry = baseArrowGeometryRef.current.clone();\n        arrowGeometry.scale(arrowSize, arrowLength, arrowSize);\n        const [arrowPosition, arrowRotation] = getArrowVectors(\n          arrowPlacement,\n          curve,\n          arrowLength\n        );\n        const quaternion = new three__WEBPACK_IMPORTED_MODULE_30__.Quaternion();\n        quaternion.setFromUnitVectors(new three__WEBPACK_IMPORTED_MODULE_30__.Vector3(0, 1, 0), arrowRotation);\n        arrowGeometry.applyQuaternion(quaternion);\n        arrowGeometry.translate(\n          arrowPosition.x,\n          arrowPosition.y,\n          arrowPosition.z\n        );\n        if (arrowPlacement && arrowPlacement === \"end\") {\n          const curve2 = getCurve(\n            fromVector,\n            fromOffset,\n            arrowPosition,\n            0,\n            curved\n          );\n          edgeGeometry = new three__WEBPACK_IMPORTED_MODULE_30__.TubeGeometry(curve2, 20, size / 2, 5, false);\n        }\n        const merged = (0,three_stdlib__WEBPACK_IMPORTED_MODULE_40__.mergeBufferGeometries)([edgeGeometry, arrowGeometry]);\n        geometries.push(merged);\n        cache.set(hash, merged);\n      });\n      return geometries;\n    },\n    [arrowPlacement, curved, theme.edge.label.fontSize]\n  );\n  const getGeometry = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (active, inactive) => {\n      const activeGeometries = getGeometries(active);\n      const inactiveGeometries = getGeometries(inactive);\n      return (0,three_stdlib__WEBPACK_IMPORTED_MODULE_40__.mergeBufferGeometries)(\n        [\n          inactiveGeometries.length ? (0,three_stdlib__WEBPACK_IMPORTED_MODULE_40__.mergeBufferGeometries)(inactiveGeometries) : NULL_GEOMETRY,\n          activeGeometries.length ? (0,three_stdlib__WEBPACK_IMPORTED_MODULE_40__.mergeBufferGeometries)(activeGeometries) : NULL_GEOMETRY\n        ],\n        true\n      );\n    },\n    [getGeometries]\n  );\n  return {\n    getGeometries,\n    getGeometry\n  };\n}\nfunction useEdgeEvents(events, contextMenu, disabled2) {\n  const memoizedEvents = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(events);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    memoizedEvents.current = events;\n  }, [events]);\n  const edgeContextMenus = useStore((state) => state.edgeContextMenus);\n  const setEdgeContextMenus = useStore(\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((state) => state.setEdgeContextMenus, [])\n  );\n  const clickRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n  const handleClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    clickRef.current = true;\n  }, []);\n  const contextMenuEventRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n  const handleContextMenu = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    contextMenuEventRef.current = true;\n  }, []);\n  const handleIntersections = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (previous, intersected) => {\n      const { onClick, onContextMenu, onPointerOver, onPointerOut } = memoizedEvents.current;\n      if (onClick && clickRef.current && !disabled2) {\n        clickRef.current = false;\n        for (const edge of intersected) {\n          onClick(edge);\n        }\n      }\n      if ((contextMenu || onContextMenu) && contextMenuEventRef.current && !disabled2) {\n        contextMenuEventRef.current = false;\n        const newEdges = new Set(edgeContextMenus);\n        let hasChanges = false;\n        for (const edge of intersected) {\n          if (!edgeContextMenus.has(edge.id)) {\n            newEdges.add(edge.id);\n            hasChanges = true;\n            onContextMenu == null ? void 0 : onContextMenu(edge);\n          }\n        }\n        if (hasChanges) {\n          setEdgeContextMenus(newEdges);\n        }\n      }\n      if (onPointerOver) {\n        const over = intersected.filter((index) => !previous.includes(index));\n        over.forEach((edge) => {\n          onPointerOver(edge);\n        });\n      }\n      if (onPointerOut) {\n        const out = previous.filter((index) => !intersected.includes(index));\n        out.forEach((edge) => {\n          onPointerOut(edge);\n        });\n      }\n    },\n    [contextMenu, disabled2, edgeContextMenus, setEdgeContextMenus]\n  );\n  return {\n    handleClick,\n    handleContextMenu,\n    handleIntersections\n  };\n}\nfunction useEdgePositionAnimation(geometry, animated) {\n  const geometryRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(geometry);\n  const bufferPool = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    geometryRef.current = geometry;\n    const positions = geometry.getAttribute(\"position\");\n    bufferPool.current = new Float32Array(positions.array.length);\n  }, [geometry]);\n  const getAnimationPositions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    const positions = geometryRef.current.getAttribute(\"position\");\n    const from = new Float32Array(positions.array.length);\n    return {\n      from,\n      to: positions.array\n    };\n  }, []);\n  const updateGeometryPosition = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((positions) => {\n    const buffer = bufferPool.current;\n    buffer.set(positions);\n    const newPosition = new three__WEBPACK_IMPORTED_MODULE_30__.BufferAttribute(buffer, 3, false);\n    geometryRef.current.setAttribute(\"position\", newPosition);\n    newPosition.needsUpdate = true;\n  }, []);\n  (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)(() => {\n    if (!animated) {\n      return null;\n    }\n    const animationPositions = getAnimationPositions();\n    return {\n      from: {\n        positions: animationPositions.from\n      },\n      to: {\n        positions: animationPositions.to\n      },\n      onChange: (event) => {\n        updateGeometryPosition(event.value.positions);\n      },\n      config: {\n        ...animationConfig,\n        duration: animated ? void 0 : 0\n      }\n    };\n  }, [animated, getAnimationPositions, updateGeometryPosition]);\n}\nfunction useEdgeOpacityAnimation(animated, hasSelections, theme) {\n  const [{ activeOpacity, inactiveOpacity }] = (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)(() => {\n    return {\n      from: {\n        activeOpacity: 0,\n        inactiveOpacity: 0\n      },\n      to: {\n        activeOpacity: hasSelections ? theme.edge.selectedOpacity : theme.edge.opacity,\n        inactiveOpacity: hasSelections ? theme.edge.inactiveOpacity : theme.edge.opacity\n      },\n      config: {\n        ...animationConfig,\n        duration: animated ? void 0 : 0\n      }\n    };\n  }, [animated, hasSelections, theme]);\n  return { activeOpacity, inactiveOpacity };\n}\nconst Edge = ({\n  animated,\n  color,\n  contextMenu,\n  edge,\n  labelFontUrl,\n  labelPlacement = \"inline\",\n  opacity\n}) => {\n  const theme = useStore((state) => state.theme);\n  const { target, source, label, labelVisible = false, size = 1 } = edge;\n  const nodes = useStore((store) => store.nodes);\n  const [from, to] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => [\n      nodes.find((node) => node.id === source),\n      nodes.find((node) => node.id === target)\n    ],\n    [nodes, source, target]\n  );\n  const isDragging = useStore((state) => state.draggingIds.length > 0);\n  const labelOffset = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => (size + theme.edge.label.fontSize) / 2,\n    [size, theme.edge.label.fontSize]\n  );\n  const midPoint = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => getMidPoint(\n      from.position,\n      to.position,\n      getLabelOffsetByType(labelOffset, labelPlacement)\n    ),\n    [from.position, to.position, labelOffset, labelPlacement]\n  );\n  const edgeContextMenus = useStore((state) => state.edgeContextMenus);\n  const setEdgeContextMenus = useStore((state) => state.setEdgeContextMenus);\n  const [{ labelPosition }] = (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)(\n    () => ({\n      from: {\n        labelPosition: [0, 0, 0]\n      },\n      to: {\n        labelPosition: [midPoint.x, midPoint.y, midPoint.z]\n      },\n      config: {\n        ...animationConfig,\n        duration: animated && !isDragging ? void 0 : 0\n      }\n    }),\n    [midPoint, animated, isDragging]\n  );\n  const removeContextMenu = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (edgeId) => {\n      edgeContextMenus.delete(edgeId);\n      setEdgeContextMenus(new Set(edgeContextMenus));\n    },\n    [edgeContextMenus, setEdgeContextMenus]\n  );\n  const labelRotation = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    if (labelPlacement === \"natural\") {\n      return new three__WEBPACK_IMPORTED_MODULE_30__.Euler(0, 0, 0);\n    }\n    return new three__WEBPACK_IMPORTED_MODULE_30__.Euler(\n      0,\n      0,\n      Math.atan2(\n        to.position.y - from.position.y,\n        to.position.x - from.position.x\n      )\n    );\n  }, [\n    labelPlacement,\n    to.position.y,\n    to.position.x,\n    from.position.y,\n    from.position.x\n  ]);\n  const htmlProps = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({\n      prepend: true,\n      center: true,\n      position: midPoint\n    }),\n    [midPoint]\n  );\n  const labelProps = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => ({\n      text: label,\n      ellipsis: 15,\n      fontUrl: labelFontUrl,\n      stroke: theme.edge.label.stroke,\n      color,\n      opacity,\n      fontSize: theme.edge.label.fontSize,\n      rotation: labelRotation\n    }),\n    [\n      label,\n      labelFontUrl,\n      theme.edge.label.stroke,\n      color,\n      opacity,\n      theme.edge.label.fontSize,\n      labelRotation\n    ]\n  );\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"group\", { children: [\n    labelVisible && label && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.group, { position: labelPosition, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Label, { ...labelProps }) }),\n    contextMenu && edgeContextMenus.has(edge.id) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(glodrei__WEBPACK_IMPORTED_MODULE_39__.Html, { ...htmlProps, children: contextMenu({\n      data: edge,\n      onClose: () => removeContextMenu(edge.id)\n    }) })\n  ] });\n};\nconst Edges = ({\n  interpolation = \"linear\",\n  arrowPlacement = \"end\",\n  labelPlacement = \"inline\",\n  animated,\n  contextMenu,\n  disabled: disabled2,\n  edges,\n  labelFontUrl,\n  onClick,\n  onContextMenu,\n  onPointerOut,\n  onPointerOver\n}) => {\n  const theme = useStore((state) => state.theme);\n  const { getGeometries, getGeometry } = useEdgeGeometry(\n    arrowPlacement,\n    interpolation\n  );\n  const draggingIds = useStore((state) => state.draggingIds);\n  const edgeMeshes = useStore((state) => state.edgeMeshes);\n  const setEdgeMeshes = useStore((state) => state.setEdgeMeshes);\n  const actives = useStore((state) => state.actives || []);\n  const selections = useStore((state) => state.selections || []);\n  const [active, inactive, draggingActive, draggingInactive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    const active2 = [];\n    const inactive2 = [];\n    const draggingActive2 = [];\n    const draggingInactive2 = [];\n    edges.forEach((edge) => {\n      if (draggingIds.includes(edge.source) || draggingIds.includes(edge.target)) {\n        if (selections.includes(edge.id) || actives.includes(edge.id)) {\n          draggingActive2.push(edge);\n        } else {\n          draggingInactive2.push(edge);\n        }\n        return;\n      }\n      if (selections.includes(edge.id) || actives.includes(edge.id)) {\n        active2.push(edge);\n      } else {\n        inactive2.push(edge);\n      }\n    });\n    return [active2, inactive2, draggingActive2, draggingInactive2];\n  }, [edges, actives, selections, draggingIds]);\n  const hasSelections = !!selections.length;\n  const staticEdgesGeometry = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => getGeometry(active, inactive),\n    [getGeometry, active, inactive]\n  );\n  const { activeOpacity, inactiveOpacity } = useEdgeOpacityAnimation(\n    animated,\n    hasSelections,\n    theme\n  );\n  useEdgePositionAnimation(staticEdgesGeometry, animated);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (draggingIds.length === 0) {\n      const edgeGeometries = getGeometries(edges);\n      const edgeMeshes2 = edgeGeometries.map((edge) => new three__WEBPACK_IMPORTED_MODULE_30__.Mesh(edge));\n      setEdgeMeshes(edgeMeshes2);\n    }\n  }, [getGeometries, setEdgeMeshes, edges, draggingIds.length]);\n  const staticEdgesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new three__WEBPACK_IMPORTED_MODULE_30__.Mesh());\n  const dynamicEdgesRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new three__WEBPACK_IMPORTED_MODULE_30__.Mesh());\n  const intersect = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (raycaster) => {\n      if (!raycaster.camera) {\n        return [];\n      }\n      const intersections = raycaster.intersectObjects(edgeMeshes);\n      if (!intersections.length) {\n        return [];\n      }\n      return intersections.map(\n        (intersection) => edges[edgeMeshes.indexOf(intersection.object)]\n      );\n    },\n    [edgeMeshes, edges]\n  );\n  const { handleClick, handleContextMenu, handleIntersections } = useEdgeEvents(\n    {\n      onClick,\n      onContextMenu,\n      onPointerOut,\n      onPointerOver\n    },\n    contextMenu,\n    disabled2\n  );\n  const draggingIdRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n  const intersectingRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);\n  (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.A)((state) => {\n    staticEdgesRef.current.geometry = staticEdgesGeometry;\n    if (disabled2) {\n      return;\n    }\n    const previousDraggingId = draggingIdRef.current;\n    if (draggingIds.length || draggingIds.length === 0 && previousDraggingId !== null) {\n      dynamicEdgesRef.current.geometry = getGeometry(\n        draggingActive,\n        draggingInactive\n      );\n    }\n    draggingIdRef.current = draggingIds;\n    if (draggingIds.length) {\n      return;\n    }\n    const previousIntersecting = intersectingRef.current;\n    const intersecting = intersect(state.raycaster);\n    handleIntersections(previousIntersecting, intersecting);\n    if (intersecting.join() !== previousIntersecting.join()) {\n      dynamicEdgesRef.current.geometry = getGeometry(intersecting, []);\n    }\n    intersectingRef.current = intersecting;\n  });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"group\", { onClick: handleClick, onContextMenu: handleContextMenu, children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"mesh\", { ref: staticEdgesRef, children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.meshBasicMaterial,\n        {\n          attach: \"material-0\",\n          color: theme.edge.fill,\n          depthTest: false,\n          fog: true,\n          opacity: inactiveOpacity,\n          side: three__WEBPACK_IMPORTED_MODULE_30__.DoubleSide,\n          transparent: true\n        }\n      ),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.meshBasicMaterial,\n        {\n          attach: \"material-1\",\n          color: theme.edge.activeFill,\n          depthTest: false,\n          fog: true,\n          opacity: activeOpacity,\n          side: three__WEBPACK_IMPORTED_MODULE_30__.DoubleSide,\n          transparent: true\n        }\n      )\n    ] }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"mesh\", { ref: dynamicEdgesRef, children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.meshBasicMaterial,\n        {\n          attach: \"material-0\",\n          color: theme.edge.fill,\n          depthTest: false,\n          fog: true,\n          opacity: inactiveOpacity,\n          side: three__WEBPACK_IMPORTED_MODULE_30__.DoubleSide,\n          transparent: true\n        }\n      ),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.meshBasicMaterial,\n        {\n          attach: \"material-1\",\n          color: theme.edge.activeFill,\n          depthTest: false,\n          fog: true,\n          opacity: activeOpacity,\n          side: three__WEBPACK_IMPORTED_MODULE_30__.DoubleSide,\n          transparent: true\n        }\n      )\n    ] }),\n    edges.map((edge) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      Edge,\n      {\n        animated,\n        contextMenu,\n        color: theme.edge.label.color,\n        disabled: disabled2,\n        edge,\n        labelFontUrl,\n        labelPlacement\n      },\n      edge.id\n    ))\n  ] });\n};\nconst Ring = ({\n  outerRadius,\n  innerRadius,\n  padding,\n  normalizedFill,\n  normalizedStroke,\n  opacity,\n  animated,\n  theme\n}) => {\n  var _a2;\n  const { opacity: springOpacity } = (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)({\n    from: { opacity: 0 },\n    to: { opacity },\n    config: {\n      ...animationConfig,\n      duration: animated ? void 0 : 0\n    }\n  });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"mesh\", { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ringGeometry\", { attach: \"geometry\", args: [outerRadius, 0, 128] }),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.meshBasicMaterial,\n        {\n          attach: \"material\",\n          color: normalizedFill,\n          transparent: true,\n          depthTest: false,\n          opacity: ((_a2 = theme.cluster) == null ? void 0 : _a2.fill) ? springOpacity : 0,\n          side: three__WEBPACK_IMPORTED_MODULE_30__.DoubleSide,\n          fog: true\n        }\n      )\n    ] }),\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"mesh\", { children: [\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        \"ringGeometry\",\n        {\n          attach: \"geometry\",\n          args: [outerRadius, innerRadius + padding, 128]\n        }\n      ),\n      /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.meshBasicMaterial,\n        {\n          attach: \"material\",\n          color: normalizedStroke,\n          transparent: true,\n          depthTest: false,\n          opacity: springOpacity,\n          side: three__WEBPACK_IMPORTED_MODULE_30__.DoubleSide,\n          fog: true\n        }\n      )\n    ] })\n  ] });\n};\nconst Cluster = ({\n  animated,\n  position,\n  padding = 40,\n  labelFontUrl,\n  disabled: disabled2,\n  radius = 2,\n  nodes,\n  label,\n  onClick,\n  onPointerOver,\n  onPointerOut,\n  draggable = false,\n  onDragged,\n  onRender\n}) => {\n  var _a2, _b2, _c, _d, _e, _f, _g;\n  const theme = useStore((state) => state.theme);\n  const rad = Math.max(position.width, position.height) / 2;\n  const offset = rad - radius + padding;\n  const [active, setActive] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const center = useStore((state) => state.centerPosition);\n  const nodesState = useStore((state) => state.nodes);\n  const cameraControls = useCameraControls();\n  const draggingIds = useStore((state) => state.draggingIds);\n  const isDraggingCurrent = draggingIds.includes(label);\n  const isDragging = draggingIds.length > 0;\n  const isActive = useStore(\n    (state) => {\n      var _a3;\n      return (_a3 = state.actives) == null ? void 0 : _a3.some((id) => nodes.some((n) => n.id === id));\n    }\n  );\n  const hoveredNodeId = useStore((state) => state.hoveredNodeId);\n  const isSelected = useStore(\n    (state) => {\n      var _a3;\n      return (_a3 = state.selections) == null ? void 0 : _a3.some((id) => nodes.some((n) => n.id === id));\n    }\n  );\n  const hasSelections = useStore((state) => {\n    var _a3;\n    return ((_a3 = state.selections) == null ? void 0 : _a3.length) > 0;\n  });\n  const opacity = hasSelections ? isSelected || active || isActive ? (_a2 = theme.cluster) == null ? void 0 : _a2.selectedOpacity : (_b2 = theme.cluster) == null ? void 0 : _b2.inactiveOpacity : (_c = theme.cluster) == null ? void 0 : _c.opacity;\n  const labelPosition = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n    var _a3, _b3;\n    const defaultPosition = [0, -offset, 2];\n    const themeOffset = (_b3 = (_a3 = theme.cluster) == null ? void 0 : _a3.label) == null ? void 0 : _b3.offset;\n    if (themeOffset) {\n      return [\n        defaultPosition[0] - themeOffset[0],\n        defaultPosition[1] - themeOffset[1],\n        defaultPosition[2] - themeOffset[2]\n      ];\n    }\n    return defaultPosition;\n  }, [offset, (_e = (_d = theme.cluster) == null ? void 0 : _d.label) == null ? void 0 : _e.offset]);\n  const { circlePosition } = (0,_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.useSpring)({\n    from: {\n      circlePosition: [center.x, center.y, -1]\n    },\n    to: {\n      circlePosition: position ? [position.x, position.y, -1] : [0, 0, -1]\n    },\n    config: {\n      ...animationConfig,\n      duration: animated && !isDragging ? void 0 : 0\n    }\n  });\n  const normalizedStroke = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => {\n      var _a3;\n      return new three__WEBPACK_IMPORTED_MODULE_30__.Color((_a3 = theme.cluster) == null ? void 0 : _a3.stroke);\n    },\n    [(_f = theme.cluster) == null ? void 0 : _f.stroke]\n  );\n  const normalizedFill = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => {\n      var _a3;\n      return new three__WEBPACK_IMPORTED_MODULE_30__.Color((_a3 = theme.cluster) == null ? void 0 : _a3.fill);\n    },\n    [(_g = theme.cluster) == null ? void 0 : _g.fill]\n  );\n  const addDraggingId = useStore((state) => state.addDraggingId);\n  const removeDraggingId = useStore((state) => state.removeDraggingId);\n  const setClusterPosition = useStore((state) => state.setClusterPosition);\n  const bind = useDrag({\n    draggable: draggable && !hoveredNodeId,\n    position: {\n      x: position.x,\n      y: position.y,\n      z: -1\n    },\n    set: (pos) => setClusterPosition(label, pos),\n    onDragStart: () => {\n      addDraggingId(label);\n      setActive(true);\n    },\n    onDragEnd: () => {\n      removeDraggingId(label);\n      setActive(false);\n      const updatedClusterNodes = nodesState.filter((n) => n.cluster === label);\n      onDragged == null ? void 0 : onDragged({ nodes: updatedClusterNodes, label });\n    }\n  });\n  (0,glodrei__WEBPACK_IMPORTED_MODULE_38__.useCursor)(active && !isDragging && onClick !== void 0, \"pointer\");\n  (0,glodrei__WEBPACK_IMPORTED_MODULE_38__.useCursor)(\n    active && draggable && !isDraggingCurrent && onClick === void 0,\n    \"grab\"\n  );\n  (0,glodrei__WEBPACK_IMPORTED_MODULE_38__.useCursor)(isDraggingCurrent, \"grabbing\");\n  const { pointerOver, pointerOut } = useHoverIntent({\n    disabled: disabled2,\n    onPointerOver: (event) => {\n      setActive(true);\n      cameraControls.freeze();\n      onPointerOver == null ? void 0 : onPointerOver(\n        {\n          nodes,\n          label\n        },\n        event\n      );\n    },\n    onPointerOut: (event) => {\n      setActive(false);\n      cameraControls.unFreeze();\n      onPointerOut == null ? void 0 : onPointerOut(\n        {\n          nodes,\n          label\n        },\n        event\n      );\n    }\n  });\n  const cluster = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => {\n      var _a3, _b3, _c2;\n      return theme.cluster && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        _react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.group,\n        {\n          userData: { id: label, type: \"cluster\" },\n          position: circlePosition,\n          onPointerOver: pointerOver,\n          onPointerOut: pointerOut,\n          onClick: (event) => {\n            if (!disabled2 && !isDraggingCurrent) {\n              onClick == null ? void 0 : onClick({ nodes, label }, event);\n            }\n          },\n          ...bind(),\n          children: onRender ? onRender({\n            label: {\n              position: labelPosition,\n              text: label,\n              opacity,\n              fontUrl: labelFontUrl\n            },\n            opacity,\n            outerRadius: offset,\n            innerRadius: rad,\n            padding,\n            theme\n          }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n              Ring,\n              {\n                outerRadius: offset,\n                innerRadius: rad,\n                padding,\n                normalizedFill,\n                normalizedStroke,\n                opacity,\n                animated,\n                theme\n              }\n            ),\n            ((_a3 = theme.cluster) == null ? void 0 : _a3.label) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_react_spring_three__WEBPACK_IMPORTED_MODULE_11__.a.group, { position: labelPosition, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n              Label,\n              {\n                text: label,\n                opacity,\n                fontUrl: labelFontUrl,\n                stroke: theme.cluster.label.stroke,\n                active: false,\n                color: (_b3 = theme.cluster) == null ? void 0 : _b3.label.color,\n                fontSize: ((_c2 = theme.cluster) == null ? void 0 : _c2.label.fontSize) ?? 12\n              }\n            ) })\n          ] })\n        }\n      );\n    },\n    [\n      theme,\n      circlePosition,\n      pointerOver,\n      pointerOut,\n      offset,\n      normalizedFill,\n      rad,\n      padding,\n      normalizedStroke,\n      labelPosition,\n      label,\n      opacity,\n      labelFontUrl,\n      disabled2,\n      onClick,\n      nodes,\n      bind,\n      isDraggingCurrent,\n      onRender,\n      animated\n    ]\n  );\n  return cluster;\n};\nconst GraphScene = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(\n  ({\n    onNodeClick,\n    onNodeDoubleClick,\n    onNodeContextMenu,\n    onEdgeContextMenu,\n    onEdgeClick,\n    onEdgePointerOver,\n    onEdgePointerOut,\n    onNodePointerOver,\n    onNodePointerOut,\n    onClusterClick,\n    onNodeDragged,\n    onClusterDragged,\n    onClusterPointerOver,\n    onClusterPointerOut,\n    contextMenu,\n    animated,\n    disabled: disabled2,\n    draggable,\n    constrainDragging = false,\n    edgeLabelPosition,\n    edgeArrowPosition,\n    edgeInterpolation = \"linear\",\n    labelFontUrl,\n    renderNode,\n    onRenderCluster,\n    ...rest\n  }, ref) => {\n    const { layoutType, clusterAttribute } = rest;\n    const gl = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.gl);\n    const scene = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.scene);\n    const camera = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.camera);\n    const { updateLayout } = useGraph({ ...rest, constrainDragging });\n    if (clusterAttribute && !(layoutType === \"forceDirected2d\" || layoutType === \"forceDirected3d\")) {\n      throw new Error(\n        \"Clustering is only supported for the force directed layouts.\"\n      );\n    }\n    const graph = useStore((state) => state.graph);\n    const nodes = useStore((state) => state.nodes);\n    const edges = useStore((state) => state.edges);\n    const clusters = useStore((state) => [...state.clusters.values()]);\n    const { centerNodesById, fitNodesInViewById, isCentered } = useCenterGraph({\n      animated,\n      disabled: disabled2,\n      layoutType\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(\n      ref,\n      () => ({\n        centerGraph: centerNodesById,\n        fitNodesInView: fitNodesInViewById,\n        graph,\n        renderScene: () => gl.render(scene, camera)\n      }),\n      [centerNodesById, fitNodesInViewById, graph, gl, scene, camera]\n    );\n    const onNodeDraggedHandler = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n      (node) => {\n        onNodeDragged == null ? void 0 : onNodeDragged(node);\n        if (clusterAttribute) {\n          updateLayout();\n        }\n      },\n      [clusterAttribute, onNodeDragged, updateLayout]\n    );\n    const nodeComponents = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n      () => nodes.map((n) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        Node,\n        {\n          id: n == null ? void 0 : n.id,\n          labelFontUrl,\n          draggable,\n          constrainDragging,\n          disabled: disabled2,\n          animated,\n          contextMenu,\n          renderNode,\n          onClick: onNodeClick,\n          onDoubleClick: onNodeDoubleClick,\n          onContextMenu: onNodeContextMenu,\n          onPointerOver: onNodePointerOver,\n          onPointerOut: onNodePointerOut,\n          onDragged: onNodeDraggedHandler\n        },\n        n == null ? void 0 : n.id\n      )),\n      [\n        constrainDragging,\n        animated,\n        contextMenu,\n        disabled2,\n        draggable,\n        labelFontUrl,\n        nodes,\n        onNodeClick,\n        onNodeContextMenu,\n        onNodeDoubleClick,\n        onNodeDraggedHandler,\n        onNodePointerOut,\n        onNodePointerOver,\n        renderNode\n      ]\n    );\n    const edgeComponents = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n      () => animated ? edges.map((e) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        Edge$1,\n        {\n          id: e.id,\n          disabled: disabled2,\n          animated,\n          labelFontUrl,\n          labelPlacement: edgeLabelPosition,\n          arrowPlacement: edgeArrowPosition,\n          interpolation: edgeInterpolation,\n          contextMenu,\n          onClick: onEdgeClick,\n          onContextMenu: onEdgeContextMenu,\n          onPointerOver: onEdgePointerOver,\n          onPointerOut: onEdgePointerOut\n        },\n        e.id\n      )) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        Edges,\n        {\n          edges,\n          disabled: disabled2,\n          animated,\n          labelFontUrl,\n          labelPlacement: edgeLabelPosition,\n          arrowPlacement: edgeArrowPosition,\n          interpolation: edgeInterpolation,\n          contextMenu,\n          onClick: onEdgeClick,\n          onContextMenu: onEdgeContextMenu,\n          onPointerOver: onEdgePointerOver,\n          onPointerOut: onEdgePointerOut\n        }\n      ),\n      [\n        animated,\n        contextMenu,\n        disabled2,\n        edgeArrowPosition,\n        edgeInterpolation,\n        edgeLabelPosition,\n        edges,\n        labelFontUrl,\n        onEdgeClick,\n        onEdgeContextMenu,\n        onEdgePointerOut,\n        onEdgePointerOver\n      ]\n    );\n    const clusterComponents = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n      () => clusters.map((c) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        Cluster,\n        {\n          animated,\n          disabled: disabled2,\n          draggable,\n          labelFontUrl,\n          onClick: onClusterClick,\n          onPointerOver: onClusterPointerOver,\n          onPointerOut: onClusterPointerOut,\n          onDragged: onClusterDragged,\n          onRender: onRenderCluster,\n          ...c\n        },\n        c.label\n      )),\n      [\n        animated,\n        clusters,\n        disabled2,\n        draggable,\n        labelFontUrl,\n        onClusterClick,\n        onClusterPointerOut,\n        onClusterPointerOver,\n        onClusterDragged,\n        onRenderCluster\n      ]\n    );\n    return isCentered && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: [\n      edgeComponents,\n      nodeComponents,\n      clusterComponents\n    ] });\n  }\n);\nconst darkTheme = {\n  canvas: {\n    background: \"#1E2026\"\n  },\n  node: {\n    fill: \"#7A8C9E\",\n    activeFill: \"#1DE9AC\",\n    opacity: 1,\n    selectedOpacity: 1,\n    inactiveOpacity: 0.2,\n    label: {\n      stroke: \"#1E2026\",\n      color: \"#ACBAC7\",\n      activeColor: \"#1DE9AC\"\n    },\n    subLabel: {\n      stroke: \"#1E2026\",\n      color: \"#ACBAC7\",\n      activeColor: \"#1DE9AC\"\n    }\n  },\n  lasso: {\n    border: \"1px solid #55aaff\",\n    background: \"rgba(75, 160, 255, 0.1)\"\n  },\n  ring: {\n    fill: \"#54616D\",\n    activeFill: \"#1DE9AC\"\n  },\n  edge: {\n    fill: \"#474B56\",\n    activeFill: \"#1DE9AC\",\n    opacity: 1,\n    selectedOpacity: 1,\n    inactiveOpacity: 0.1,\n    label: {\n      stroke: \"#1E2026\",\n      color: \"#ACBAC7\",\n      activeColor: \"#1DE9AC\",\n      fontSize: 6\n    }\n  },\n  arrow: {\n    fill: \"#474B56\",\n    activeFill: \"#1DE9AC\"\n  },\n  cluster: {\n    stroke: \"#474B56\",\n    opacity: 1,\n    selectedOpacity: 1,\n    inactiveOpacity: 0.1,\n    label: {\n      stroke: \"#1E2026\",\n      color: \"#ACBAC7\"\n    }\n  }\n};\nconst lightTheme = {\n  canvas: {\n    background: \"#fff\"\n  },\n  node: {\n    fill: \"#7CA0AB\",\n    activeFill: \"#1DE9AC\",\n    opacity: 1,\n    selectedOpacity: 1,\n    inactiveOpacity: 0.2,\n    label: {\n      color: \"#2A6475\",\n      stroke: \"#fff\",\n      activeColor: \"#1DE9AC\"\n    },\n    subLabel: {\n      color: \"#ddd\",\n      stroke: \"transparent\",\n      activeColor: \"#1DE9AC\"\n    }\n  },\n  lasso: {\n    border: \"1px solid #55aaff\",\n    background: \"rgba(75, 160, 255, 0.1)\"\n  },\n  ring: {\n    fill: \"#D8E6EA\",\n    activeFill: \"#1DE9AC\"\n  },\n  edge: {\n    fill: \"#D8E6EA\",\n    activeFill: \"#1DE9AC\",\n    opacity: 1,\n    selectedOpacity: 1,\n    inactiveOpacity: 0.1,\n    label: {\n      stroke: \"#fff\",\n      color: \"#2A6475\",\n      activeColor: \"#1DE9AC\",\n      fontSize: 6\n    }\n  },\n  arrow: {\n    fill: \"#D8E6EA\",\n    activeFill: \"#1DE9AC\"\n  },\n  cluster: {\n    stroke: \"#D8E6EA\",\n    opacity: 1,\n    selectedOpacity: 1,\n    inactiveOpacity: 0.1,\n    label: {\n      stroke: \"#fff\",\n      color: \"#2A6475\"\n    }\n  }\n};\nfunction getAdjacents(graph, nodeIds, type) {\n  nodeIds = Array.isArray(nodeIds) ? nodeIds : [nodeIds];\n  const nodes = [];\n  const edges = [];\n  for (const nodeId of nodeIds) {\n    const graphLinks = [\n      ...graph.inEdgeEntries(nodeId) ?? [],\n      ...graph.outEdgeEntries(nodeId) ?? []\n    ];\n    if (!graphLinks) {\n      continue;\n    }\n    for (const link of graphLinks) {\n      const linkId = link.attributes.id;\n      if (type === \"in\") {\n        if (link.target === nodeId && !edges.includes(linkId)) {\n          edges.push(linkId);\n        }\n      } else if (type === \"out\") {\n        if (link.source === nodeId && !edges.includes(linkId)) {\n          edges.push(linkId);\n        }\n      } else {\n        if (!edges.includes(linkId)) {\n          edges.push(linkId);\n        }\n      }\n      if (type === \"out\" || type === \"all\") {\n        const toId = link.target;\n        if (!nodes.includes(toId)) {\n          nodes.push(toId);\n        }\n      }\n      if (type === \"in\" || type === \"all\") {\n        if (!nodes.includes(link.source)) {\n          nodes.push(link.source);\n        }\n      }\n    }\n  }\n  return {\n    nodes,\n    edges\n  };\n}\nfunction prepareRay(event, vec, size) {\n  const { offsetX, offsetY } = event;\n  const { width, height } = size;\n  vec.set(offsetX / width * 2 - 1, -(offsetY / height) * 2 + 1);\n}\nfunction createElement(theme) {\n  const element = document.createElement(\"div\");\n  element.style.pointerEvents = \"none\";\n  element.style.border = theme.lasso.border;\n  element.style.backgroundColor = theme.lasso.background;\n  element.style.position = \"fixed\";\n  return element;\n}\nconst Lasso = ({\n  children,\n  type = \"none\",\n  onLasso,\n  onLassoEnd,\n  disabled: disabled2\n}) => {\n  var _a2;\n  const theme = useStore((state) => state.theme);\n  const camera = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.camera);\n  const gl = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.gl);\n  const setEvents = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.setEvents);\n  const size = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.size);\n  const get = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.get);\n  const scene = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_31__.z)((state) => state.scene);\n  const cameraControls = useCameraControls();\n  const actives = useStore((state) => state.actives);\n  const setActives = useStore((state) => state.setActives);\n  const edges = useStore((state) => state.edges);\n  const edgeMeshes = useStore((state) => state.edgeMeshes);\n  const mountedRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n  const selectionBoxRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  const edgeMeshSelectionBoxRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  const elementRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(createElement(theme));\n  const vectorsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  const isDownRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(false);\n  const oldRaycasterEnabledRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(get().events.enabled);\n  const oldControlsEnabledRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(\n    (_a2 = cameraControls.controls) == null ? void 0 : _a2.enabled\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (mountedRef.current) {\n      onLasso == null ? void 0 : onLasso(actives);\n    }\n    mountedRef.current = true;\n  }, [actives, onLasso]);\n  const onPointerMove = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      if (isDownRef.current) {\n        const [startPoint, pointTopLeft, pointBottomRight] = vectorsRef.current;\n        pointBottomRight.x = Math.max(startPoint.x, event.clientX);\n        pointBottomRight.y = Math.max(startPoint.y, event.clientY);\n        pointTopLeft.x = Math.min(startPoint.x, event.clientX);\n        pointTopLeft.y = Math.min(startPoint.y, event.clientY);\n        elementRef.current.style.left = `${pointTopLeft.x}px`;\n        elementRef.current.style.top = `${pointTopLeft.y}px`;\n        elementRef.current.style.width = `${pointBottomRight.x - pointTopLeft.x}px`;\n        elementRef.current.style.height = `${pointBottomRight.y - pointTopLeft.y}px`;\n        prepareRay(event, selectionBoxRef.current.endPoint, size);\n        prepareRay(event, edgeMeshSelectionBoxRef.current.endPoint, size);\n        const allSelected = [];\n        const edgesSelected = edgeMeshSelectionBoxRef.current.select().sort((o) => o.uuid).map(\n          (edge) => edges[edgeMeshes.indexOf(edge)].id\n        );\n        allSelected.push(...edgesSelected);\n        const selected = selectionBoxRef.current.select().sort((o) => o.uuid).filter(\n          (o) => {\n            var _a3, _b2;\n            return o.isMesh && ((_a3 = o.userData) == null ? void 0 : _a3.id) && (((_b2 = o.userData) == null ? void 0 : _b2.type) === type || type === \"all\");\n          }\n        ).map((o) => o.userData.id);\n        allSelected.push(...selected);\n        requestAnimationFrame(() => {\n          setActives(allSelected);\n        });\n        document.addEventListener(\"pointermove\", onPointerMove, {\n          passive: true,\n          capture: true,\n          once: true\n        });\n      }\n    },\n    [edges, edgeMeshes, setActives, size, type]\n  );\n  const onPointerUp = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    var _a3;\n    if (isDownRef.current) {\n      setEvents({ enabled: oldRaycasterEnabledRef.current });\n      isDownRef.current = false;\n      (_a3 = elementRef.current.parentElement) == null ? void 0 : _a3.removeChild(elementRef.current);\n      cameraControls.controls.enabled = oldControlsEnabledRef.current;\n      onLassoEnd == null ? void 0 : onLassoEnd(actives);\n      document.removeEventListener(\"pointermove\", onPointerMove);\n      document.removeEventListener(\"pointerup\", onPointerUp);\n    }\n  }, [setEvents, cameraControls.controls, onLassoEnd, actives, onPointerMove]);\n  const onPointerDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      var _a3, _b2;\n      if (event.shiftKey) {\n        oldRaycasterEnabledRef.current = get().events.enabled;\n        oldControlsEnabledRef.current = (_a3 = cameraControls.controls) == null ? void 0 : _a3.enabled;\n        selectionBoxRef.current = new three_stdlib__WEBPACK_IMPORTED_MODULE_41__.SelectionBox(camera, scene);\n        const edgeScene = new three__WEBPACK_IMPORTED_MODULE_30__.Scene();\n        if (edgeMeshes.length) {\n          edgeScene.add(...edgeMeshes);\n        }\n        edgeMeshSelectionBoxRef.current = new three_stdlib__WEBPACK_IMPORTED_MODULE_41__.SelectionBox(camera, edgeScene);\n        vectorsRef.current = [\n          // start point\n          new three__WEBPACK_IMPORTED_MODULE_30__.Vector2(),\n          // point top left\n          new three__WEBPACK_IMPORTED_MODULE_30__.Vector2(),\n          // point bottom right\n          new three__WEBPACK_IMPORTED_MODULE_30__.Vector2()\n        ];\n        const [startPoint] = vectorsRef.current;\n        cameraControls.controls.enabled = false;\n        setEvents({ enabled: false });\n        isDownRef.current = true;\n        (_b2 = gl.domElement.parentElement) == null ? void 0 : _b2.appendChild(elementRef.current);\n        elementRef.current.style.left = `${event.clientX}px`;\n        elementRef.current.style.top = `${event.clientY}px`;\n        elementRef.current.style.width = \"0px\";\n        elementRef.current.style.height = \"0px\";\n        startPoint.x = event.clientX;\n        startPoint.y = event.clientY;\n        prepareRay(event, selectionBoxRef.current.startPoint, size);\n        prepareRay(event, edgeMeshSelectionBoxRef.current.startPoint, size);\n        document.addEventListener(\"pointermove\", onPointerMove, {\n          passive: true,\n          capture: true,\n          once: true\n        });\n        document.addEventListener(\"pointerup\", onPointerUp, { passive: true });\n      }\n    },\n    [\n      camera,\n      cameraControls.controls,\n      edgeMeshes,\n      get,\n      gl.domElement.parentElement,\n      onPointerMove,\n      onPointerUp,\n      scene,\n      setEvents,\n      size\n    ]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (disabled2 || type === \"none\") {\n      return;\n    }\n    if (typeof window !== \"undefined\") {\n      document.addEventListener(\"pointerdown\", onPointerDown, {\n        passive: true\n      });\n      document.addEventListener(\"pointermove\", onPointerMove, {\n        passive: true\n      });\n      document.addEventListener(\"pointerup\", onPointerUp, { passive: true });\n    }\n    return () => {\n      if (typeof window !== \"undefined\") {\n        document.removeEventListener(\"pointerdown\", onPointerDown);\n        document.removeEventListener(\"pointermove\", onPointerMove);\n        document.removeEventListener(\"pointerup\", onPointerUp);\n      }\n    };\n  }, [type, disabled2, onPointerDown, onPointerMove, onPointerUp]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"group\", { children });\n};\nconst useSelection = ({\n  selections = [],\n  nodes = [],\n  actives = [],\n  focusOnSelect = true,\n  type = \"single\",\n  pathHoverType = \"out\",\n  pathSelectionType = \"direct\",\n  ref,\n  hotkeys = [\"selectAll\", \"deselect\", \"delete\"],\n  disabled: disabled2,\n  onSelection\n}) => {\n  const [internalHovers, setInternalHovers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n  const [internalActives, setInternalActives] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(actives);\n  const [internalSelections, setInternalSelections] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(selections);\n  const [metaKeyDown, setMetaKeyDown] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n  const isMulti = type === \"multi\" || type === \"multiModifier\";\n  const addSelection = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (items) => {\n      if (!disabled2 && items) {\n        items = Array.isArray(items) ? items : [items];\n        const filtered = items.filter(\n          (item) => !internalSelections.includes(item)\n        );\n        if (filtered.length) {\n          const next = [...internalSelections, ...filtered];\n          onSelection == null ? void 0 : onSelection(next);\n          setInternalSelections(next);\n        }\n      }\n    },\n    [disabled2, internalSelections, onSelection]\n  );\n  const removeSelection = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (items) => {\n      if (!disabled2 && items) {\n        items = Array.isArray(items) ? items : [items];\n        const next = internalSelections.filter((i) => !items.includes(i));\n        onSelection == null ? void 0 : onSelection(next);\n        setInternalSelections(next);\n      }\n    },\n    [disabled2, internalSelections, onSelection]\n  );\n  const clearSelections = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (next = []) => {\n      if (!disabled2) {\n        next = Array.isArray(next) ? next : [next];\n        setInternalActives([]);\n        setInternalSelections(next);\n        onSelection == null ? void 0 : onSelection(next);\n      }\n    },\n    [disabled2, onSelection]\n  );\n  const toggleSelection = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (item) => {\n      const has = internalSelections.includes(item);\n      if (has) {\n        removeSelection(item);\n      } else {\n        if (!isMulti) {\n          clearSelections(item);\n        } else {\n          addSelection(item);\n        }\n      }\n    },\n    [\n      addSelection,\n      clearSelections,\n      internalSelections,\n      isMulti,\n      removeSelection\n    ]\n  );\n  const onNodeClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (data) => {\n      if (isMulti) {\n        if (type === \"multiModifier\") {\n          if (metaKeyDown) {\n            addSelection(data.id);\n          } else {\n            clearSelections(data.id);\n          }\n        } else {\n          addSelection(data.id);\n        }\n      } else {\n        clearSelections(data.id);\n      }\n      if (focusOnSelect === true || focusOnSelect === \"singleOnly\" && !metaKeyDown) {\n        if (!ref.current) {\n          throw new Error(\"No ref found for the graph canvas.\");\n        }\n        const graph = ref.current.getGraph();\n        const { nodes: adjacents } = getAdjacents(\n          graph,\n          [data.id],\n          pathSelectionType\n        );\n        ref.current.fitNodesInView([data.id, ...adjacents], {\n          fitOnlyIfNodesNotInView: true\n        });\n      }\n    },\n    [\n      addSelection,\n      clearSelections,\n      focusOnSelect,\n      isMulti,\n      metaKeyDown,\n      pathSelectionType,\n      ref,\n      type\n    ]\n  );\n  const selectNodePaths = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (source, target) => {\n      const graph = ref.current.getGraph();\n      if (!graph) {\n        throw new Error(\"Graph is not initialized\");\n      }\n      const path = findPath(graph, source, target);\n      clearSelections([source, target]);\n      const result = [];\n      for (let i = 0; i < path.length - 1; i++) {\n        const from = path[i];\n        const to = path[i + 1];\n        const edge = graph.getEdgeAttributes(from, to);\n        if (edge) {\n          result.push(edge.id);\n        }\n      }\n      setInternalActives([...path.map((p) => p), ...result]);\n    },\n    [clearSelections, ref]\n  );\n  const onKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((event) => {\n    const element = event.target;\n    const isSafe = element.tagName !== \"INPUT\" && element.tagName !== \"SELECT\" && element.tagName !== \"TEXTAREA\" && !element.isContentEditable;\n    const isMeta = event.metaKey || event.ctrlKey;\n    if (isSafe && isMeta) {\n      event.preventDefault();\n      setMetaKeyDown(true);\n    }\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"keydown\", onKeyDown);\n    }\n    return () => {\n      if (typeof window !== \"undefined\") {\n        window.removeEventListener(\"keydown\", onKeyDown);\n      }\n    };\n  }, [onKeyDown]);\n  const onCanvasClick = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      if (event.button !== 2 && (internalSelections.length || internalActives.length)) {\n        clearSelections();\n        setMetaKeyDown(false);\n        if (focusOnSelect && internalSelections.length === 1) {\n          if (!ref.current) {\n            throw new Error(\"No ref found for the graph canvas.\");\n          }\n          ref.current.fitNodesInView([], { fitOnlyIfNodesNotInView: true });\n        }\n      }\n    },\n    [\n      clearSelections,\n      focusOnSelect,\n      internalActives.length,\n      internalSelections.length,\n      ref\n    ]\n  );\n  const onLasso = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((selections2) => {\n    setInternalActives(selections2);\n  }, []);\n  const onLassoEnd = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (selections2) => {\n      clearSelections(selections2);\n    },\n    [clearSelections]\n  );\n  const onNodePointerOver = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (data) => {\n      if (pathHoverType) {\n        const graph = ref.current.getGraph();\n        if (!graph) {\n          throw new Error(\"No ref found for the graph canvas.\");\n        }\n        const { nodes: nodes2, edges } = getAdjacents(graph, [data.id], pathHoverType);\n        setInternalHovers([...nodes2, ...edges]);\n      }\n    },\n    [pathHoverType, ref]\n  );\n  const onNodePointerOut = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n    if (pathHoverType) {\n      setInternalHovers([]);\n    }\n  }, [pathHoverType]);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    var _a2;\n    if (pathSelectionType !== \"direct\" && internalSelections.length > 0) {\n      const graph = (_a2 = ref.current) == null ? void 0 : _a2.getGraph();\n      if (graph) {\n        const { nodes: nodes2, edges } = getAdjacents(\n          graph,\n          internalSelections,\n          pathSelectionType\n        );\n        setInternalActives([...nodes2, ...edges]);\n      }\n    }\n  }, [internalSelections, pathSelectionType, ref]);\n  (0,reakeys__WEBPACK_IMPORTED_MODULE_13__.useHotkeys)([\n    {\n      name: \"Select All\",\n      keys: \"mod+a\",\n      disabled: !hotkeys.includes(\"selectAll\"),\n      category: \"Graph\",\n      description: \"Select all nodes and edges\",\n      callback: (event) => {\n        event.preventDefault();\n        if (!disabled2 && type !== \"single\") {\n          const next = nodes.map((n) => n.id);\n          onSelection == null ? void 0 : onSelection(next);\n          setInternalSelections(next);\n        }\n      }\n    },\n    {\n      name: \"Deselect Selections\",\n      category: \"Graph\",\n      disabled: !hotkeys.includes(\"deselect\"),\n      description: \"Deselect selected nodes and edges\",\n      keys: \"escape\",\n      callback: (event) => {\n        if (!disabled2) {\n          event.preventDefault();\n          onSelection == null ? void 0 : onSelection([]);\n          setInternalSelections([]);\n        }\n      }\n    }\n  ]);\n  const joinedActives = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => [...internalActives, ...internalHovers],\n    [internalActives, internalHovers]\n  );\n  return {\n    actives: joinedActives,\n    onNodeClick,\n    onNodePointerOver,\n    onNodePointerOut,\n    onLasso,\n    onLassoEnd,\n    selectNodePaths,\n    onCanvasClick,\n    selections: internalSelections,\n    clearSelections,\n    addSelection,\n    removeSelection,\n    toggleSelection,\n    setSelections: setInternalSelections\n  };\n};\nconst canvas = \"_canvas_670zp_1\";\nconst css$2 = {\n  canvas\n};\nconst GL_DEFAULTS = {\n  alpha: true,\n  antialias: true\n};\nconst CAMERA_DEFAULTS = {\n  position: [0, 0, 1e3],\n  near: 5,\n  far: 5e4,\n  fov: 10\n};\nconst GraphCanvas = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(\n  ({\n    cameraMode = \"pan\",\n    layoutType = \"forceDirected2d\",\n    sizingType = \"default\",\n    labelType = \"auto\",\n    theme = lightTheme,\n    animated = true,\n    defaultNodeSize = 7,\n    minNodeSize = 5,\n    maxNodeSize = 15,\n    lassoType = \"none\",\n    glOptions = {},\n    edges,\n    children,\n    nodes,\n    minDistance,\n    maxDistance,\n    onCanvasClick,\n    disabled: disabled2,\n    onLasso,\n    onLassoEnd,\n    ...rest\n  }, ref) => {\n    var _a2, _b2;\n    const rendererRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const controlsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref, () => ({\n      centerGraph: (nodeIds, opts) => {\n        var _a3;\n        return (_a3 = rendererRef.current) == null ? void 0 : _a3.centerGraph(nodeIds, opts);\n      },\n      fitNodesInView: (nodeIds, opts) => {\n        var _a3;\n        return (_a3 = rendererRef.current) == null ? void 0 : _a3.fitNodesInView(nodeIds, opts);\n      },\n      zoomIn: () => {\n        var _a3;\n        return (_a3 = controlsRef.current) == null ? void 0 : _a3.zoomIn();\n      },\n      zoomOut: () => {\n        var _a3;\n        return (_a3 = controlsRef.current) == null ? void 0 : _a3.zoomOut();\n      },\n      dollyIn: (distance) => {\n        var _a3;\n        return (_a3 = controlsRef.current) == null ? void 0 : _a3.dollyIn(distance);\n      },\n      dollyOut: (distance) => {\n        var _a3;\n        return (_a3 = controlsRef.current) == null ? void 0 : _a3.dollyOut(distance);\n      },\n      panLeft: () => {\n        var _a3;\n        return (_a3 = controlsRef.current) == null ? void 0 : _a3.panLeft();\n      },\n      panRight: () => {\n        var _a3;\n        return (_a3 = controlsRef.current) == null ? void 0 : _a3.panRight();\n      },\n      panDown: () => {\n        var _a3;\n        return (_a3 = controlsRef.current) == null ? void 0 : _a3.panDown();\n      },\n      panUp: () => {\n        var _a3;\n        return (_a3 = controlsRef.current) == null ? void 0 : _a3.panUp();\n      },\n      resetControls: (animated2) => {\n        var _a3;\n        return (_a3 = controlsRef.current) == null ? void 0 : _a3.resetControls(animated2);\n      },\n      getControls: () => {\n        var _a3;\n        return (_a3 = controlsRef.current) == null ? void 0 : _a3.controls;\n      },\n      getGraph: () => {\n        var _a3;\n        return (_a3 = rendererRef.current) == null ? void 0 : _a3.graph;\n      },\n      exportCanvas: () => {\n        rendererRef.current.renderScene();\n        return canvasRef.current.toDataURL();\n      },\n      freeze: () => {\n        var _a3;\n        return (_a3 = controlsRef.current) == null ? void 0 : _a3.freeze();\n      },\n      unFreeze: () => {\n        var _a3;\n        return (_a3 = controlsRef.current) == null ? void 0 : _a3.unFreeze();\n      }\n    }));\n    const { selections, actives, collapsedNodeIds } = rest;\n    const finalAnimated = edges.length + nodes.length > 400 ? false : animated;\n    const gl = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => ({ ...glOptions, ...GL_DEFAULTS }), [glOptions]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { className: css$2.canvas, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      _react_three_fiber__WEBPACK_IMPORTED_MODULE_42__.Canvas,\n      {\n        legacy: true,\n        linear: true,\n        ref: canvasRef,\n        flat: true,\n        gl,\n        camera: CAMERA_DEFAULTS,\n        onPointerMissed: onCanvasClick,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n          Provider,\n          {\n            createStore: () => createStore({\n              selections,\n              actives,\n              theme,\n              collapsedNodeIds\n            }),\n            children: [\n              ((_a2 = theme.canvas) == null ? void 0 : _a2.background) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"color\", { attach: \"background\", args: [theme.canvas.background] }),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ambientLight\", { intensity: 1 }),\n              children,\n              ((_b2 = theme.canvas) == null ? void 0 : _b2.fog) && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"fog\", { attach: \"fog\", args: [theme.canvas.fog, 4e3, 9e3] }),\n              /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n                CameraControls,\n                {\n                  mode: cameraMode,\n                  ref: controlsRef,\n                  disabled: disabled2,\n                  minDistance,\n                  maxDistance,\n                  animated,\n                  children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n                    Lasso,\n                    {\n                      disabled: disabled2,\n                      type: lassoType,\n                      onLasso,\n                      onLassoEnd,\n                      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n                        GraphScene,\n                        {\n                          ref: rendererRef,\n                          disabled: disabled2,\n                          animated: finalAnimated,\n                          edges,\n                          nodes,\n                          layoutType,\n                          sizingType,\n                          labelType,\n                          defaultNodeSize,\n                          minNodeSize,\n                          maxNodeSize,\n                          ...rest\n                        }\n                      ) })\n                    }\n                  )\n                }\n              )\n            ]\n          }\n        )\n      }\n    ) });\n  }\n);\nconst container$1 = \"_container_155l7_1\";\nconst disabled = \"_disabled_155l7_7\";\nconst contentContainer = \"_contentContainer_155l7_10\";\nconst contentInner = \"_contentInner_155l7_35\";\nconst content = \"_content_155l7_10\";\nconst css$1 = {\n  container: container$1,\n  disabled,\n  contentContainer,\n  contentInner,\n  content\n};\nconst RadialSlice = ({\n  label,\n  centralAngle,\n  startAngle,\n  endAngle,\n  polar,\n  radius,\n  className,\n  icon,\n  innerRadius,\n  skew,\n  disabled: disabled2,\n  onClick\n}) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n  \"div\",\n  {\n    role: \"menuitem\",\n    className: classnames__WEBPACK_IMPORTED_MODULE_15__(css$1.container, className, {\n      [css$1.disabled]: disabled2\n    }),\n    style: {\n      width: centralAngle > 90 ? \"100%\" : \"50%\",\n      height: centralAngle > 90 ? \"100%\" : \"50%\",\n      bottom: centralAngle > 90 ? \"50%\" : \"initial\",\n      right: centralAngle > 90 ? \"50%\" : \"initial\",\n      transform: `rotate(${startAngle + endAngle}deg) skew(${skew}deg)`\n    },\n    onClick: (event) => {\n      if (!disabled2) {\n        onClick(event);\n      }\n    },\n    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      \"div\",\n      {\n        className: css$1.contentContainer,\n        style: {\n          transform: `skew(${-skew}deg) rotate(${(polar ? 90 : centralAngle) / 2 - 90}deg)`\n        },\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n          \"div\",\n          {\n            className: css$1.contentInner,\n            style: {\n              top: `calc((((${centralAngle > 90 ? \"50% + \" : \"\"}${radius}px) - ${innerRadius}px) / 2) - 4em)`\n            },\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\n              \"div\",\n              {\n                className: css$1.content,\n                style: {\n                  transform: `rotate(${-endAngle}deg)`\n                },\n                title: label,\n                children: [\n                  icon,\n                  label\n                ]\n              }\n            )\n          }\n        )\n      }\n    )\n  }\n);\nfunction calculateRadius(items, startOffsetAngle) {\n  const centralAngle = 360 / items.length || 360;\n  const polar = centralAngle % 180 === 0;\n  const deltaAngle = 90 - centralAngle;\n  const startAngle = polar ? 45 : startOffsetAngle + deltaAngle + centralAngle / 2;\n  return { centralAngle, polar, startAngle, deltaAngle };\n}\nconst container = \"_container_x9hyx_1\";\nconst css = {\n  container\n};\nconst RadialMenu = ({\n  items,\n  radius = 175,\n  className,\n  innerRadius = 25,\n  startOffsetAngle = 0,\n  onClose\n}) => {\n  const { centralAngle, polar, startAngle, deltaAngle } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(\n    () => calculateRadius(items, startOffsetAngle),\n    [items, startOffsetAngle]\n  );\n  const timeout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(() => {\n    const timer = timeout.current;\n    return () => clearTimeout(timer);\n  }, []);\n  if (items.length === 0) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n    \"div\",\n    {\n      role: \"menu\",\n      className: classnames__WEBPACK_IMPORTED_MODULE_15__(css.container, className),\n      onPointerEnter: () => clearTimeout(timeout.current),\n      onPointerLeave: (event) => {\n        clearTimeout(timeout.current);\n        timeout.current = setTimeout(() => onClose == null ? void 0 : onClose(event), 500);\n      },\n      children: items.map((slice, index) => /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n        RadialSlice,\n        {\n          ...slice,\n          radius,\n          innerRadius,\n          startAngle,\n          endAngle: centralAngle * index,\n          skew: polar ? 0 : deltaAngle,\n          polar,\n          centralAngle,\n          onClick: (event) => {\n            slice == null ? void 0 : slice.onClick(event);\n            onClose == null ? void 0 : onClose(event);\n          }\n        },\n        index\n      ))\n    }\n  );\n};\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/reagraph/dist/index.js\n");

/***/ })

};
;