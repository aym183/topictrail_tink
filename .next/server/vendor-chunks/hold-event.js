"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/hold-event";
exports.ids = ["vendor-chunks/hold-event"];
exports.modules = {

/***/ "(ssr)/./node_modules/hold-event/dist/hold-event.module.js":
/*!***********************************************************!*\
  !*** ./node_modules/hold-event/dist/hold-event.module.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ElementHold: () => (/* binding */ ElementHold),\n/* harmony export */   HOLD_EVENT_TYPE: () => (/* binding */ HOLD_EVENT_TYPE),\n/* harmony export */   KeyboardKeyHold: () => (/* binding */ KeyboardKeyHold)\n/* harmony export */ });\n/*!\n * hold-event\n * https://github.com/yomotsu/hold-event\n * (c) 2020 @yomotsu\n * Released under the MIT License.\n */\nvar HOLD_EVENT_TYPE;\r\n(function (HOLD_EVENT_TYPE) {\r\n    HOLD_EVENT_TYPE[\"HOLD_START\"] = \"holdStart\";\r\n    HOLD_EVENT_TYPE[\"HOLD_END\"] = \"holdEnd\";\r\n    HOLD_EVENT_TYPE[\"HOLDING\"] = \"holding\";\r\n})(HOLD_EVENT_TYPE || (HOLD_EVENT_TYPE = {}));\n\nclass EventDispatcher {\r\n    constructor() {\r\n        this._listeners = {};\r\n    }\r\n    addEventListener(type, listener) {\r\n        const listeners = this._listeners;\r\n        if (listeners[type] === undefined)\r\n            listeners[type] = [];\r\n        if (listeners[type].indexOf(listener) === -1)\r\n            listeners[type].push(listener);\r\n    }\r\n    removeEventListener(type, listener) {\r\n        const listeners = this._listeners;\r\n        const listenerArray = listeners[type];\r\n        if (listenerArray !== undefined) {\r\n            const index = listenerArray.indexOf(listener);\r\n            if (index !== -1)\r\n                listenerArray.splice(index, 1);\r\n        }\r\n    }\r\n    dispatchEvent(event) {\r\n        const listeners = this._listeners;\r\n        const listenerArray = listeners[event.type];\r\n        if (listenerArray !== undefined) {\r\n            event.target = this;\r\n            const array = listenerArray.slice(0);\r\n            for (let i = 0, l = array.length; i < l; i++) {\r\n                array[i].call(this, event);\r\n            }\r\n        }\r\n    }\r\n}\n\nclass Hold extends EventDispatcher {\r\n    constructor(holdIntervalDelay) {\r\n        super();\r\n        this._enabled = true;\r\n        this._holding = false;\r\n        this._intervalId = -1;\r\n        this._deltaTime = 0;\r\n        this._elapsedTime = 0;\r\n        this._lastTime = 0;\r\n        this._holdStart = (event) => {\r\n            if (!this._enabled)\r\n                return;\r\n            if (this._holding)\r\n                return;\r\n            this._deltaTime = 0;\r\n            this._elapsedTime = 0;\r\n            this._lastTime = performance.now();\r\n            this.dispatchEvent({\r\n                type: HOLD_EVENT_TYPE.HOLD_START,\r\n                deltaTime: this._deltaTime,\r\n                elapsedTime: this._elapsedTime,\r\n                originalEvent: event,\r\n            });\r\n            this._holding = true;\r\n            const cb = () => {\r\n                this._intervalId = !!this.holdIntervalDelay ?\r\n                    window.setTimeout(cb, this.holdIntervalDelay) :\r\n                    window.requestAnimationFrame(cb);\r\n                const now = performance.now();\r\n                this._deltaTime = now - this._lastTime;\r\n                this._elapsedTime += this._deltaTime;\r\n                this._lastTime = performance.now();\r\n                this.dispatchEvent({\r\n                    type: HOLD_EVENT_TYPE.HOLDING,\r\n                    deltaTime: this._deltaTime,\r\n                    elapsedTime: this._elapsedTime,\r\n                    originalEvent: event\r\n                });\r\n            };\r\n            this._intervalId = !!this.holdIntervalDelay ?\r\n                window.setTimeout(cb, this.holdIntervalDelay) :\r\n                window.requestAnimationFrame(cb);\r\n        };\r\n        this._holdEnd = (event) => {\r\n            if (!this._enabled)\r\n                return;\r\n            if (!this._holding)\r\n                return;\r\n            const now = performance.now();\r\n            this._deltaTime = now - this._lastTime;\r\n            this._elapsedTime += this._deltaTime;\r\n            this._lastTime = performance.now();\r\n            this.dispatchEvent({\r\n                type: HOLD_EVENT_TYPE.HOLD_END,\r\n                deltaTime: this._deltaTime,\r\n                elapsedTime: this._elapsedTime,\r\n                originalEvent: event,\r\n            });\r\n            window.clearTimeout(this._intervalId);\r\n            window.cancelAnimationFrame(this._intervalId);\r\n            this._holding = false;\r\n        };\r\n        this.holdIntervalDelay = holdIntervalDelay;\r\n    }\r\n    get enabled() {\r\n        return this._enabled;\r\n    }\r\n    set enabled(enabled) {\r\n        if (this._enabled === enabled)\r\n            return;\r\n        this._enabled = enabled;\r\n        if (!this._enabled)\r\n            this._holdEnd();\r\n    }\r\n}\n\nclass ElementHold extends Hold {\r\n    constructor(element, holdIntervalDelay) {\r\n        super(holdIntervalDelay);\r\n        this._holdStart = this._holdStart.bind(this);\r\n        this._holdEnd = this._holdEnd.bind(this);\r\n        const onPointerDown = this._holdStart;\r\n        const onPointerUp = this._holdEnd;\r\n        element.addEventListener('mousedown', onPointerDown);\r\n        document.addEventListener('mouseup', onPointerUp);\r\n        window.addEventListener('blur', this._holdEnd);\r\n    }\r\n}\n\nclass KeyboardKeyHold extends Hold {\r\n    constructor(keyCode, holdIntervalDelay) {\r\n        super(holdIntervalDelay);\r\n        this._holdStart = this._holdStart.bind(this);\r\n        this._holdEnd = this._holdEnd.bind(this);\r\n        const onKeydown = (event) => {\r\n            if (isInputEvent(event))\r\n                return;\r\n            if (event.keyCode !== keyCode)\r\n                return;\r\n            this._holdStart(event);\r\n        };\r\n        const onKeyup = (event) => {\r\n            if (event.keyCode !== keyCode)\r\n                return;\r\n            this._holdEnd(event);\r\n        };\r\n        document.addEventListener('keydown', onKeydown);\r\n        document.addEventListener('keyup', onKeyup);\r\n        window.addEventListener('blur', this._holdEnd);\r\n    }\r\n}\r\nfunction isInputEvent(event) {\r\n    const target = event.target;\r\n    return (target.tagName === 'INPUT' ||\r\n        target.tagName === 'SELECT' ||\r\n        target.tagName === 'TEXTAREA' ||\r\n        target.isContentEditable);\r\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/hold-event/dist/hold-event.module.js\n");

/***/ })

};
;