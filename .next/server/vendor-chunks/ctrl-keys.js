"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ctrl-keys";
exports.ids = ["vendor-chunks/ctrl-keys"];
exports.modules = {

/***/ "(ssr)/./node_modules/ctrl-keys/dist/index.mjs":
/*!***********************************************!*\
  !*** ./node_modules/ctrl-keys/dist/index.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ $3d193bcdb4e39103$export$2e2bcd8739ae039)\n/* harmony export */ });\nconst $945d8fe7644f77c5$export$c2f15f629432a51d = [\n    \"ctrl\",\n    \"alt\",\n    \"meta\",\n    \"shift\"\n];\nconst $945d8fe7644f77c5$export$a2af00130072d5c1 = \"__0_1_2_3_4_5_6_7_8_9_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_ _`_'_\\\"_~_!_@_#_$_%_^_&_*_(_)_._-_+_=_[_]_{_}_<_>_,_/_?_;_:_\\\\_|_capslock_numlock_enter_tab_arrowdown_arrowleft_arrowright_arrowup_end_home_pagedown_pageup_backspace_delete_insert_escape_f1_f2_f3_f4_f5_f6_f7_f8_f9_f10_f11_f12_f13_f14_f15_f16_f17_f18_f19_f20_f21_f22_f23\".split(\"_\");\n$945d8fe7644f77c5$export$a2af00130072d5c1[1] = \"_\";\nconst $945d8fe7644f77c5$export$e45cb6485273080e = {};\nfor (const [i, c] of $945d8fe7644f77c5$export$a2af00130072d5c1.entries())$945d8fe7644f77c5$export$e45cb6485273080e[c] = i;\nconst $945d8fe7644f77c5$export$9af93bb9e9126a2 = {\n    space: \" \",\n    plus: \"+\",\n    up: \"arrowup\",\n    down: \"arrowdown\",\n    left: \"arrowleft\",\n    right: \"arrowright\",\n    esc: \"escape\"\n};\nconst $945d8fe7644f77c5$export$ec514b5495dfb13a = 4;\nconst $945d8fe7644f77c5$export$2f4b53374d74dab0 = 9;\nconst $945d8fe7644f77c5$export$fa74f81f6fd55da8 = 8;\nconst $945d8fe7644f77c5$export$440ece60bb656d1c = 4;\nconst $945d8fe7644f77c5$export$e81f1a492ca706db = 2;\nconst $945d8fe7644f77c5$export$e16f40decae6aceb = 1;\nconst $945d8fe7644f77c5$export$8c6d6ddef5b40636 = $945d8fe7644f77c5$export$2f4b53374d74dab0 + $945d8fe7644f77c5$export$ec514b5495dfb13a;\nconst $945d8fe7644f77c5$export$c621bb932db11c84 = 2 ** $945d8fe7644f77c5$export$ec514b5495dfb13a;\nconst $945d8fe7644f77c5$export$df1afef858d2d2a1 = 2 ** $945d8fe7644f77c5$export$8c6d6ddef5b40636;\nconst $945d8fe7644f77c5$export$4e5c8f1854de11bd = 2 ** (2 * $945d8fe7644f77c5$export$8c6d6ddef5b40636);\nconst $945d8fe7644f77c5$export$5a85c95189ba5484 = 2 ** (3 * $945d8fe7644f77c5$export$8c6d6ddef5b40636);\n\n\nfunction $d1a4178f437f25ce$export$e0c709538cb8ae18(key) {\n    let parts;\n    if (key === \"+\") return [\n        \"+\"\n    ];\n    if (\"+\" == key.slice(-1)) {\n        parts = key.slice(0, -2).split(\"+\");\n        parts.push(\"+\");\n    } else parts = key.split(\"+\");\n    return parts.map((x)=>(0, $945d8fe7644f77c5$export$9af93bb9e9126a2)[x] || x);\n}\nfunction $d1a4178f437f25ce$export$a0511d6cbab6225d(key) {\n    const parts = new Set(key);\n    let code = (0, $945d8fe7644f77c5$export$e45cb6485273080e)[key[key.length - 1].toLowerCase()] || 0;\n    for (const modifier of (0, $945d8fe7644f77c5$export$c2f15f629432a51d))code = 2 * code + (parts.has(modifier) ? 1 : 0);\n    return code;\n}\nfunction $d1a4178f437f25ce$export$b983cdf2c2084305(encodedKey) {\n    const charCode = $d1a4178f437f25ce$export$d95305c1c4c40d1d(encodedKey);\n    const modifiersCode = $d1a4178f437f25ce$export$a10907c21fef597b(encodedKey);\n    const key = [];\n    if (modifiersCode & (0, $945d8fe7644f77c5$export$fa74f81f6fd55da8)) key.push(\"ctrl\");\n    if (modifiersCode & (0, $945d8fe7644f77c5$export$440ece60bb656d1c)) key.push(\"alt\");\n    if (modifiersCode & (0, $945d8fe7644f77c5$export$e81f1a492ca706db)) key.push(\"meta\");\n    if (modifiersCode & (0, $945d8fe7644f77c5$export$e16f40decae6aceb)) key.push(\"shift\");\n    const c = (0, $945d8fe7644f77c5$export$a2af00130072d5c1)[charCode];\n    if (c) key.push(c);\n    return key;\n}\nfunction $d1a4178f437f25ce$export$d95305c1c4c40d1d(encodedKey) {\n    return encodedKey >> (0, $945d8fe7644f77c5$export$ec514b5495dfb13a);\n}\nfunction $d1a4178f437f25ce$export$a10907c21fef597b(encodedKey) {\n    return encodedKey % (0, $945d8fe7644f77c5$export$c621bb932db11c84);\n}\nfunction $d1a4178f437f25ce$export$f7511445e7083e2c(previousKey, newKey) {\n    if (previousKey === undefined) return false;\n    if ($d1a4178f437f25ce$export$d95305c1c4c40d1d(previousKey) > 0) return false;\n    const previousModifiers = $d1a4178f437f25ce$export$a10907c21fef597b(previousKey);\n    const newModifiers = $d1a4178f437f25ce$export$a10907c21fef597b(newKey);\n    if (previousModifiers === newModifiers && $d1a4178f437f25ce$export$d95305c1c4c40d1d(newKey) === 0) return false;\n    return (previousModifiers & $d1a4178f437f25ce$export$a10907c21fef597b(newKey)) === previousModifiers;\n}\n\n\n\nfunction $e37d79d2c9101d6e$export$c30017717ce2168e(key, type = \"keydown\") {\n    const parts = (0, $d1a4178f437f25ce$export$e0c709538cb8ae18)(key);\n    let eventKey = parts.at(-1);\n    if ((0, $945d8fe7644f77c5$export$9af93bb9e9126a2)[eventKey] !== undefined) eventKey = (0, $945d8fe7644f77c5$export$9af93bb9e9126a2)[eventKey];\n    if (eventKey === \"ctrl\") eventKey = \"Control\";\n    if (eventKey === \"alt\") eventKey = \"Alt\";\n    if (eventKey === \"meta\") eventKey = \"Meta\";\n    if (eventKey === \"shift\") eventKey = \"Shift\";\n    return new KeyboardEvent(type, {\n        ctrlKey: parts.includes(\"ctrl\"),\n        altKey: parts.includes(\"alt\"),\n        metaKey: parts.includes(\"meta\"),\n        shiftKey: parts.includes(\"shift\"),\n        key: eventKey\n    });\n}\nfunction $e37d79d2c9101d6e$export$81dbaac8d5335cb6(event) {\n    let code = (0, $945d8fe7644f77c5$export$e45cb6485273080e)[event.key.toLowerCase()] || 0;\n    for (const modifier of (0, $945d8fe7644f77c5$export$c2f15f629432a51d))code = 2 * code + (event[`${modifier}Key`] ? 1 : 0);\n    return code;\n}\n\n\n\n\n\nfunction $06051cacf3d04ec1$export$b109b10146e8f9ba(sequence) {\n    return sequence.map((0, $d1a4178f437f25ce$export$e0c709538cb8ae18));\n}\nfunction $06051cacf3d04ec1$export$4cb205243eb10110(sequence) {\n    if (sequence.length > 4) throw `Can't encode sequence of more than 4 keys!`;\n    let code = 0;\n    for (const key of sequence)code = code * (0, $945d8fe7644f77c5$export$df1afef858d2d2a1) + (0, $d1a4178f437f25ce$export$a0511d6cbab6225d)(key);\n    return code;\n}\nfunction $06051cacf3d04ec1$export$52460a43741a23b4(sequence) {\n    const keys = [];\n    while(sequence > 0){\n        keys.unshift((0, $d1a4178f437f25ce$export$b983cdf2c2084305)(sequence % 8192));\n        sequence = sequence >> 13;\n    }\n    return keys;\n}\nfunction $06051cacf3d04ec1$export$6199ce3afbf6d7f6(seq) {\n    if (seq < (0, $945d8fe7644f77c5$export$df1afef858d2d2a1)) return 1;\n    if (seq < (0, $945d8fe7644f77c5$export$4e5c8f1854de11bd)) return 2;\n    if (seq < (0, $945d8fe7644f77c5$export$5a85c95189ba5484)) return 3;\n    return 4;\n}\nfunction $06051cacf3d04ec1$export$8cb364356ea2d022(keys) {\n    const result = [];\n    let sequenceCode = 0;\n    let multiplier = 0;\n    for(let i = keys.length - 1; i >= 0; i--){\n        sequenceCode = 2 ** multiplier * keys[i] + sequenceCode;\n        multiplier = multiplier + 13;\n        result.push(sequenceCode);\n    }\n    return result;\n}\n\n\nfunction $11b591822c30f2b7$export$e6a0daad8304de(data = {}) {\n    return {\n        history: [],\n        historySize: 0,\n        bindings: new Map(),\n        disabledSequenceCodes: new Set(),\n        ...data\n    };\n}\nfunction $11b591822c30f2b7$export$2666eec10feb506f(state, sequence, fn) {\n    const sequenceCode = (0, $06051cacf3d04ec1$export$4cb205243eb10110)((0, $06051cacf3d04ec1$export$b109b10146e8f9ba)(sequence));\n    if (!state.bindings.has(sequenceCode)) state.bindings.set(sequenceCode, new Set());\n    state.bindings.get(sequenceCode).add(fn);\n    return $11b591822c30f2b7$export$3b88b12a1b2479e8(state);\n}\nfunction $11b591822c30f2b7$export$164d2c5f74d5827c(state, sequence, fn) {\n    const sequenceCode = (0, $06051cacf3d04ec1$export$4cb205243eb10110)((0, $06051cacf3d04ec1$export$b109b10146e8f9ba)(sequence));\n    const fns = state.bindings.get(sequenceCode);\n    if (fns) {\n        fns.delete(fn);\n        if (fns.size == 0) state.bindings.delete(sequenceCode);\n    }\n    return $11b591822c30f2b7$export$3b88b12a1b2479e8(state);\n}\nfunction $11b591822c30f2b7$export$445cc5a591c8a8a2(state, sequence) {\n    const sequenceCode = (0, $06051cacf3d04ec1$export$4cb205243eb10110)((0, $06051cacf3d04ec1$export$b109b10146e8f9ba)(sequence));\n    state.disabledSequenceCodes.delete(sequenceCode);\n    return state;\n}\nfunction $11b591822c30f2b7$export$21b222afdafd214b(state, sequence) {\n    const sequenceCode = (0, $06051cacf3d04ec1$export$4cb205243eb10110)((0, $06051cacf3d04ec1$export$b109b10146e8f9ba)(sequence));\n    state.disabledSequenceCodes.add(sequenceCode);\n    return state;\n}\nfunction $11b591822c30f2b7$export$1191ff934e9b979c(state, event) {\n    const key = (0, $e37d79d2c9101d6e$export$81dbaac8d5335cb6)(event);\n    const previousKey = state.history.at(-1);\n    if ((0, $d1a4178f437f25ce$export$f7511445e7083e2c)(previousKey, key)) state.history.pop();\n    state.history.push(key);\n    if (state.history.length > state.historySize) state.history.shift();\n    return state;\n}\nfunction $11b591822c30f2b7$export$a84ac9f6f555b44a(state) {\n    const callbacks = [];\n    for (const sequenceCode of (0, $06051cacf3d04ec1$export$8cb364356ea2d022)(state.history)){\n        if (state.disabledSequenceCodes.has(sequenceCode)) continue;\n        callbacks.push(...state.bindings.get(sequenceCode) || []);\n    }\n    return callbacks;\n}\nfunction $11b591822c30f2b7$export$d6e5ca10785815df(state, event) {\n    state = $11b591822c30f2b7$export$1191ff934e9b979c(state, event);\n    const fns = $11b591822c30f2b7$export$a84ac9f6f555b44a(state);\n    for (const fn of fns)fn(event);\n    return [\n        state,\n        fns\n    ];\n}\nfunction $11b591822c30f2b7$export$3b88b12a1b2479e8(state) {\n    state.historySize = 0;\n    for (const code of state.bindings.keys())state.historySize = Math.max(state.historySize, (0, $06051cacf3d04ec1$export$6199ce3afbf6d7f6)(code));\n    return state;\n}\n\n\nclass $3692663818ad2bcc$export$a428cd33b25d5283 {\n    add(...args) {\n        const keys = args.slice(0, -1);\n        const fn = args.at(-1);\n        this.state = (0, $11b591822c30f2b7$export$2666eec10feb506f)(this.state, keys, fn);\n        return this;\n    }\n    remove(...args) {\n        const keys = args.slice(0, -1);\n        const fn = args.at(-1);\n        this.state = (0, $11b591822c30f2b7$export$164d2c5f74d5827c)(this.state, keys, fn);\n        return this;\n    }\n    enable(...keys) {\n        this.state = (0, $11b591822c30f2b7$export$445cc5a591c8a8a2)(this.state, keys);\n        return this;\n    }\n    disable(...keys) {\n        this.state = (0, $11b591822c30f2b7$export$21b222afdafd214b)(this.state, keys);\n        return this;\n    }\n    handle(event) {\n        const [state, fns] = (0, $11b591822c30f2b7$export$d6e5ca10785815df)(this.state, event);\n        this.state = state;\n        return fns.length > 0;\n    }\n    constructor(state){\n        this.state = state;\n        this.add = this.add.bind(this);\n        this.remove = this.remove.bind(this);\n        this.handle = this.handle.bind(this);\n    }\n}\n\n\n\nvar $b289af7168eb38ef$exports = {};\n\n\nfunction $3d193bcdb4e39103$export$2e2bcd8739ae039() {\n    return new (0, $3692663818ad2bcc$export$a428cd33b25d5283)((0, $11b591822c30f2b7$export$e6a0daad8304de)());\n}\n\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ctrl-keys/dist/index.mjs\n");

/***/ })

};
;